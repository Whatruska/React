{"version":3,"sources":["img/user.png","comp/Preloader/Preloader.module.css","preloader.svg","comp/Profile/ProfileContainer.module.css","comp/Greetings/Greeting.module.css","img/Greetings.gif","logo.svg","comp/Navbar/Navbar.module.css","comp/UserList/List/UserList.module.css","comp/Profile/Info/Info.module.css","img/profile-header.jpeg","comp/UserList/UserListItem/UserListItem.module.css","serviceWorker.js","utils/validators/maxLength.js","comp/Navbar/Sidebar/Friend/Friend.js","comp/Navbar/Sidebar/Sidebar.js","comp/Navbar/Navbar.js","comp/Messages/User/User.js","comp/Validated/TextArea/TextArea.js","utils/validators/required.js","comp/Messages/Dialog/Dialog.js","data/dialogs.js","data/posts.js","data/users.js","copiers/messagesPageCopier.js","reducers/messageReducer.js","comp/Messages/Dialog/Message/Message.js","selectors/messageSelector.js","comp/Messages/Dialog/DialogContainer.js","comp/Messages/Messages.js","comp/Profile/Info/Info.js","comp/Profile/Posts/Posts.js","copiers/userPagesCopier.js","reducers/postReducer.js","comp/Profile/Post/Post.js","comp/Profile/Posts/PostsContainer.js","utils/validators/minLength.js","copiers/profilePageCopier.js","DAL/api.js","DAL/Profile/profileAPI.js","reducers/profileReducer.js","comp/Profile/Status/Status.js","selectors/profileSelector.js","comp/Profile/Status/StatusContainer.js","comp/Profile/Profile.js","copiers/userListCopier.js","DAL/UserList/userListAPI.js","DAL/UserList/Follow/followAPI.js","reducers/userListReducer.js","comp/Preloader/Preloader.js","comp/UserList/List/UserList.js","comp/UserList/UserListItem/UserListItem.js","selectors/userListSelector.js","comp/UserList/UserListItem/UserListItemContainer.js","selectors/loginSelector.js","comp/UserList/UserListContainer.js","comp/Profile/ProfileContainer.js","DAL/Auth/authAPI.js","reducers/loginReducer.js","comp/Validated/Input/Input.js","utils/validators/email.js","comp/Login/Login.js","comp/Login/LoginContainer/LoginContainer.js","comp/Greetings/Greeting.js","reducers/initialReducer.js","selectors/initialSelector.js","comp/Main.js","comp/Header/Header.js","comp/Header/HeaderContainer/HeaderContainer.js","App.js","reducers/sidebarReducer.js","redux_store.js","render.js","index.js","comp/Login/Login.module.css","comp/Header/Header.module.css","comp/Profile/Posts/Posts.module.css","comp/Navbar/Sidebar/Sidebar.module.css","comp/Navbar/Sidebar/Friend/Friend.module.css","comp/Validated/TextArea/TextArea.module.css","comp/Profile/Post/Post.module.css","img/ava.jpeg","comp/Messages/User/User.module.css","comp/Messages/Dialog/Dialog.module.css","comp/Messages/Dialog/Message/Message.module.css","comp/Profile/Status/Status.module.css","comp/Validated/Input/Input.module.css","comp/Messages/Messages.module.css","img/Misha.jpg","img/Anya.jpg","img/Zeka.jpg","comp/Profile/Profile.module.css","comp/Login/LoginContainer/LoginContainer.module.css"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","length","Friend","props","className","classes","avatar","img","src","alt","name","Sidebar","renderedFriends","friends","map","friend","to","active","heading","Navbar","list","item","link","activeClassName","User","user","id","TextArea","input","meta","textarea","touched","span","required","value","maxLengthValidator","MessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","button","Dialog","renderedMessages","addMsg","dialogs","userId","dialog","text","author","posts","p","likes","getPostsByID","i","getUserByLogin","login","users","Me","Anya","Misha","Zeka","getUserByID","date","city","phone","vk","My_avatar","header","profile_header","status","Anya_ava","followed","Zeka_ava","Misha_ava","getDeepMessagesPageCopy","stateCopy","messages","initialState","msg","messageReducer","action","type","push","Message","getMessages","messagesPage","getMsgsByID","d","ConnectedDialogContainer","connect","dispatch","add","addMsgActionCreator","stateProps","dispatchProps","message","data","Messages","renderedUsers","renderedDialogs","path","exact","render","Info","info","userInfo","fio","contacts","Posts","renderedPosts","getUserPagesCopy","myPostsCount","postReducer","post","Post","ava","lengthValidator","minLength","PostsFormRedux","ConnectedPostsContainer","arr","addPostActionCreator","renderPosts","addPost","profilePageCopier","isFetching","currentProfile","api","axios","create","baseURL","withCredentials","headers","profileAPI","getProfileRequest","get","formProfileUrl","response","fullName","photos","large","getStatusRequest","PROFILE_URL","formStatusUrl","undefined","setProfileActionCreator","profile","refreshThunkCreator","RegExp","requestThunkCreator","profileReducer","React","createRef","Status","editMode","ref","onBlur","updateStatus","current","deactivateEdit","onDoubleClick","activateEdit","getCurrentProfile","profilePage","getStatus","setStatusActionCreator","statusThunkCreator","useState","setEditMode","useEffect","Profile","PostsContainer","userListCopier","userListAPI","getPageRequest","count","size","USERS_URL","formPageRequestUrl","items","formLoginRequest","followAPI","getFollowRequest","getUnfollowRequest","delete","pageSize","pageCount","setPageCountActionCreator","userListReducer","Preloader","preloader","UserList","wrapper","btns_wrapper","onClick","refresh","dec","btn","disabled","page_counter","inc","UserListItem","followClass","unfollow","follow","followText","e","preventDefault","getUsers","userList","getPageSize","getPageCount","resultCode","followActionCreator","followThunkCreator","unfollowActionCreator","unfollowThunkCreator","toggleFetching","getEmail","loginData","email","isLogged","getErrorMessage","errorMessage","connected","mode","setUsersActionCreator","userItems","listItems","result","m","column","pop","divideItemsToColumns","getRenderedUserItems","routeComp","withRouter","params","Container","authAPI","getAuthRequest","getLoginRequest","pass","remember","LOGIN_URL","formLoginUrl","getLogoutRequest","loginReducer","Input","toString","indexOf","LoginFormRedux","loginForm","placeholder","checkbox","Login","this","Component","setEmailActionCreator","loginThunkCreator","preloader_wrapper","password","Greetings","Greeting","gif","isInitialized","initialReducer","init","Main","myProfile","userPages","basename","process","friendInfo","UserListContainer","auth","finishInit","setUserDataActionCreator","Header","logo_wrapper","logo","login_block","logout","App","store","sidebarReducer","reducers","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","s","ReactDOM","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.33a8e64f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.0f16ef6a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__29oWh\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.7a697984.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ProfileContainer_Container__1OEiY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Greeting\":\"Greeting_Greeting__36b_x\",\"title\":\"Greeting_title__11MSw\"};","module.exports = __webpack_public_path__ + \"static/media/Greetings.d301fdc8.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__1tqw3\",\"list\":\"Navbar_list__1JbT0\",\"item\":\"Navbar_item__2p_ZY\",\"link\":\"Navbar_link__3DrrX\",\"active\":\"Navbar_active__bbJag\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserList\":\"UserList_UserList__2-w5x\",\"wrapper\":\"UserList_wrapper__14pA6\",\"column\":\"UserList_column__2Jpwq\",\"btn\":\"UserList_btn__2WnJk\",\"btns_wrapper\":\"UserList_btns_wrapper__ZAxJf\",\"page_counter\":\"UserList_page_counter__2gmk5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Info\":\"Info_Info__1C4DF\",\"avatar\":\"Info_avatar__3XofM\",\"data\":\"Info_data__bHTAE\",\"contacts\":\"Info_contacts__2HTWC\",\"fio\":\"Info_fio__1JtBQ\"};","module.exports = __webpack_public_path__ + \"static/media/profile-header.d05892b6.jpeg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserListItem\":\"UserListItem_UserListItem__30QEZ\",\"meta\":\"UserListItem_meta__3C-Rr\",\"avatar\":\"UserListItem_avatar__3j_t8\",\"btn\":\"UserListItem_btn__2kZgt\",\"follow\":\"UserListItem_follow__1HCrY\",\"unfollow\":\"UserListItem_unfollow__1bf2v\",\"info\":\"UserListItem_info__Vd-ma\",\"login\":\"UserListItem_login__3PsVZ\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const maxLength = (length) => {\n    return (value) => {\n    if (value && value.length > length) return \"Max length is \" + length;\n    return undefined;\n    }\n}","import React from \"react\";\nimport classes from './Friend.module.css';\n\nconst Friend = (props) => {\n    return (\n        <div className={classes.Friend}>\n            <div className={classes.avatar}>\n                <img className={classes.img} src={props.avatar} alt=\"Avatar\"/>\n            </div>\n            <div className={classes.name}>\n                {props.name}\n            </div>\n        </div>\n    );\n};\n\nexport default Friend;","import React from \"react\";\nimport classes from './Sidebar.module.css';\nimport Friend from \"./Friend/Friend\";\nimport {NavLink} from \"react-router-dom\";\n\nconst Sidebar = (props) => {\n    let info = props.state.friends;\n    let renderedFriends = info.map((friend) => {\n        return (\n            <NavLink to={\"../Friend/\" + friend.name} active={classes.active}>\n                <Friend avatar={friend.avatar} name={friend.name}/>\n            </NavLink>\n        );\n    });\n    return(\n        <div className={classes.Sidebar}>\n            <h2 className={classes.heading}>Friends</h2>\n            <div className={classes.friends}>\n                {renderedFriends}\n            </div>\n         </div>\n    );\n};\n\nexport default Sidebar;","import React from 'react';\nimport classes from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport Sidebar from \"./Sidebar/Sidebar\";\n\nconst Navbar = (props) => {\n    return(\n        <div className={classes.Navbar}>\n            <ul className={classes.list}>\n                <li className={classes.item}>\n                    <NavLink className={classes.link} to=\"../Profile\" activeClassName={classes.active}>Profile</NavLink>\n                </li>\n                <li className={classes.item}>\n                    <NavLink className={classes.link} to=\"../Messages\" activeClassName={classes.active}>Messages</NavLink>\n                </li>\n                <li className={classes.item}>\n                    <NavLink className={classes.link} to=\"../UserListAPIComponent\" activeClassName={classes.active}>Users</NavLink>\n                </li>\n            </ul>\n            <Sidebar state={props.state}/>\n        </div>\n    );\n}\n\nexport default Navbar;","import React from \"react\";\nimport classes from \"./User.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nconst User = (props) => {\n    return(\n        <div className={classes.user}>\n            <NavLink to={\"/Messages/\" + props.id} className={classes.link} activeClassName={classes.active}>{props.name}</NavLink>\n        </div>\n    );\n}\n\nexport default User;","import React from \"react\";\nimport classes from \"./TextArea.module.css\";\n\nexport const TextArea = ({input, meta, ...props}) => {\n    return(\n        <div className={classes.TextArea}>\n            <textarea {...input} {...props} className={classes.textarea + (meta.error && meta.touched ? \" \" + classes.error : \"\")}/>\n            {meta.error && meta.touched ? <div className={classes.span}>{meta.error}</div> : <></>}\n        </div>\n    );\n}","export const required = value => {\n    if (!value || value === \"\") return \"Field is required\";\n    return undefined;\n}","import React from \"react\";\nimport classes from \"./Dialog.module.css\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {TextArea} from \"../../Validated/TextArea/TextArea\";\nimport {required} from \"../../../utils/validators/required\";\nimport {maxLength} from \"../../../utils/validators/maxLength\";\n\nconst maxLengthValidator = maxLength(100);\n\nlet MessageForm = (props) => {\n    return(\n        <form className={classes.form} onSubmit={props.handleSubmit}>\n            <Field component={TextArea} name={\"message\"} validate={[required, maxLengthValidator]}></Field>\n            <button className={classes.button}>Submit</button>\n        </form>\n    );\n}\n\nlet MessageFormRedux = reduxForm({form : \"messageForm\"})(MessageForm);\n\nconst Dialog = (props) => {\n    return(\n        <div className={classes.Dialog}>\n            {props.renderedMessages}\n            <MessageFormRedux onSubmit={props.addMsg}/>\n        </div>\n    );\n};\n\nexport default Dialog;","let dialogs = [\n    {\n        userId : 1,\n        dialog : [\n            {\n                text : \"Hi\",\n                author : \"Me\"\n            },\n            {\n                text : \"How are you?\",\n                author : \"Misha\"\n            },\n            {\n                text : \"I`m gonna hang out\",\n                author : \"Me\"\n            }\n        ]\n    },\n    {\n        userId : 2,\n        dialog : [\n            {\n                text : \"Hi, Ann\",\n                author : \"Me\"\n            },\n            {\n                text : \"How are you?\",\n                author : \"Ann\"\n            },\n            {\n                text : \"I`m fine\",\n                author : \"Me\"\n            }\n        ]\n    },\n    {\n        userId : 3,\n        dialog : [\n            {\n                text : \"Hi, Zeka\",\n                author : \"Me\"\n            },\n            {\n                text : \"Let`s play CS:GO\",\n                author : \"Zeka\"\n            },\n            {\n                text : \"I`m fine\",\n                author : \"Me\"\n            }\n        ]\n    },\n    {\n        userId : 4,\n        dialog : [\n            {\n                text : \"Hi\",\n                author : \"Me\"\n            },\n            {\n                text : \"How are you?\",\n                author : \"Azat\"\n            },\n            {\n                text : \"I`m gonna hang out\",\n                author : \"Me\"\n            }\n        ]\n    }\n];\n\nexport default dialogs;","let posts = [\n    {\n        userId : 1,\n        p : [\n            {\n                text :\"Hi, wassup?\",\n                likes : 45\n            },\n            {\n                text: \"How are you?\",\n                likes: 24\n            }\n        ]\n    },\n    {\n        userId : 2,\n        p : [\n            {\n                text :\"Hi, i`m Ann\",\n                likes : 75\n            },\n            {\n                text: \"I really love dogs\",\n                likes: 97\n            }\n        ]\n    },\n    {\n        userId : 3,\n        p : [\n            {\n                text :\"Hi, I`m Misha?\",\n                likes : 24\n            },\n            {\n                text: \"Sport one love\",\n                likes: -32\n            }\n        ]\n    },\n    {\n        userId : 4,\n        p : [\n            {\n                text :\"Hi, I`m Zeka?\",\n                likes : 36\n            },\n            {\n                text: \"Омск топ\",\n                likes: 100000002\n            }\n        ]\n    }\n];\n\nexport default posts;","import Misha_ava from \"../img/Misha.jpg\";\nimport Anya_ava from \"../img/Anya.jpg\";\nimport Zeka_ava from \"../img/Zeka.jpg\";\nimport My_avatar from \"../img/ava.jpeg\";\nimport profile_header from \"../img/profile-header.jpeg\";\nimport posts from \"./posts\";\n\nlet getPostsByID = (id) => {\n    for (let i = 0; i < posts.length; i++){\n        if (posts[i].userId === id){\n            return posts[i].p;\n        }\n    }\n};\n\nlet getUserByLogin = (login) => {\n    let users = [Me,Anya,Misha,Zeka];\n    for (let i = 0; i < users.length; i++){\n        if (users[i].login === login){\n            return users[i];\n        }\n    }\n};\n\nlet getUserByID = (id) => {\n    let users = [Me,Anya,Misha,Zeka];\n    for (let i = 0; i < users.length; i++){\n        if (users[i].id === id){\n            return users[i];\n        }\n    }\n};\n\nlet Me = {\n    id : 1,\n    login : \"Whatruska\",\n    date : \"03.03.2002\",\n    city : \"Omsk\",\n    phone : \"+79136560423\",\n    vk : \"vk.com/vitdub\",\n    avatar : My_avatar,\n    header: profile_header,\n    posts : getPostsByID(1),\n    status : \"Пишем код слезами\"\n};\n\nlet Anya = {\n    id : 2,\n    login : \"Anya\",\n    date : \"04.05.2001\",\n    city : \"Omsk\",\n    phone : \"+79146578354\",\n    vk : \"vk.com/annya\",\n    avatar : Anya_ava,\n    header : profile_header,\n    posts : getPostsByID(2),\n    followed : false,\n    status : \"Эконом - чемпион\"\n};\n\nlet Zeka = {\n    id : 4,\n    login : \"Zeka\",\n    date : \"25.04.1996\",\n    city : \"Omsk\",\n    phone : \"+79146578354\",\n    vk : \"vk.com/zeka\",\n    avatar : Zeka_ava,\n    header : profile_header,\n    posts : getPostsByID(4),\n    followed : true,\n    status : \"I love Siberia\"\n};\n\nlet Misha = {\n    id : 3,\n    login : \"Misha\",\n    date : \"28.31.2001\",\n    city : \"Omsk\",\n    phone : \"+79146578354\",\n    vk : \"vk.com/Misha\",\n    avatar : Misha_ava,\n    header : profile_header,\n    posts : getPostsByID(3),\n    followed : false,\n    status : \"Спорт - это жизнь\"\n};\n\nlet friends = [\n    {\n        name : \"Misha\",\n        avatar : Misha_ava\n    },\n    {\n        name : \"Anya\",\n        avatar : Anya_ava\n    },\n    {\n        name : \"Zeka\",\n        avatar : Zeka_ava\n    }\n];\n\nlet users = [\n    {\n        id: 1,\n        name : \"Misha\"\n    },\n    {\n        id: 2,\n        name : \"Anya\"\n    },\n    {\n        id: 3,\n        name : \"Evgenii\"\n    },\n    {\n        id: 4,\n        name : \"Azat\"\n    },\n];\n\nexport {users, friends, Me, Misha, Zeka, Anya, getUserByLogin, getUserByID};","let getDeepMessagesPageCopy = (state) => {\n    let stateCopy = {...state};\n    stateCopy.users = [...state.users];\n    for (let i = 0; i < state.users.length; i++){\n        stateCopy.users[i] = {...state.users[i]};\n        stateCopy.users[i].id = state.users[i].id;\n        stateCopy.users[i].name = state.users[i].name;\n    }\n    stateCopy.messages = [...state.messages];\n    for (let i = 0; i < state.messages.length; i++){\n        stateCopy.messages[i] = {...state.messages[i]};\n        stateCopy.messages[i].dialog = [...state.messages[i].dialog];\n        stateCopy.messages[i].userId = state.messages[i].userId;\n    }\n    return stateCopy;\n};\n\nexport default getDeepMessagesPageCopy;","import dialogs from \"../data/dialogs\";\nimport {users} from \"../data/users\";\nimport getDeepMessagesPageCopy from \"../copiers/messagesPageCopier\";\n\nconst ADD_MSG = 'ADD-MSG';\n\nlet initialState = {\n    users: users,\n    messages : dialogs,\n    msg : \"\"\n};\n\nexport const addMsgActionCreator = (msg, id) => {\n    return{\n        type : ADD_MSG,\n        text : msg,\n        id : id\n    }\n};\n\nexport const messageReducer = (state = initialState, action) => {\n\n    let stateCopy = getDeepMessagesPageCopy(state);\n\n    switch (action.type) {\n        case ADD_MSG : {\n            for (let i = 0; i < stateCopy.messages.length; i++){\n                if (stateCopy.messages[i].userId === action.id){\n                    stateCopy.messages[i].dialog.push({\n                        text : action.text,\n                        author : \"Me\"\n                    });\n                    return stateCopy;\n                }\n            }\n            break;\n        }\n        default : {\n            return stateCopy;\n        }\n    }\n};\n\nexport default messageReducer;\n","import React from \"react\";\nimport classes from \"./Message.module.css\";\n\nconst Message = (props) => {\n    return(\n        <div className={classes.Message}>\n            <div className={classes.author}>\n                {props.author + \" : \"}\n            </div>\n            <div className={classes.text}>\n                {props.text}\n            </div>\n        </div>\n    );\n}\n\nexport default Message;","const getUsers = (state) => state.messagesPage.users;\nconst getMessages = (state) => state.messagesPage.messages;\nconst getMsg = (state) => state.messagesPage.msg;\n\nexport {getMessages, getMsg, getUsers}\n","import {connect} from \"react-redux\";\nimport Dialog from \"./Dialog\";\nimport {addMsgActionCreator} from \"../../../reducers/messageReducer\";\nimport * as React from \"react\";\nimport Message from \"./Message/Message\";\nimport {getMessages} from \"../../../selectors/messageSelector\";\n\nconst DialogContainer = (props) => {\n    let renderMessages = () => props.messages.map((message) => {\n        return(\n            <Message author={message.author} text={message.text}/>\n        );\n    });\n\n    let addMessage = (data) =>{\n        props.add(data.message, props.id);\n    }\n\n    return(<Dialog renderedMessages={renderMessages()} addMsg={addMessage}/>);\n}\n\nlet getMsgsByID = (messages, id) => {\n    for (let i = 0; i < messages.length; i++){\n        let d = messages[i];\n        if (d.userId === id){\n            return d.dialog;\n        }\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return({\n        messages : getMessages(state),\n    });\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return({\n        add : (text, id) => {\n            dispatch(addMsgActionCreator(text, id))\n        }\n    });\n};\n\nlet mergeProps = (stateProps, dispatchProps, props) => {\n    return({\n        id : props.id,\n        messages : getMsgsByID(stateProps.messages, props.id),\n        add : dispatchProps.add\n    });\n};\n\nconst ConnectedDialogContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(DialogContainer);\n\nexport default ConnectedDialogContainer;","import React from \"react\";\nimport classes from './Messages.module.css';\nimport User from \"./User/User\";\nimport {Route} from \"react-router-dom\";\nimport DialogContainer from \"./Dialog/DialogContainer\";\n\nconst Messages = (props) => {\n    let state = props.state;\n    let renderedUsers = state.users.map((user) => {\n        return (\n            <User id={user.id} name={user.name}/>\n        );\n    });\n    let renderedDialogs = state.messages.map((d) => {\n        return(\n            <Route path={'/Messages/' + d.userId} exact render={() => <DialogContainer id={d.userId}/>}/>\n        );\n    });\n    return (\n        <div className={classes.Messages}>\n            <div className={classes.users}>\n                {renderedUsers}\n            </div>\n            {renderedDialogs}\n        </div>\n    );\n}\n\nexport default Messages;","import React from 'react';\nimport classes from './Info.module.css';\n\nconst Info = (props) => {\n    let info = props.userInfo;\n    return(\n        <div className={classes.Info}>\n            <img className={classes.avatar} src={props.avatar} alt=\"Ava\"/>\n            <div className={classes.data}>\n                <span className={classes.fio}>{info.login}</span>\n                <span className={classes.date}>Birth date : {info.date}</span>\n                <span className={classes.city}>City : {info.city}</span>\n                <span className={classes.contacts}>\n                    <span className={classes.phone}> Tel : {info.phone}</span>\n                    <span className={classes.vk}> Vk : {info.vk}</span>\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default Info;","import React from 'react';\nimport classes from './Posts.module.css';\n\nconst Posts = (props) => {\n    return (\n    <div className={classes.posts}>\n        <h2>Posts</h2>\n        <div className={classes.list}>\n            {props.renderedPosts}\n        </div>\n    </div>\n    );\n}\n\nexport default Posts;","let getUserPagesCopy = (state) => {\n    let stateCopy = {...state};\n    stateCopy.myPostsCount++;\n    for (let i = 0; i < stateCopy.users.length; i++){\n        stateCopy.users[i] = {...state.users[i]};\n        stateCopy.users[i].id = state.users[i].id;\n        stateCopy.users[i].login = state.users[i].login;\n        stateCopy.users[i].date = state.users[i].date;\n        stateCopy.users[i].city = state.users[i].city;\n        stateCopy.users[i].phone = state.users[i].phone;\n        stateCopy.users[i].vk = state.users[i].vk;\n        stateCopy.users[i].avatar = state.users[i].avatar;\n        stateCopy.users[i].header = state.users[i].header;\n        stateCopy.users[i].posts = [...state.users[i].posts];\n    }\n\n    return stateCopy;\n};\n\nexport default getUserPagesCopy;","import {Anya, Zeka, Misha, Me} from \"../data/users\";\nimport getUserPagesCopy from \"../copiers/userPagesCopier\";\n\nconst ADD_POST = 'ADD-POST';\n\nlet initialState = {\n    users :[Me, Zeka, Misha, Anya],\n    myPostsCount : 2\n};\n\nconst postReducer = (state = initialState, action) => {\n\n    let stateCopy = getUserPagesCopy(state);\n\n    switch (action.type) {\n        case ADD_POST : {\n            stateCopy.users[0].posts.push({\n                text : action.post,\n                likes: 0\n            });\n            stateCopy.myPostsCount++;\n            return stateCopy;\n        }\n        default :{\n            return stateCopy;\n        }\n    }\n};\n\nexport const addPostActionCreator = (post) => {\n    return {\n        type : ADD_POST,\n        post : post\n    }\n};\n\nexport default postReducer;","import React from 'react';\nimport classes from './Post.module.css';\n\nconst Post = (props) => {\n    return(\n        <div className={classes.Post}>\n            <img className={classes.avatar} src={props.ava} alt='post author img'/>\n            <div className={classes.text}>\n                {props.text}\n            </div>\n            <div className={classes.likes}>\n                <b>Likes : </b>{props.likes}\n            </div>\n        </div>\n    );\n};\n\nexport default Post;","import {connect} from \"react-redux\";\nimport Posts from \"./Posts\";\nimport {addPostActionCreator} from \"../../../reducers/postReducer\";\nimport {getUserByLogin} from \"../../../data/users\";\nimport React from \"react\";\nimport Post from \"../Post/Post\";\nimport classes from \"./Posts.module.css\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {TextArea} from \"../../Validated/TextArea/TextArea\";\nimport {minLength} from \"../../../utils/validators/minLength\";\n\nlet lengthValidator = minLength(1);\n\nlet PostsForm = (props) => {\n    return(\n        <form className={classes.form} onSubmit={props.handleSubmit}>\n            <Field component={TextArea} name={\"post\"} className={classes.textarea} validate={[lengthValidator]}></Field>\n            <button className={classes.button}>Submit</button>\n        </form>\n    );\n}\n\nlet PostsFormRedux = reduxForm({form : \"postsForm\"})(PostsForm)\n\nconst PostContainer = (props) => {\n    let renderPosts = () => props.posts.map((post) => {\n        return (\n            <Post text={post.text} likes={post.likes} ava={props.avatar}/>\n        );\n    });\n\n    let addPost = (data) => {\n        props.add(data.post);\n    };\n\n    if (props.login === \"Whatruska\"){\n        return(\n            <>\n                <PostsFormRedux onSubmit={addPost}/>\n                <Posts renderedPosts={renderPosts()} addPost={addPost}/>\n            </>\n        );\n    } else {\n        return (\n            <>\n                <Posts renderedPosts={renderPosts()} addPost={addPost}/>\n            </>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return({\n        arr : []\n    });\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return({\n        add :(post) => dispatch(addPostActionCreator(post))\n    });\n};\n\nlet mergeProps = (stateProps, dispatchProps, props) => {\n    let login = props.login;\n    let user = getUserByLogin(login);\n    return({\n        login : login,\n        add : dispatchProps.add,\n        posts : props.posts,\n        avatar : user.avatar\n    });\n};\n\nlet ConnectedPostsContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(PostContainer);\n\nexport default ConnectedPostsContainer;","export const minLength = length => value => {\n    if (value && value.length < length) return \"Min length is \" + length;\n    else if (!value) return \"Field is empty\"\n    return undefined;\n}","let profilePageCopier = (state) => {\n    let stateCopy = {...state};\n    stateCopy.isFetching = state.isFetching;\n    stateCopy.currentProfile = {...state.currentProfile};\n    return stateCopy;\n};\n\nexport default profilePageCopier;","import axios from \"axios\";\n\nconst BASE_URL = \"https://social-network.samuraijs.com/api/1.0/\";\nconst API_KEY = \"584af9e6-8cd1-4b21-a823-66525ee43aae\";\n\nconst api = axios.create({\n    baseURL : BASE_URL,\n    withCredentials : true,\n    headers : {\n        \"API-KEY\" : API_KEY\n    }\n});\n\nexport default api;","import api from \"../api\";\nimport My_avatar from \"../../img/ava.jpeg\";\nimport profile_header from \"../../img/profile-header.jpeg\";\n\nconst PROFILE_URL = \"profile/\";\nconst STATUS_URL = PROFILE_URL + \"status/\";\n\nlet formProfileUrl = (userId) => {\n    return PROFILE_URL + userId\n};\n\nlet formStatusUrl = (userId) => {\n    return STATUS_URL + userId;\n};\n\nconst profileAPI = {\n    getProfileRequest : (userId) => {\n        return api.get(formProfileUrl(userId)).then((response) => response.data).then((response) => {\n            return {\n                id : response.userId,\n                login : response.fullName,\n                date : \"Idcr\",\n                city : \"Omsk\",\n                phone : \"+00000000000\",\n                vk : response.contacts.vk,\n                avatar : response.photos.large === null ? My_avatar : response.photos.large,\n                header: profile_header\n            };\n        });\n    },\n    getStatusRequest : (userId) => {\n        return api.get(formStatusUrl(userId)).then((response) => response.data);\n    }\n};\n\nexport default profileAPI;","import profilePageCopier from \"../copiers/profilePageCopier\";\nimport profileAPI from \"../DAL/Profile/profileAPI\";\nimport {getUserByLogin} from \"../data/users\";\n\nlet FETCH_TYPE = \"FETCH\";\nlet SET_PROFILE = \"SET_PROFILE\";\nlet SET_STATUS = \"STATUS\";\n\nlet initialState = {\n    currentProfile : undefined,\n    isFetching : true,\n    status : \"\"\n};\n\nlet profileReducer = (state = initialState, action) => {\n    let stateCopy = profilePageCopier(state);\n    switch (action.type) {\n        case FETCH_TYPE : {\n            stateCopy.isFetching = !stateCopy.isFetching;\n            break;\n        }\n\n        case SET_PROFILE : {\n            stateCopy.currentProfile = action.profile;\n            break;\n        }\n\n        case SET_STATUS : {\n            stateCopy.status = action.status;\n            break;\n        }\n\n        default : {\n            break;\n        }\n    }\n    return stateCopy;\n};\n\nlet toggleFetchingActionCreator = () => {\n    return({\n        type : FETCH_TYPE\n    });\n};\n\nlet setProfileActionCreator = (profile) => {\n    return({\n        type : SET_PROFILE,\n        profile : profile\n    });\n};\n\nlet setStatusActionCreator = (status) => {\n    return ({\n        type : SET_STATUS,\n        status : status\n    });\n};\n\nlet statusThunkCreator = (userId) => {\n    return (dispatch) => {\n        profileAPI.getStatusRequest(userId).then((status) => {\n            dispatch(setStatusActionCreator(status));\n        });\n    }\n};\n\nlet requestThunkCreator = (userId) => {\n    return (dispatch) => {\n        profileAPI.getProfileRequest(userId).then((profile) => {\n            dispatch(setProfileActionCreator(profile));\n            dispatch(toggleFetchingActionCreator());\n        });\n    }\n};\n\nlet refreshThunkCreator = (userId, isFetching) => {\n    return (dispatch) => {\n        if (!isFetching){\n            dispatch(toggleFetchingActionCreator());\n        }\n        let m = userId.match(new RegExp('\\\\d+'));\n        if (m != null){\n            dispatch(requestThunkCreator(userId));\n        } else {\n            let profile = getUserByLogin(userId);\n            dispatch(setProfileActionCreator(profile));\n            dispatch(toggleFetchingActionCreator());\n        }\n    }\n};\n\nexport {toggleFetchingActionCreator, setProfileActionCreator, setStatusActionCreator, requestThunkCreator, refreshThunkCreator, statusThunkCreator};\nexport default profileReducer;","import React from \"react\";\nimport classes from \"./Status.module.css\";\n\nlet link = React.createRef();\n\nlet Status = (props) => {\n    if (!props.editMode){\n        return (\n            <div onDoubleClick={props.activateEdit} className={classes.status}>\n                Status : {props.status}\n            </div>\n        );\n    } else if (props.id === 1) {\n        return (\n            <input type={\"text\"} className={classes.input} ref={link} onBlur={() => {\n                props.updateStatus(link.current.value);\n                props.deactivateEdit();\n            }}/>\n        );\n    } else {\n        return (\n            <div className={classes.status}>\n                Status : {props.status}\n            </div>\n        );\n    }\n}\n\nexport default Status;","const getCurrentProfile = (state) => state.profilePage.currentProfile;\nconst isFetching = (state) => state.profilePage.isFetching;\nconst getStatus = (state) => state.profilePage.status;\n\nexport {getCurrentProfile, isFetching, getStatus}","import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport {statusThunkCreator} from \"../../../reducers/profileReducer\";\nimport {getUserByID} from \"../../../data/users\";\nimport Status from \"./Status\";\nimport {getStatus} from \"../../../selectors/profileSelector\";\n\nconst StatusContainer = (props) => {\n    let [editMode, setEditMode] = useState(false);\n\n    let activateEdit = () => {\n        setEditMode(true);\n    };\n\n    let deactivateEdit = () => {\n        setEditMode(false);\n    };\n\n    useEffect(() => {\n        props.getStatus(props.id);\n    },[]);\n\n    let updateStatus = (status) => {\n        getUserByID(props.id).status = status;\n    }\n\n    let status = props.status;\n    if (props.id < 5){\n        status = getUserByID(props.id).status;\n    }\n    return(<Status editMode={editMode} status={status} id={props.id} activateEdit={activateEdit} deactivateEdit={deactivateEdit} updateStatus={updateStatus}/>);\n}\n\nlet mapStateToProps = (state) => {\n    return({\n        status : getStatus(state)\n    });\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return ({\n       getStatus : (userId) => {\n           dispatch(statusThunkCreator(userId));\n       },\n    });\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusContainer);","import React from 'react';\nimport classes from './Profile.module.css';\nimport Info from './Info/Info';\nimport PostsContainer from \"./Posts/PostsContainer\";\nimport StatusContainer from \"./Status/StatusContainer\";\n\nconst Profile = (props) => {\n    let state = props.state;\n    let id = state.id;\n    let userInfo = {\n        login : state.login,\n        date : state.date,\n        city : state.city,\n        phone : state.phone,\n        vk : state.vk\n    };\n    return(\n        <div className={classes.Profile}>\n            <img src={state.header} className={classes.header} alt=\"Profile header\"/>\n            <Info userInfo={userInfo} avatar={state.avatar}/>\n            <StatusContainer id={id}/>\n            {state.posts ? <PostsContainer posts={state.posts} login={state.login}/> : <></>}\n        </div>\n    );\n}\n\nexport default Profile;","let userListCopier = (state) => {\n    let stateCopy = {...state};\n    stateCopy.users = [...state.users];\n    for (let i = 0; i < stateCopy.length; i++){\n        stateCopy.users[i] = {...state.users[i]};\n    }\n    return stateCopy;\n};\n\nexport default userListCopier;","import api from \"../api\";\nimport avatar from \"../../img/user.png\";\nimport header from \"../../img/profile-header.jpeg\";\n\nconst USERS_URL = \"users\";\n\nlet formPageRequestUrl = (count = 1, size = 10) => {\n    return USERS_URL + \"?page=\" + count + \"&count=\" + size\n};\n\nconst userListAPI = {\n    getPageRequest : (count, size) => {\n        return api.get(formPageRequestUrl(count, size)).then((response) => {\n                return response.data.items.map((response) =>{\n                    return {\n                        id : response.id,\n                        login:response.name,\n                        followed: response.followed,\n                        avatar: response.photos.large === null ? avatar : response.photos.large,\n                        date: \"00.00.0000\",\n                        city: \"NaN\",\n                        phone: \"NaN\",\n                        vk: \"NaN\",\n                        header: header,\n                        posts: [],\n                    }});\n        });\n    }\n};\n\nexport default userListAPI;","import api from \"../../api\";\n\nconst FOLLOW_URL = \"follow/\";\n\nlet formLoginRequest = (id) => {\n    return FOLLOW_URL + id;\n};\n\nconst followAPI = {\n    getFollowRequest : (id) => {\n        return api.post(formLoginRequest(id),{}).then((response) => response.data);\n    },\n\n    getUnfollowRequest : (id) => {\n        return api.delete(formLoginRequest(id)).then((response) => response.data);\n    }\n};\n\nexport default followAPI;\n\n","import {Anya, Misha, Zeka} from \"../data/users\";\nimport userListCopier from \"../copiers/userListCopier\";\nimport userListAPI from \"../DAL/UserList/userListAPI\";\nimport followAPI from \"../DAL/UserList/Follow/followAPI\";\n\nlet FOLLOW_TYPE = \"FOLLOW\";\nlet UNFOLLOW_TYPE = \"UNFOLLOW\";\nlet SET_USERS = \"USERS\";\nlet SET_PAGE_COUNT = \"SET_PAGE_COUNT\";\nlet SET_PAGE_SIZE = \"SET_PAGE_SIZE\";\nlet TOGGLE_FETCH = \"TOGGLE_FETCH\";\n\nlet initialState = {\n    users : [\n        Anya, Misha, Zeka\n    ],\n    pageSize : 6,\n    pageCount : 1,\n    isFetching : false\n};\n\nlet INC = \"INC\";\nlet DEC = \"DEC\";\n\nlet getUserByID = (id, users) => {\n    for (let i = 0; i < users.length; i++){\n        if (users[i].id === id){\n            return users[i];\n        }\n    }\n};\n\nlet userListReducer = (state = initialState, action) => {\n    let stateCopy = userListCopier(state);\n    switch (action.type) {\n        case FOLLOW_TYPE : {\n            let user = getUserByID(action.id, stateCopy.users);\n            user.followed = true;\n            break;\n        }\n\n        case UNFOLLOW_TYPE : {\n            let user = getUserByID(action.id, stateCopy.users);\n            user.followed = false;\n            break;\n        }\n\n        case SET_USERS : {\n            stateCopy.users = action.users;\n            break;\n        }\n\n        case SET_PAGE_COUNT : {\n            stateCopy.pageCount = action.count;\n            break;\n        }\n\n        case SET_PAGE_SIZE : {\n\n            break;\n        }\n\n        case TOGGLE_FETCH : {\n            stateCopy.isFetching = !stateCopy.isFetching;\n            break\n        }\n\n        default : {\n            return stateCopy;\n        }\n    }\n    return stateCopy;\n};\n\nlet followActionCreator = (id) => {\n    return ({\n        type : FOLLOW_TYPE,\n        id : id\n    });\n};\n\nlet unfollowActionCreator = (id) => {\n    return ({\n        type : UNFOLLOW_TYPE,\n        id : id\n    });\n};\n\nlet setUsersActionCreator = (users) => {\n    return({\n        type : SET_USERS,\n        users : users\n    })\n};\n\nlet setPageCountActionCreator = (count) => {\n    return({\n        type : SET_PAGE_COUNT,\n        count : count\n    });\n};\n\nlet setPageSizeActionCreator = (size) => {\n    return({\n        type : SET_PAGE_SIZE,\n        size : size\n    });\n};\n\nlet toggleFetchActionCreator = () => {\n    return({\n        type : TOGGLE_FETCH\n    });\n};\n\nlet refreshThunkCreator = (mode, pageCount, pageSize) => (dispatch) => {\n    dispatch(toggleFetchActionCreator());\n    if (mode){\n        switch (mode) {\n            case INC : {\n                dispatch(setPageCountActionCreator(++pageCount));\n                break;\n            }\n\n            case DEC : {\n                if (pageCount > 1){\n                    dispatch(setPageCountActionCreator(--pageCount));\n                }\n                break;\n            }\n            default : {\n                break;\n            }\n        }\n    }\n    userListAPI.getPageRequest(pageCount, pageSize).then((items) => {\n        dispatch(setUsersActionCreator(items));\n        dispatch(toggleFetchActionCreator());\n    });\n};\n\nlet followThunkCreator = (id) => (dispatch) => {\n    dispatch(toggleFetchActionCreator());\n    followAPI.getFollowRequest(id).then(\n        (data) => {\n            if (data.resultCode === 0){\n                dispatch(followActionCreator(id));\n            }\n            dispatch(toggleFetchActionCreator());\n        }\n    );\n};\n\nlet unfollowThunkCreator = (id) => (dispatch) => {\n    dispatch(toggleFetchActionCreator());\n    followAPI.getUnfollowRequest(id).then(\n        (data) => {\n            if (data.resultCode === 0){\n                dispatch(unfollowActionCreator(id));\n            }\n            dispatch(toggleFetchActionCreator());\n        }\n    );\n};\n\nexport {followActionCreator, setUsersActionCreator, setPageCountActionCreator, setPageSizeActionCreator, toggleFetchActionCreator, unfollowActionCreator, INC, DEC, refreshThunkCreator, followThunkCreator, unfollowThunkCreator};\n\nexport default userListReducer;","import React from \"react\";\nimport classes from \"./Preloader.module.css\";\nimport preloader from \"../../preloader.svg\"\n\nlet Preloader = () => {\n    return(\n        <img src={preloader} className={classes.Preloader} alt={\"Preloader\"}/>\n    );\n};\n\nexport default Preloader;","import React from \"react\";\nimport classes from \"./UserList.module.css\";\nimport Preloader from \"../../Preloader/Preloader\";\n\nlet UserList = (props) => {\n    return(\n        <div className={classes.UserList}>\n            {props.isFetching\n                ? <Preloader/>\n            : <div className={classes.wrapper}>\n                {props.renderedUsers}\n              </div>\n            }\n            <div className={classes.btns_wrapper}>\n                <button onClick={() => {\n                    props.refresh(props.dec);\n                }} className={classes.btn} disabled={props.isFetching}>{\"<<<\"}</button>\n                <div className={classes.page_counter}>\n                    Page number : {props.pageCount}\n                </div>\n                <button onClick={() => {\n                    props.refresh(props.inc);\n                }} className={classes.btn} disabled={props.isFetching}>{\">>>\"}</button>\n            </div>\n        </div>\n    );\n};\n\nexport default UserList;","import React from \"react\";\nimport classes from \"./UserListItem.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nlet UserListItem = (props) => {\n    let user = props.user;\n    let followClass = user.followed ? classes.unfollow : classes.follow;\n    let followText = user.followed ? \"Unfollow\" : \"Follow\";\n\n    let folFunc = () => {\n        !user.followed ? props.follow(user.id) : props.unfollow(user.id);\n    };\n      return (\n          <div className={classes.UserListItem}>\n              <div className={classes.meta}>\n                  <img className={classes.avatar} src={user.avatar} alt=\"Avatar\"/>\n                  <button type=\"submit\" className={classes.btn + \" \" + followClass} onClick={\n                      (e) => {\n                          e.preventDefault();\n                          folFunc();\n                      }\n                  }>{followText}</button>\n              </div>\n              <div className={classes.info}>\n                  <NavLink className={classes.login} to={\"../User/\" + user.id}>{user.login}</NavLink>\n                  <h4>City : {user.city}</h4>\n                  <h4>Birthday : {user.date}</h4>\n              </div>\n          </div>\n      );\n};\n\nexport default UserListItem;","const getUsers = (state) => state.userList.users;\nconst getPageSize = (state) => state.userList.pageSize;\nconst getPageCount = (state) => state.userList.pageCount;\nconst isFetching = (state) => state.userList.isFetching;\n\nexport {getUsers, getPageCount, getPageSize, isFetching}","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n    toggleFetchActionCreator,\n    followThunkCreator, unfollowThunkCreator\n} from \"../../../reducers/userListReducer\";\nimport UserListItem from \"./UserListItem\";\nimport {isFetching} from \"../../../selectors/userListSelector\";\n\nconst UserListItemContainer = (props) => {\n    return(<UserListItem user={props.user} follow={props.follow} unfollow={props.unfollow}/>);\n}\n\nlet mapStateToProps = (state) => {\n    return ({\n        isFetching : isFetching(state)\n    });\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return({\n        follow : (id) => {\n            dispatch(followThunkCreator(id));\n        },\n        unfollow : (id) => {\n            dispatch(unfollowThunkCreator(id));\n        },\n        toggleFetching : () => {\n            dispatch(toggleFetchActionCreator());\n        }\n    });\n};\n\nlet mergeProps = (stateProps, dispatchProps, props) => {\n    return({\n        isFetching : stateProps.isFetching,\n        user : props.user,\n        follow : dispatchProps.follow,\n        unfollow : dispatchProps.unfollow,\n        toggleFetching : dispatchProps.toggleFetching\n    });\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(UserListItemContainer);","const getUserId = (state) => state.loginData.userId;\nconst getEmail = (state) => state.loginData.email;\nconst isLogged = (state) => state.loginData.isLogged;\nconst isFetching = (state) => state.loginData.isFetching;\nconst getErrorMessage = (state) => state.loginData.errorMessage;\n\nexport {getUserId, getEmail, isLogged, isFetching, getErrorMessage}","import {connect} from \"react-redux\";\nimport {INC, DEC, refreshThunkCreator} from \"../../reducers/userListReducer\";\nimport React, {useEffect} from \"react\";\nimport classes from \"./List/UserList.module.css\";\nimport UserList from \"./List/UserList\";\nimport UserListItemContainer from \"./UserListItem/UserListItemContainer\";\nimport {Redirect} from \"react-router\";\nimport {isLogged} from \"../../selectors/loginSelector\";\nimport {getPageCount, getPageSize, getUsers, isFetching} from \"../../selectors/userListSelector\";\n\nconst UserListAPIComponent = (props) => {\n    let refresh = (mode) => {\n        props.refresh(mode, props.pageCount, props.pageSize);\n    };\n\n    useEffect(() => {\n        refresh();\n    },[]);\n\n    let divideItemsToColumns = (listItems) => {\n        let result = [];\n        let m = [];\n        while (listItems.length > 0){\n            if (m.length === 3){\n                result.push(\n                    <div className={classes.column}>\n                        {m}\n                    </div>\n                );\n                m = []\n            } else {\n                m.push(listItems.pop());\n            }\n        }\n        if (m.length > 0){\n            result.push(\n                <div className={classes.column}>\n                    {m}\n                </div>\n            );\n        }\n        return result;\n    };\n\n    let getRenderedUserItems = (userItems) => {\n        if (userItems){\n            let listItems =  userItems.map((item) => {\n                return <UserListItemContainer user={item}/>\n            });\n            return divideItemsToColumns(listItems);\n        }\n    };\n\n    let renderedUsers = getRenderedUserItems(props.users);\n    if (props.isLogged){\n        return(\n            <UserList\n                renderedUsers={renderedUsers}\n                refresh={refresh}\n                inc={props.inc}\n                dec={props.dec}\n                pageCount={props.pageCount}\n                isFetching={props.isFetching}\n            />\n        );\n    } else {\n        return (\n            <Redirect to={\"/\"}/>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return({\n        isLogged : isLogged(state),\n        users : getUsers(state),\n        pageSize : getPageSize(state),\n        pageCount : getPageCount(state),\n        isFetching : isFetching(state),\n        inc : INC,\n        dec : DEC\n    });\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return({\n        refresh : (mode, pageCount, pageSize) => {\n            dispatch(refreshThunkCreator(mode, pageCount, pageSize))\n        }\n    });\n};\nlet connected = connect(mapStateToProps, mapDispatchToProps)(UserListAPIComponent);\n\nexport default connected;\n","import React, {useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router\";\nimport {refreshThunkCreator} from \"../../reducers/profileReducer\";\nimport Preloader from \"../Preloader/Preloader\";\nimport Profile from \"./Profile\";\nimport classes from \"./ProfileContainer.module.css\";\nimport {getCurrentProfile, isFetching} from \"../../selectors/profileSelector\";\n\nconst ProfileContainer = (props) => {\n\n    let refresh = () => {\n        props.refresh(props.match.params.userId, props.isFetching);\n    };\n\n    useEffect(() => {\n        refresh();\n    },[]);\n\n    let isFetching = props.isFetching;\n    return(\n        <div className={classes.Container}>\n            {isFetching ? <Preloader/> : <Profile state={props.profile}/>}\n        </div>\n    );\n}\n\nlet mapStateToProps = (state) => {\n    return({\n        isFetching : isFetching(state),\n        profile : getCurrentProfile(state)\n    });\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return({\n        refresh : (userId, isFetching) => {\n            dispatch(refreshThunkCreator(userId, isFetching));\n        }\n    });\n};\nlet routeComp = withRouter(ProfileContainer);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(routeComp);\n\n\n","import api from \"../api\";\n\nconst AUTH_URL = \"auth/me\";\nconst LOGIN_URL = \"auth/login\";\n\nlet formLoginUrl = (email, pass, remember) => {\n    return LOGIN_URL + \"?email=\" + email + \"&password=\" + pass + \"&rememberMe=\" + remember;\n};\n\nconst authAPI = {\n     getAuthRequest : () => {\n        return api.get(AUTH_URL).then((response) => response.data);\n    },\n\n     getLoginRequest : (email, pass, remember) => {\n        return api.post(formLoginUrl(email, pass, remember)).then((response) => response.data);\n    },\n\n     getLogoutRequest : () => {\n        return api.delete(LOGIN_URL).then((response) => response.data);\n    }\n};\n\nexport default authAPI;\n\n","import authAPI from \"../DAL/Auth/authAPI\";\n\nlet SET_USER_ID = \"LOGIN_ID\";\nlet SET_EMAIL = \"SET_EMAIL\";\nlet LOG_IN = \"LOG_IN\";\nlet LOG_OUT = \"LOG_OUT\";\nlet SET_ERROR_MSG = \"ERROR\";\nlet FETCH = \"FETCH\";\nlet SET_USER_DATA = \"SET_DATA\";\n\nlet initialState = {\n    userId : 1,\n    email : \"test@email\",\n    isLogged : false,\n    isFetching : false,\n    errorMessage : undefined\n};\n\nlet loginReducer = (state = initialState, action) => {\n    let stateCopy = {...state};\n    switch (action.type) {\n        case SET_USER_ID : {\n            stateCopy.userId = action.id;\n            break;\n        }\n\n        case SET_EMAIL : {\n            stateCopy.email = action.email;\n            break;\n        }\n\n        case LOG_IN : {\n            stateCopy.isLogged = true;\n            break;\n        }\n\n        case LOG_OUT : {\n            stateCopy.isLogged = false;\n            break;\n        }\n\n        case FETCH : {\n            stateCopy.isFetching = !stateCopy.isFetching;\n            break;\n        }\n\n        case SET_ERROR_MSG : {\n            stateCopy.errorMessage = [action.errorMessage];\n            break;\n        }\n\n        case SET_USER_DATA : {\n            let data = action.data;\n            stateCopy.email = data.email;\n            stateCopy.userId = data.userId;\n            stateCopy.isLogged = true;\n            break;\n        }\n\n        default : {\n            return stateCopy;\n        }\n    }\n    return stateCopy;\n};\n\nlet setUserIdActionCreator = (id) => {\n    return({\n        type : SET_USER_ID,\n        id : id\n    });\n};\n\nlet setEmailActionCreator = (email) => {\n    return({\n        type : SET_EMAIL,\n        email : email\n    });\n};\n\nlet loginActionCreator = () => {\n    return({\n        type : LOG_IN\n    });\n};\n\nlet logoutActionCreator = () => {\n    return({\n        type : LOG_OUT\n    });\n};\n\nlet toggleFetchActionCreator = () => {\n    return({\n        type : FETCH\n    });\n};\n\nlet setErrorMessageActionCreator = (error) => {\n    return({\n        type : SET_ERROR_MSG,\n        errorMessage : error\n    });\n};\n\nlet setUserDataActionCreator = (data) => {\n    return({\n        type : SET_USER_DATA,\n        data : data\n    })\n};\n\nlet authThunkCreator = () => {\n     return (dispatch) => {\n         authAPI.getAuthRequest().then(\n             (data) => {\n                 if (data.resultCode === 0) {\n                     dispatch(setUserDataActionCreator(data.data));\n                 }\n             }\n         );\n     }\n};\n\nlet logoutThunkCreator = () => {\n    return (dispatch) => {\n        authAPI.getLogoutRequest().then((data) => {\n            dispatch(logoutActionCreator());\n        });\n    }\n};\n\nlet loginThunkCreator = (email, pass, remember) => {\n    return (dispatch) => {\n        dispatch(toggleFetchActionCreator());\n        authAPI.getLoginRequest(email,pass, remember).then((data) => {\n            if (data.resultCode === 0){\n                dispatch(setEmailActionCreator(email));\n                dispatch(setUserIdActionCreator(data.data.userId));\n                dispatch(loginActionCreator());\n            } else {\n                dispatch(setErrorMessageActionCreator(\"Неверно введены email/пароль\"));\n            }\n            dispatch(toggleFetchActionCreator());\n        });\n    }\n}\n\nexport {setUserIdActionCreator, setEmailActionCreator, loginActionCreator, logoutActionCreator, toggleFetchActionCreator, setErrorMessageActionCreator, setUserDataActionCreator, authThunkCreator, logoutThunkCreator, loginThunkCreator}\n\nexport default loginReducer;","import classes from \"./Input.module.css\";\nimport React from \"react\";\n\nexport const Input = ({input, meta, className, ...props}) => {\n    return(\n        <div className={classes.Input}>\n            <input {...input} {...props} className={className + (meta.error && meta.touched ? \" \" + classes.error : \"\")}/>\n            {meta.error && meta.touched ? <div className={classes.span}>{meta.error}</div> : <></>}\n        </div>\n    );\n}","export const email = email => {\n    if (email && email.toString().indexOf('@') === -1) return \"Invalid email format\";\n    return undefined;\n}","import React from \"react\";\nimport classes from \"./Login.module.css\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../Validated/Input/Input\";\nimport {required} from \"../../utils/validators/required\";\nimport {email} from \"../../utils/validators/email\";\n\nlet LoginForm = (props) => {\n    return(\n        <form className={classes.loginForm} onSubmit={props.handleSubmit}>\n            <Field placeholder={\"E-mail\"} type={\"e-mail\"} name={\"email\"} className={classes.input} component={Input} validate={[required, email]}/>\n            <Field placeholder={\"Password\"} type={\"password\"} name={\"password\"} className={classes.input} component={Input} validate={[required]}/>\n            <Field component={\"input\"} type={\"checkbox\"} name={\"remember\"} className={classes.checkbox}/>\n            <span>Запомнить меня</span>\n            <div>\n                {props.errorMessage}\n            </div>\n            <button type={\"submit\"} className={classes.btn}>Login</button>\n        </form>\n    )\n};\n\nlet LoginFormRedux = reduxForm({form : \"loginForm\"})(LoginForm);\n\nclass Login extends React.Component {\n    render() {\n        return(\n            <div className={classes.Login}>\n                <h1 className={classes.heading}>Welcome</h1>\n                <LoginFormRedux onSubmit={this.props.login} errorMessage={this.props.errorMessage}/>\n            </div>\n        );\n    }\n}\n\nexport default Login;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {loginThunkCreator} from \"../../../reducers/loginReducer\";\nimport Login from \"../Login\";\nimport Preloader from \"../../Preloader/Preloader\";\nimport classes from \"./LoginContainer.module.css\";\nimport {getErrorMessage, isFetching, isLogged} from \"../../../selectors/loginSelector\";\n\nconst LoginContainer = (props) => {\n    let login = (data) => {\n        let email = data.email;\n        let password = data.password;\n        let remember = !!data.remember;\n        props.login(email, password, remember);\n    }\n\n    let renderedMessages = (messages) => {\n        if (messages){\n            return messages.map((item) => {\n                return(\n                    <div className={classes.errorMessage}>{item}</div>\n                );\n            });\n        }\n    };\n\n    let message = renderedMessages(props.errorMessage);\n    if (!props.isLogged){\n        if (props.isFetching){\n            return(\n                <div className={classes.preloader_wrapper}>\n                    <Preloader/>\n                </div>\n                );\n        } else {\n            return <Login login={login} errorMessage={message}/>\n        }\n    }\n    return <></>;\n}\n\nlet mapStateToProps = (state) => {\n    return({\n        isLogged : isLogged(state),\n        isFetching : isFetching(state),\n        errorMessage : getErrorMessage(state)\n    });\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return({\n        login : (email, pass, remember) => {\n            dispatch(loginThunkCreator(email, pass, remember));\n        },\n    });\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);","import React from \"react\";\nimport classes from \"./Greeting.module.css\";\nimport gif from \"../../img/Greetings.gif\"\n\nlet Greetings = () => {\n    return(\n        <div className={classes.Greeting}>\n            <img src={gif} alt=\"gif\"/>\n        </div>\n    );\n};\n\nexport default Greetings;","const INIT_FINISHED = \"INIT_FINISH\"\n\nconst initialState = {\n    isInitialized : false\n};\n\nconst initialReducer = (state = initialState, action) => {\n    let stateCopy = {...state};\n    switch (action.type) {\n        case INIT_FINISHED : {\n            stateCopy.isInitialized = true;\n            return stateCopy;\n        }\n        default : {\n            return stateCopy;\n        }\n    }\n}\n\nlet initFinishActionCreator = () => {\n    return {\n        type : INIT_FINISHED\n    }\n};\nexport default initialReducer;\nexport {initFinishActionCreator}\n","let isInitialized = (state) => {\n    return state.init.isInitialized;\n}\n\nexport {isInitialized}","import React from 'react';\nimport './Main.css';\nimport {BrowserRouter, Redirect, Route} from \"react-router-dom\";\nimport Navbar from './Navbar/Navbar';\nimport Messages from \"./Messages/Messages\";\nimport Profile from \"./Profile/Profile\";\nimport UserListContainer from \"./UserList/UserListContainer\";\nimport ProfileContainer from \"./Profile/ProfileContainer\";\nimport LoginContainer from \"./Login/LoginContainer/LoginContainer\";\nimport {connect} from \"react-redux\";\nimport Greetings from \"./Greetings/Greeting\";\nimport {initFinishActionCreator} from \"../reducers/initialReducer\";\nimport {isLogged} from \"../selectors/loginSelector\";\nimport {authThunkCreator} from \"../reducers/loginReducer\";\nimport Preloader from \"./Preloader/Preloader\";\nimport {isInitialized} from \"../selectors/initialSelector\";\n\nclass Main extends React.Component{\n    myProfile = <Route path={\"/Profile\"} exact render={() => {\n        let profile = this.props.userPages[0];\n        return(<Profile state={profile}/>);\n    }}/>;\n\n    renderedFriends = this.props.userPages.map((user) => {\n        if (user.login !== \"Whatruska\"){\n            return <Route path={\"/Friend/\" + user.login} exact render = {() => <Profile state={user}/>}/>\n        }\n        return undefined\n    });\n\n    render() {\n        if (this.props.isInitialized){\n            if (this.props.isLogged){\n                return(\n                    <BrowserRouter basename={process.env.PUBLIC_URL}>\n                        <div className='Main'>\n                            <Navbar state={this.props.friendInfo}/>\n                            <Route path=\"/Messages\" render={() => <Messages state={this.props.messagesPage}/>}/>\n                            <Route path=\"/UserListAPIComponent\" render={() => <UserListContainer/>}/>\n                            {this.myProfile}\n                            {this.renderedFriends}\n                            <Route path=\"/User/:userId\">\n                                <ProfileContainer/>\n                            </Route>\n                            <Route path=\"/\" exact render={() => <Greetings/>}/>\n                        </div>\n                    </BrowserRouter>\n                );\n            } else {\n                return (\n                    <BrowserRouter>\n                        <div className='Main'>\n                            <Redirect to={\"/\"}/>\n                            <Route path=\"/\" exact render={() => <LoginContainer/>}/>\n                        </div>\n                    </BrowserRouter>\n                );\n            }\n        } else {\n            this.props.auth();\n            this.props.finishInit();\n            return (<Preloader/>);\n        }\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return({\n        messagesPage : state.messagesPage,\n        friendInfo : state.friendInfo,\n        userPages : state.userPages.users,\n        isLogged : isLogged(state),\n        isInitialized : isInitialized(state)\n    });\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return({\n        finishInit : () => {\n            dispatch(initFinishActionCreator());\n        },\n        auth : () => {\n            dispatch(authThunkCreator());\n        }\n    });\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","import React from 'react';\nimport logo from '../../logo.svg';\nimport classes from './Header.module.css';\n\nconst Header = (props) => {\n    return (\n        <div className={classes.Header}>\n            <div className={classes.logo_wrapper}>\n                <img src={logo} className={classes.logo} alt=\"Web App Logo\"/>\n                <span className={classes.heading}>Web App</span>\n            </div>\n            {props.email\n                ? <div className={classes.login_block}>\n                    <div className={classes.email}>\n                        {props.email}\n                    </div>\n                    <button className={classes.logout} onClick={props.logout}>Log out</button>\n                </div>\n                : <></>\n            }\n        </div>\n    );\n};\n\nexport default Header;","import React, {useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n    authThunkCreator,\n    logoutThunkCreator,\n} from \"../../../reducers/loginReducer\";\nimport Header from \"../Header\";\nimport {getEmail, isLogged} from \"../../../selectors/loginSelector\";\n\nconst HeaderContainer = (props) => {\n    if (props.isLogged){\n        return <Header email={props.email} logout={props.logout}/>\n    } else {\n        return <Header/>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return({\n        email : getEmail(state),\n        isLogged : isLogged(state)\n    });\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return({\n        logout : () => {\n            dispatch(logoutThunkCreator());\n        }\n    });\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);","import React from 'react';\nimport Main from './comp/Main';\nimport './App.css';\nimport {Provider} from \"react-redux\";\nimport HeaderContainer from \"./comp/Header/HeaderContainer/HeaderContainer\";\n\nconst App = (props) => {\n  return (\n      <Provider store={props.store}>\n          <div className=\"App\">\n              <HeaderContainer/>\n              <Main/>\n          </div>\n      </Provider>\n  );\n};\nexport default App;\n","import {friends} from \"../data/users\";\n\nlet initialState = {friends};\n\nconst sidebarReducer = (state, action) => {\n    return initialState;\n};\n\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport messageReducer from \"./reducers/messageReducer\";\nimport postReducer from \"./reducers/postReducer\";\nimport sidebarReducer from \"./reducers/sidebarReducer\";\nimport userListReducer from \"./reducers/userListReducer\";\nimport profileReducer from \"./reducers/profileReducer\";\nimport loginReducer from \"./reducers/loginReducer\";\nimport thunk from \"redux-thunk\";\nimport {reducer as formReducer} from \"redux-form\"\nimport initialReducer from \"./reducers/initialReducer\";\n\nlet reducers = combineReducers({\n    messagesPage: messageReducer,\n    userPages: postReducer,\n    friendInfo: sidebarReducer,\n    userList: userListReducer,\n    profilePage: profileReducer,\n    loginData : loginReducer,\n    init : initialReducer,\n    form : formReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport s from \"./redux_store\";\n\nlet render = (store = s) => {\n    ReactDOM.render(<App store={store}/>, document.getElementById('root'));\n};\n\nexport default render;","\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport render from \"./render\";\n\nrender();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__2fTsM\",\"loginForm\":\"Login_loginForm__Zexmj\",\"heading\":\"Login_heading__24uYQ\",\"input\":\"Login_input__1LHfb\",\"checkbox\":\"Login_checkbox__3RdgE\",\"btn\":\"Login_btn__1LGfm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1Wpu4\",\"logo\":\"Header_logo__3x1na\",\"rotate\":\"Header_rotate__2WhJy\",\"logo_wrapper\":\"Header_logo_wrapper__2dpDa\",\"heading\":\"Header_heading__iAZ-V\",\"login_block\":\"Header_login_block__14KiE\",\"logout\":\"Header_logout__3nM0p\",\"email\":\"Header_email__6vB7p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__2MaqE\",\"list\":\"Posts_list__3g1Yz\",\"form\":\"Posts_form__3J6h3\",\"textarea\":\"Posts_textarea__qJL18\",\"button\":\"Posts_button__TayFM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidebar\":\"Sidebar_Sidebar__Ynjep\",\"heading\":\"Sidebar_heading__S33Uo\",\"friends\":\"Sidebar_friends__1wvWd\",\"active\":\"Sidebar_active__2EKeK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Friend\":\"Friend_Friend__30tIP\",\"avatar\":\"Friend_avatar__3hG9Y\",\"img\":\"Friend_img__1NKsq\",\"name\":\"Friend_name__eJXU9\",\"active\":\"Friend_active__2hFLp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextArea\":\"TextArea_TextArea__1YK35\",\"textarea\":\"TextArea_textarea__1RLTi\",\"error\":\"TextArea_error__2W9IO\",\"span\":\"TextArea_span__1fMVr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__1aAK5\",\"avatar\":\"Post_avatar__3dWcG\",\"text\":\"Post_text__3B691\",\"likes\":\"Post_likes__17jD2\"};","module.exports = __webpack_public_path__ + \"static/media/ava.65808d6a.jpeg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__2dbhM\",\"link\":\"User_link__3ZkDn\",\"active\":\"User_active__2D6yT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialog\":\"Dialog_Dialog__3BJVF\",\"form\":\"Dialog_form__27moH\",\"button\":\"Dialog_button__2tx-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__3VEz7\",\"author\":\"Message_author__1uQwJ\",\"text\":\"Message_text__8Q421\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Status_status__2T15R\",\"input\":\"Status_input__38zfl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2BZj3\",\"error\":\"Input_error__3qcYl\",\"span\":\"Input_span__3lGAW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Messages\":\"Messages_Messages__-i9NO\",\"users\":\"Messages_users__2Vb3R\"};","module.exports = __webpack_public_path__ + \"static/media/Misha.7547549a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Anya.9c5e0711.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Zeka.a704a6ae.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__1cg65\",\"header\":\"Profile_header__2ae6Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader_wrapper\":\"LoginContainer_preloader_wrapper__2Ninr\",\"errorMessage\":\"LoginContainer_errorMessage__2RXn0\"};"],"sourceRoot":""}