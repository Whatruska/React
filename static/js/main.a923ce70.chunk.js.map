{"version":3,"sources":["img/user.png","comp/Preloader/Preloader.module.css","preloader.svg","comp/Profile/ProfileContainer.module.css","comp/Greetings/Greeting.module.css","img/Greetings.gif","logo.svg","comp/Navbar/Navbar.module.css","comp/UserList/List/UserList.module.css","comp/Profile/Info/Info.module.css","img/profile-header.jpeg","comp/UserList/UserListItem/UserListItem.module.css","serviceWorker.js","utils/validators/maxLength.js","comp/Navbar/Sidebar/Friend/Friend.js","comp/Navbar/Sidebar/Sidebar.js","comp/Navbar/Navbar.js","comp/Messages/User/User.js","comp/Validated/TextArea/TextArea.js","utils/validators/required.js","comp/Messages/Dialog/Dialog.js","data/dialogs.js","data/posts.js","data/users.js","copiers/messagesPageCopier.js","reducers/messageReducer.js","comp/Messages/Dialog/Message/Message.js","selectors/messageSelector.js","comp/Messages/Dialog/DialogContainer.js","comp/Messages/Messages.js","comp/Profile/Info/Info.js","comp/Profile/Posts/Posts.js","copiers/userPagesCopier.js","reducers/postReducer.js","comp/Profile/Post/Post.js","utils/validators/minLength.js","comp/Profile/Posts/PostsContainer.js","copiers/profilePageCopier.js","DAL/api.js","DAL/Profile/profileAPI.js","reducers/profileReducer.js","comp/Profile/Status/Status.js","selectors/profileSelector.js","comp/Profile/Status/StatusContainer.js","comp/Profile/Profile.js","copiers/userListCopier.js","DAL/UserList/userListAPI.js","DAL/UserList/Follow/followAPI.js","reducers/userListReducer.js","comp/Preloader/Preloader.js","comp/UserList/List/UserList.js","comp/UserList/UserListItem/UserListItem.js","selectors/userListSelector.js","comp/UserList/UserListItem/UserListItemContainer.js","selectors/loginSelector.js","comp/UserList/UserListContainer.js","comp/Profile/ProfileContainer.js","DAL/Auth/authAPI.js","reducers/loginReducer.js","comp/Validated/Input/Input.js","utils/validators/email.js","comp/Login/Login.js","comp/Login/LoginContainer/LoginContainer.js","comp/Greetings/Greeting.js","reducers/initialReducer.js","selectors/initialSelector.js","comp/Main.js","comp/Header/Header.js","comp/Header/HeaderContainer/HeaderContainer.js","App.js","reducers/sidebarReducer.js","redux_store.js","render.js","index.js","comp/Login/Login.module.css","comp/Header/Header.module.css","comp/Profile/Posts/Posts.module.css","comp/Navbar/Sidebar/Sidebar.module.css","comp/Navbar/Sidebar/Friend/Friend.module.css","comp/Validated/TextArea/TextArea.module.css","comp/Profile/Post/Post.module.css","comp/Validated/Input/Input.module.css","img/ava.jpeg","comp/Messages/User/User.module.css","comp/Messages/Dialog/Dialog.module.css","comp/Messages/Dialog/Message/Message.module.css","comp/Profile/Status/Status.module.css","comp/Messages/Messages.module.css","img/Misha.jpg","img/Anya.jpg","img/Zeka.jpg","comp/Profile/Profile.module.css","comp/Login/LoginContainer/LoginContainer.module.css"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","length","Friend","props","className","classes","avatar","img","src","alt","name","Sidebar","renderedFriends","friends","map","friend","to","active","heading","Navbar","list","item","link","activeClassName","User","user","id","TextArea","input","meta","textarea","touched","span","required","value","maxLengthValidator","MessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","button","Dialog","renderedMessages","addMsg","dialogs","userId","dialog","text","author","posts","p","likes","getPostsByID","i","getUserByLogin","login","users","Me","Anya","Misha","Zeka","getUserByID","date","city","phone","vk","My_avatar","header","profile_header","status","Anya_ava","followed","Zeka_ava","Misha_ava","getDeepMessagesPageCopy","stateCopy","messages","initialState","msg","messageReducer","action","type","push","Message","getMessages","messagesPage","getMsgsByID","d","ConnectedDialogContainer","connect","dispatch","add","addMsgActionCreator","stateProps","dispatchProps","message","data","Messages","renderedUsers","renderedDialogs","path","exact","render","Info","info","userInfo","fio","contacts","Posts","renderedPosts","getUserPagesCopy","myPostsCount","postReducer","post","Post","ava","minLength","lengthValidator","PostsFormRedux","ConnectedPostsContainer","arr","addPostActionCreator","renderPosts","addPost","profilePageCopier","isFetching","currentProfile","api","axios","create","baseURL","withCredentials","headers","profileAPI","getProfileRequest","get","formProfileUrl","response","fullName","photos","large","getStatusRequest","PROFILE_URL","formStatusUrl","undefined","setProfileActionCreator","profile","refreshThunkCreator","RegExp","requestThunkCreator","profileReducer","React","createRef","Status","editMode","ref","onBlur","updateStatus","current","deactivateEdit","onDoubleClick","activateEdit","getCurrentProfile","profilePage","getStatus","setStatusActionCreator","statusThunkCreator","useState","setEditMode","useEffect","Profile","PostsContainer","userListCopier","userListAPI","getPageRequest","count","size","USERS_URL","formPageRequestUrl","items","formLoginRequest","followAPI","getFollowRequest","getUnfollowRequest","delete","pageSize","pageCount","setPageCountActionCreator","userListReducer","Preloader","preloader","UserList","wrapper","btns_wrapper","onClick","refresh","dec","btn","disabled","page_counter","inc","UserListItem","followClass","unfollow","follow","followText","e","preventDefault","getUsers","userList","getPageSize","getPageCount","resultCode","followActionCreator","followThunkCreator","unfollowActionCreator","unfollowThunkCreator","toggleFetching","getEmail","loginData","email","isLogged","getErrorMessage","errorMessage","connected","mode","setUsersActionCreator","userItems","listItems","result","m","column","pop","divideItemsToColumns","getRenderedUserItems","routeComp","withRouter","params","Container","authAPI","getAuthRequest","getLoginRequest","pass","remember","LOGIN_URL","formLoginUrl","getLogoutRequest","loginReducer","Input","toString","indexOf","minL","LoginFormRedux","loginForm","placeholder","checkbox","Login","this","Component","setEmailActionCreator","loginThunkCreator","preloader_wrapper","password","Greetings","Greeting","gif","isInitialized","initialReducer","init","Main","myProfile","userPages","friendInfo","UserListContainer","auth","finishInit","setUserDataActionCreator","Header","logo_wrapper","logo","login_block","logout","App","store","sidebarReducer","reducers","combineReducers","formReducer","createStore","applyMiddleware","thunk","s","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a923ce70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.0f16ef6a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__1CrUy\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.b1df8c1d.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ProfileContainer_Container__fxG_f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Greeting\":\"Greeting_Greeting__1ET-m\",\"title\":\"Greeting_title__3vWkW\"};","module.exports = __webpack_public_path__ + \"static/media/Greetings.d301fdc8.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__2B4nH\",\"list\":\"Navbar_list__1daET\",\"item\":\"Navbar_item__2xkPn\",\"link\":\"Navbar_link__1x65O\",\"active\":\"Navbar_active__3oXsd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserList\":\"UserList_UserList__2EIqO\",\"wrapper\":\"UserList_wrapper__1BZYq\",\"column\":\"UserList_column__a0jpE\",\"btn\":\"UserList_btn__qUYxt\",\"btns_wrapper\":\"UserList_btns_wrapper__FsbPQ\",\"page_counter\":\"UserList_page_counter__1MBex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Info\":\"Info_Info__3Aoe6\",\"avatar\":\"Info_avatar__xG-n1\",\"data\":\"Info_data__1mO8o\",\"contacts\":\"Info_contacts__3R0Wh\",\"fio\":\"Info_fio__3qeNE\"};","module.exports = __webpack_public_path__ + \"static/media/profile-header.d05892b6.jpeg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserListItem\":\"UserListItem_UserListItem__3ChfZ\",\"meta\":\"UserListItem_meta__1268y\",\"avatar\":\"UserListItem_avatar__2mLjR\",\"btn\":\"UserListItem_btn__Sj20V\",\"follow\":\"UserListItem_follow__1RdX1\",\"unfollow\":\"UserListItem_unfollow__NsEmq\",\"info\":\"UserListItem_info__1RZjo\",\"login\":\"UserListItem_login__1NbRQ\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const maxLength = (length) => {\r\n    return (value) => {\r\n    if (value && value.length > length) return \"Max length is \" + length;\r\n    return undefined;\r\n    }\r\n}","import React from \"react\";\r\nimport classes from './Friend.module.css';\r\n\r\nconst Friend = (props) => {\r\n    return (\r\n        <div className={classes.Friend}>\r\n            <div className={classes.avatar}>\r\n                <img className={classes.img} src={props.avatar} alt=\"Avatar\"/>\r\n            </div>\r\n            <div className={classes.name}>\r\n                {props.name}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Friend;","import React from \"react\";\r\nimport classes from './Sidebar.module.css';\r\nimport Friend from \"./Friend/Friend\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Sidebar = (props) => {\r\n    let info = props.state.friends;\r\n    let renderedFriends = info.map((friend) => {\r\n        return (\r\n            <NavLink to={\"../Friend/\" + friend.name} active={classes.active}>\r\n                <Friend avatar={friend.avatar} name={friend.name}/>\r\n            </NavLink>\r\n        );\r\n    });\r\n    return(\r\n        <div className={classes.Sidebar}>\r\n            <h2 className={classes.heading}>Friends</h2>\r\n            <div className={classes.friends}>\r\n                {renderedFriends}\r\n            </div>\r\n         </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Sidebar from \"./Sidebar/Sidebar\";\r\n\r\nconst Navbar = (props) => {\r\n    return(\r\n        <div className={classes.Navbar}>\r\n            <ul className={classes.list}>\r\n                <li className={classes.item}>\r\n                    <NavLink className={classes.link} to=\"../Profile\" activeClassName={classes.active}>Profile</NavLink>\r\n                </li>\r\n                <li className={classes.item}>\r\n                    <NavLink className={classes.link} to=\"../Messages\" activeClassName={classes.active}>Messages</NavLink>\r\n                </li>\r\n                <li className={classes.item}>\r\n                    <NavLink className={classes.link} to=\"../UserListAPIComponent\" activeClassName={classes.active}>Users</NavLink>\r\n                </li>\r\n            </ul>\r\n            <Sidebar state={props.state}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport classes from \"./User.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = (props) => {\r\n    return(\r\n        <div className={classes.user}>\r\n            <NavLink to={\"/Messages/\" + props.id} className={classes.link} activeClassName={classes.active}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport classes from \"./TextArea.module.css\";\r\n\r\nexport const TextArea = ({input, meta, ...props}) => {\r\n    return(\r\n        <div className={classes.TextArea}>\r\n            <textarea {...input} {...props} className={classes.textarea + (meta.error && meta.touched ? \" \" + classes.error : \"\")}/>\r\n            {meta.error && meta.touched ? <div className={classes.span}>{meta.error}</div> : <></>}\r\n        </div>\r\n    );\r\n}","export const required = value => {\r\n    if (!value || value === \"\") return \"Field is required\";\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport classes from \"./Dialog.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../../Validated/TextArea/TextArea\";\r\nimport {required} from \"../../../utils/validators/required\";\r\nimport {maxLength} from \"../../../utils/validators/maxLength\";\r\n\r\nconst maxLengthValidator = maxLength(100);\r\n\r\nlet MessageForm = (props) => {\r\n    return(\r\n        <form className={classes.form} onSubmit={props.handleSubmit}>\r\n            <Field component={TextArea} name={\"message\"} validate={[required, maxLengthValidator]}></Field>\r\n            <button className={classes.button}>Submit</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nlet MessageFormRedux = reduxForm({form : \"messageForm\"})(MessageForm);\r\n\r\nconst Dialog = (props) => {\r\n    return(\r\n        <div className={classes.Dialog}>\r\n            {props.renderedMessages}\r\n            <MessageFormRedux onSubmit={props.addMsg}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialog;","let dialogs = [\r\n    {\r\n        userId : 1,\r\n        dialog : [\r\n            {\r\n                text : \"Hi\",\r\n                author : \"Me\"\r\n            },\r\n            {\r\n                text : \"How are you?\",\r\n                author : \"Misha\"\r\n            },\r\n            {\r\n                text : \"I`m gonna hang out\",\r\n                author : \"Me\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userId : 2,\r\n        dialog : [\r\n            {\r\n                text : \"Hi, Ann\",\r\n                author : \"Me\"\r\n            },\r\n            {\r\n                text : \"How are you?\",\r\n                author : \"Ann\"\r\n            },\r\n            {\r\n                text : \"I`m fine\",\r\n                author : \"Me\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userId : 3,\r\n        dialog : [\r\n            {\r\n                text : \"Hi, Zeka\",\r\n                author : \"Me\"\r\n            },\r\n            {\r\n                text : \"Let`s play CS:GO\",\r\n                author : \"Zeka\"\r\n            },\r\n            {\r\n                text : \"I`m fine\",\r\n                author : \"Me\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userId : 4,\r\n        dialog : [\r\n            {\r\n                text : \"Hi\",\r\n                author : \"Me\"\r\n            },\r\n            {\r\n                text : \"How are you?\",\r\n                author : \"Azat\"\r\n            },\r\n            {\r\n                text : \"I`m gonna hang out\",\r\n                author : \"Me\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userId : 5,\r\n        dialog : [\r\n            {\r\n                text : \"Hi\",\r\n                author : \"Me\"\r\n            },\r\n            {\r\n                text : \"How are you?\",\r\n                author : \"Arino\"\r\n            },\r\n            {\r\n                text : \"I`m gonna hang out\",\r\n                author : \"Me\"\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport default dialogs;","let posts = [\r\n    {\r\n        userId : 1,\r\n        p : [\r\n            {\r\n                text :\"Hi, wassup?\",\r\n                likes : 45\r\n            },\r\n            {\r\n                text: \"How are you?\",\r\n                likes: 24\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userId : 2,\r\n        p : [\r\n            {\r\n                text :\"Hi, i`m Ann\",\r\n                likes : 75\r\n            },\r\n            {\r\n                text: \"I really love dogs\",\r\n                likes: 97\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userId : 3,\r\n        p : [\r\n            {\r\n                text :\"Hi, I`m Misha?\",\r\n                likes : 24\r\n            },\r\n            {\r\n                text: \"Army one love\",\r\n                likes: -32\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userId : 4,\r\n        p : [\r\n            {\r\n                text :\"Hi, I`m Zeka?\",\r\n                likes : 36\r\n            },\r\n            {\r\n                text: \"Misha kozel\",\r\n                likes: 100000002\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport default posts;","import Misha_ava from \"../img/Misha.jpg\";\r\nimport Anya_ava from \"../img/Anya.jpg\";\r\nimport Zeka_ava from \"../img/Zeka.jpg\";\r\nimport My_avatar from \"../img/ava.jpeg\";\r\nimport profile_header from \"../img/profile-header.jpeg\";\r\nimport posts from \"./posts\";\r\n\r\nlet getPostsByID = (id) => {\r\n    for (let i = 0; i < posts.length; i++){\r\n        if (posts[i].userId === id){\r\n            return posts[i].p;\r\n        }\r\n    }\r\n};\r\n\r\nlet getUserByLogin = (login) => {\r\n    let users = [Me,Anya,Misha,Zeka];\r\n    for (let i = 0; i < users.length; i++){\r\n        if (users[i].login === login){\r\n            return users[i];\r\n        }\r\n    }\r\n};\r\n\r\nlet getUserByID = (id) => {\r\n    let users = [Me,Anya,Misha,Zeka];\r\n    for (let i = 0; i < users.length; i++){\r\n        if (users[i].id === id){\r\n            return users[i];\r\n        }\r\n    }\r\n};\r\n\r\nlet Me = {\r\n    id : 1,\r\n    login : \"Whatruska\",\r\n    date : \"03.03.2002\",\r\n    city : \"Omsk\",\r\n    phone : \"+79136560423\",\r\n    vk : \"vk.com/vitdub\",\r\n    avatar : My_avatar,\r\n    header: profile_header,\r\n    posts : getPostsByID(1),\r\n    status : \"Пишем код слезами\"\r\n};\r\n\r\nlet Anya = {\r\n    id : 2,\r\n    login : \"Anya\",\r\n    date : \"04.05.2001\",\r\n    city : \"Omsk\",\r\n    phone : \"+79146578354\",\r\n    vk : \"vk.com/annya\",\r\n    avatar : Anya_ava,\r\n    header : profile_header,\r\n    posts : getPostsByID(2),\r\n    followed : false,\r\n    status : \"Эконом - чемпион\"\r\n};\r\n\r\nlet Zeka = {\r\n    id : 4,\r\n    login : \"Zeka\",\r\n    date : \"25.04.1996\",\r\n    city : \"Omsk\",\r\n    phone : \"+79146578354\",\r\n    vk : \"vk.com/zeka\",\r\n    avatar : Zeka_ava,\r\n    header : profile_header,\r\n    posts : getPostsByID(4),\r\n    followed : true,\r\n    status : \"Misha kozel\"\r\n};\r\n\r\nlet Misha = {\r\n    id : 3,\r\n    login : \"Misha\",\r\n    date : \"28.31.2001\",\r\n    city : \"Omsk\",\r\n    phone : \"+79146578354\",\r\n    vk : \"vk.com/Misha\",\r\n    avatar : Misha_ava,\r\n    header : profile_header,\r\n    posts : getPostsByID(3),\r\n    followed : false,\r\n    status : \"За армейку и двор\"\r\n};\r\n\r\nlet friends = [\r\n    {\r\n        name : \"Misha\",\r\n        avatar : Misha_ava\r\n    },\r\n    {\r\n        name : \"Anya\",\r\n        avatar : Anya_ava\r\n    },\r\n    {\r\n        name : \"Zeka\",\r\n        avatar : Zeka_ava\r\n    }\r\n];\r\n\r\nlet users = [\r\n    {\r\n        id: 1,\r\n        name : \"Misha\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name : \"Anya\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name : \"Evgenii\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name : \"Azat\"\r\n    },\r\n    {\r\n        id: 5,\r\n        name : \"Arino\"\r\n    }\r\n];\r\n\r\nexport {users, friends, Me, Misha, Zeka, Anya, getUserByLogin, getUserByID};","let getDeepMessagesPageCopy = (state) => {\r\n    let stateCopy = {...state};\r\n    stateCopy.users = [...state.users];\r\n    for (let i = 0; i < state.users.length; i++){\r\n        stateCopy.users[i] = {...state.users[i]};\r\n        stateCopy.users[i].id = state.users[i].id;\r\n        stateCopy.users[i].name = state.users[i].name;\r\n    }\r\n    stateCopy.messages = [...state.messages];\r\n    for (let i = 0; i < state.messages.length; i++){\r\n        stateCopy.messages[i] = {...state.messages[i]};\r\n        stateCopy.messages[i].dialog = [...state.messages[i].dialog];\r\n        stateCopy.messages[i].userId = state.messages[i].userId;\r\n    }\r\n    return stateCopy;\r\n};\r\n\r\nexport default getDeepMessagesPageCopy;","import dialogs from \"../data/dialogs\";\r\nimport {users} from \"../data/users\";\r\nimport getDeepMessagesPageCopy from \"../copiers/messagesPageCopier\";\r\n\r\nconst ADD_MSG = 'ADD-MSG';\r\n\r\nlet initialState = {\r\n    users: users,\r\n    messages : dialogs,\r\n    msg : \"\"\r\n};\r\n\r\nexport const addMsgActionCreator = (msg, id) => {\r\n    return{\r\n        type : ADD_MSG,\r\n        text : msg,\r\n        id : id\r\n    }\r\n};\r\n\r\nexport const messageReducer = (state = initialState, action) => {\r\n\r\n    let stateCopy = getDeepMessagesPageCopy(state);\r\n\r\n    switch (action.type) {\r\n        case ADD_MSG : {\r\n            for (let i = 0; i < stateCopy.messages.length; i++){\r\n                if (stateCopy.messages[i].userId === action.id){\r\n                    stateCopy.messages[i].dialog.push({\r\n                        text : action.text,\r\n                        author : \"Me\"\r\n                    });\r\n                    return stateCopy;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        default : {\r\n            return stateCopy;\r\n        }\r\n    }\r\n};\r\n\r\nexport default messageReducer;\r\n","import React from \"react\";\r\nimport classes from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <div className={classes.Message}>\r\n            <div className={classes.author}>\r\n                {props.author + \" : \"}\r\n            </div>\r\n            <div className={classes.text}>\r\n                {props.text}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","const getUsers = (state) => state.messagesPage.users;\r\nconst getMessages = (state) => state.messagesPage.messages;\r\nconst getMsg = (state) => state.messagesPage.msg;\r\n\r\nexport {getMessages, getMsg, getUsers}\r\n","import {connect} from \"react-redux\";\r\nimport Dialog from \"./Dialog\";\r\nimport {addMsgActionCreator} from \"../../../reducers/messageReducer\";\r\nimport * as React from \"react\";\r\nimport Message from \"./Message/Message\";\r\nimport {getMessages} from \"../../../selectors/messageSelector\";\r\n\r\nconst DialogContainer = (props) => {\r\n    let renderMessages = () => props.messages.map((message) => {\r\n        return(\r\n            <Message author={message.author} text={message.text}/>\r\n        );\r\n    });\r\n\r\n    let addMessage = (data) =>{\r\n        props.add(data.message, props.id);\r\n    }\r\n\r\n    return(<Dialog renderedMessages={renderMessages()} addMsg={addMessage}/>);\r\n}\r\n\r\nlet getMsgsByID = (messages, id) => {\r\n    for (let i = 0; i < messages.length; i++){\r\n        let d = messages[i];\r\n        if (d.userId === id){\r\n            return d.dialog;\r\n        }\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return({\r\n        messages : getMessages(state),\r\n    });\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return({\r\n        add : (text, id) => {\r\n            dispatch(addMsgActionCreator(text, id))\r\n        }\r\n    });\r\n};\r\n\r\nlet mergeProps = (stateProps, dispatchProps, props) => {\r\n    return({\r\n        id : props.id,\r\n        messages : getMsgsByID(stateProps.messages, props.id),\r\n        add : dispatchProps.add\r\n    });\r\n};\r\n\r\nconst ConnectedDialogContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(DialogContainer);\r\n\r\nexport default ConnectedDialogContainer;","import React from \"react\";\r\nimport classes from './Messages.module.css';\r\nimport User from \"./User/User\";\r\nimport {Route} from \"react-router-dom\";\r\nimport DialogContainer from \"./Dialog/DialogContainer\";\r\n\r\nconst Messages = (props) => {\r\n    let state = props.state;\r\n    let renderedUsers = state.users.map((user) => {\r\n        return (\r\n            <User id={user.id} name={user.name}/>\r\n        );\r\n    });\r\n    let renderedDialogs = state.messages.map((d) => {\r\n        return(\r\n            <Route path={'/Messages/' + d.userId} exact render={() => <DialogContainer id={d.userId}/>}/>\r\n        );\r\n    });\r\n    return (\r\n        <div className={classes.Messages}>\r\n            <div className={classes.users}>\r\n                {renderedUsers}\r\n            </div>\r\n            {renderedDialogs}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport classes from './Info.module.css';\r\n\r\nconst Info = (props) => {\r\n    let info = props.userInfo;\r\n    return(\r\n        <div className={classes.Info}>\r\n            <img className={classes.avatar} src={props.avatar} alt=\"Ava\"/>\r\n            <div className={classes.data}>\r\n                <span className={classes.fio}>{info.login}</span>\r\n                <span className={classes.date}>Birth date : {info.date}</span>\r\n                <span className={classes.city}>City : {info.city}</span>\r\n                <span className={classes.contacts}>\r\n                    <span className={classes.phone}> Tel : {info.phone}</span>\r\n                    <span className={classes.vk}> Vk : {info.vk}</span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Info;","import React from 'react';\r\nimport classes from './Posts.module.css';\r\n\r\nconst Posts = (props) => {\r\n    return (\r\n    <div className={classes.posts}>\r\n        <h2>Posts</h2>\r\n        <div className={classes.list}>\r\n            {props.renderedPosts}\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Posts;","let getUserPagesCopy = (state) => {\r\n    let stateCopy = {...state};\r\n    stateCopy.myPostsCount++;\r\n    for (let i = 0; i < stateCopy.users.length; i++){\r\n        stateCopy.users[i] = {...state.users[i]};\r\n        stateCopy.users[i].id = state.users[i].id;\r\n        stateCopy.users[i].login = state.users[i].login;\r\n        stateCopy.users[i].date = state.users[i].date;\r\n        stateCopy.users[i].city = state.users[i].city;\r\n        stateCopy.users[i].phone = state.users[i].phone;\r\n        stateCopy.users[i].vk = state.users[i].vk;\r\n        stateCopy.users[i].avatar = state.users[i].avatar;\r\n        stateCopy.users[i].header = state.users[i].header;\r\n        stateCopy.users[i].posts = [...state.users[i].posts];\r\n    }\r\n\r\n    return stateCopy;\r\n};\r\n\r\nexport default getUserPagesCopy;","import {Anya, Zeka, Misha, Me} from \"../data/users\";\r\nimport getUserPagesCopy from \"../copiers/userPagesCopier\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\n\r\nlet initialState = {\r\n    users :[Me, Zeka, Misha, Anya],\r\n    myPostsCount : 2\r\n};\r\n\r\nconst postReducer = (state = initialState, action) => {\r\n\r\n    let stateCopy = getUserPagesCopy(state);\r\n\r\n    switch (action.type) {\r\n        case ADD_POST : {\r\n            stateCopy.users[0].posts.push({\r\n                text : action.post,\r\n                likes: 0\r\n            });\r\n            stateCopy.myPostsCount++;\r\n            return stateCopy;\r\n        }\r\n        default :{\r\n            return stateCopy;\r\n        }\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (post) => {\r\n    return {\r\n        type : ADD_POST,\r\n        post : post\r\n    }\r\n};\r\n\r\nexport default postReducer;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return(\r\n        <div className={classes.Post}>\r\n            <img className={classes.avatar} src={props.ava} alt='post author img'/>\r\n            <div className={classes.text}>\r\n                {props.text}\r\n            </div>\r\n            <div className={classes.likes}>\r\n                <b>Likes : </b>{props.likes}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","export const minLength = length => value => {\r\n    if (value && value.length < length) return \"Min length is \" + length;\r\n    else if (!value) return \"Field is empty\"\r\n    return undefined;\r\n}","import {connect} from \"react-redux\";\r\nimport Posts from \"./Posts\";\r\nimport {addPostActionCreator} from \"../../../reducers/postReducer\";\r\nimport {getUserByLogin} from \"../../../data/users\";\r\nimport React from \"react\";\r\nimport Post from \"../Post/Post\";\r\nimport classes from \"./Posts.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../../Validated/TextArea/TextArea\";\r\nimport {minLength} from \"../../../utils/validators/minLength\";\r\n\r\nlet lengthValidator = minLength(1);\r\n\r\nlet PostsForm = (props) => {\r\n    return(\r\n        <form className={classes.form} onSubmit={props.handleSubmit}>\r\n            <Field component={TextArea} name={\"post\"} className={classes.textarea} validate={[lengthValidator]}></Field>\r\n            <button className={classes.button}>Submit</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nlet PostsFormRedux = reduxForm({form : \"postsForm\"})(PostsForm)\r\n\r\nconst PostContainer = (props) => {\r\n    let renderPosts = () => props.posts.map((post) => {\r\n        return (\r\n            <Post text={post.text} likes={post.likes} ava={props.avatar}/>\r\n        );\r\n    });\r\n\r\n    let addPost = (data) => {\r\n        props.add(data.post);\r\n    };\r\n\r\n    if (props.login === \"Whatruska\"){\r\n        return(\r\n            <>\r\n                <PostsFormRedux onSubmit={addPost}/>\r\n                <Posts renderedPosts={renderPosts()} addPost={addPost}/>\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                <Posts renderedPosts={renderPosts()} addPost={addPost}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return({\r\n        arr : []\r\n    });\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return({\r\n        add :(post) => dispatch(addPostActionCreator(post))\r\n    });\r\n};\r\n\r\nlet mergeProps = (stateProps, dispatchProps, props) => {\r\n    let login = props.login;\r\n    let user = getUserByLogin(login);\r\n    return({\r\n        login : login,\r\n        add : dispatchProps.add,\r\n        posts : props.posts,\r\n        avatar : user.avatar\r\n    });\r\n};\r\n\r\nlet ConnectedPostsContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(PostContainer);\r\n\r\nexport default ConnectedPostsContainer;","let profilePageCopier = (state) => {\r\n    let stateCopy = {...state};\r\n    stateCopy.isFetching = state.isFetching;\r\n    stateCopy.currentProfile = {...state.currentProfile};\r\n    return stateCopy;\r\n};\r\n\r\nexport default profilePageCopier;","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://social-network.samuraijs.com/api/1.0/\";\r\nconst API_KEY = \"584af9e6-8cd1-4b21-a823-66525ee43aae\";\r\n\r\nconst api = axios.create({\r\n    baseURL : BASE_URL,\r\n    withCredentials : true,\r\n    headers : {\r\n        \"API-KEY\" : API_KEY\r\n    }\r\n});\r\n\r\nexport default api;","import api from \"../api\";\r\nimport My_avatar from \"../../img/ava.jpeg\";\r\nimport profile_header from \"../../img/profile-header.jpeg\";\r\n\r\nconst PROFILE_URL = \"profile/\";\r\nconst STATUS_URL = PROFILE_URL + \"status/\";\r\n\r\nlet formProfileUrl = (userId) => {\r\n    return PROFILE_URL + userId\r\n};\r\n\r\nlet formStatusUrl = (userId) => {\r\n    return STATUS_URL + userId;\r\n};\r\n\r\nconst profileAPI = {\r\n    getProfileRequest : (userId) => {\r\n        return api.get(formProfileUrl(userId)).then((response) => response.data).then((response) => {\r\n            return {\r\n                id : response.userId,\r\n                login : response.fullName,\r\n                date : \"Idcr\",\r\n                city : \"Omsk\",\r\n                phone : \"+00000000000\",\r\n                vk : response.contacts.vk,\r\n                avatar : response.photos.large === null ? My_avatar : response.photos.large,\r\n                header: profile_header\r\n            };\r\n        });\r\n    },\r\n    getStatusRequest : (userId) => {\r\n        return api.get(formStatusUrl(userId)).then((response) => response.data);\r\n    }\r\n};\r\n\r\nexport default profileAPI;","import profilePageCopier from \"../copiers/profilePageCopier\";\r\nimport profileAPI from \"../DAL/Profile/profileAPI\";\r\nimport {getUserByLogin} from \"../data/users\";\r\n\r\nlet FETCH_TYPE = \"FETCH\";\r\nlet SET_PROFILE = \"SET_PROFILE\";\r\nlet SET_STATUS = \"STATUS\";\r\n\r\nlet initialState = {\r\n    currentProfile : undefined,\r\n    isFetching : true,\r\n    status : \"\"\r\n};\r\n\r\nlet profileReducer = (state = initialState, action) => {\r\n    let stateCopy = profilePageCopier(state);\r\n    switch (action.type) {\r\n        case FETCH_TYPE : {\r\n            stateCopy.isFetching = !stateCopy.isFetching;\r\n            break;\r\n        }\r\n\r\n        case SET_PROFILE : {\r\n            stateCopy.currentProfile = action.profile;\r\n            break;\r\n        }\r\n\r\n        case SET_STATUS : {\r\n            stateCopy.status = action.status;\r\n            break;\r\n        }\r\n\r\n        default : {\r\n            break;\r\n        }\r\n    }\r\n    return stateCopy;\r\n};\r\n\r\nlet toggleFetchingActionCreator = () => {\r\n    return({\r\n        type : FETCH_TYPE\r\n    });\r\n};\r\n\r\nlet setProfileActionCreator = (profile) => {\r\n    return({\r\n        type : SET_PROFILE,\r\n        profile : profile\r\n    });\r\n};\r\n\r\nlet setStatusActionCreator = (status) => {\r\n    return ({\r\n        type : SET_STATUS,\r\n        status : status\r\n    });\r\n};\r\n\r\nlet statusThunkCreator = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatusRequest(userId).then((status) => {\r\n            dispatch(setStatusActionCreator(status));\r\n        });\r\n    }\r\n};\r\n\r\nlet requestThunkCreator = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getProfileRequest(userId).then((profile) => {\r\n            dispatch(setProfileActionCreator(profile));\r\n            dispatch(toggleFetchingActionCreator());\r\n        });\r\n    }\r\n};\r\n\r\nlet refreshThunkCreator = (userId, isFetching) => {\r\n    return (dispatch) => {\r\n        if (!isFetching){\r\n            dispatch(toggleFetchingActionCreator());\r\n        }\r\n        let m = userId.match(new RegExp('\\\\d+'));\r\n        if (m != null){\r\n            dispatch(requestThunkCreator(userId));\r\n        } else {\r\n            let profile = getUserByLogin(userId);\r\n            dispatch(setProfileActionCreator(profile));\r\n            dispatch(toggleFetchingActionCreator());\r\n        }\r\n    }\r\n};\r\n\r\nexport {toggleFetchingActionCreator, setProfileActionCreator, setStatusActionCreator, requestThunkCreator, refreshThunkCreator, statusThunkCreator};\r\nexport default profileReducer;","import React from \"react\";\r\nimport classes from \"./Status.module.css\";\r\n\r\nlet link = React.createRef();\r\n\r\nlet Status = (props) => {\r\n    if (!props.editMode){\r\n        return (\r\n            <div onDoubleClick={props.activateEdit} className={classes.status}>\r\n                Status : {props.status}\r\n            </div>\r\n        );\r\n    } else if (props.id === 1) {\r\n        return (\r\n            <input type={\"text\"} className={classes.input} ref={link} onBlur={() => {\r\n                props.updateStatus(link.current.value);\r\n                props.deactivateEdit();\r\n            }}/>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className={classes.status}>\r\n                Status : {props.status}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Status;","const getCurrentProfile = (state) => state.profilePage.currentProfile;\r\nconst isFetching = (state) => state.profilePage.isFetching;\r\nconst getStatus = (state) => state.profilePage.status;\r\n\r\nexport {getCurrentProfile, isFetching, getStatus}","import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {statusThunkCreator} from \"../../../reducers/profileReducer\";\r\nimport {getUserByID} from \"../../../data/users\";\r\nimport Status from \"./Status\";\r\nimport {getStatus} from \"../../../selectors/profileSelector\";\r\n\r\nconst StatusContainer = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    let activateEdit = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    let deactivateEdit = () => {\r\n        setEditMode(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        props.getStatus(props.id);\r\n    },[]);\r\n\r\n    let updateStatus = (status) => {\r\n        getUserByID(props.id).status = status;\r\n    }\r\n\r\n    let status = props.status;\r\n    if (props.id < 5){\r\n        status = getUserByID(props.id).status;\r\n    }\r\n    return(<Status editMode={editMode} status={status} id={props.id} activateEdit={activateEdit} deactivateEdit={deactivateEdit} updateStatus={updateStatus}/>);\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return({\r\n        status : getStatus(state)\r\n    });\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return ({\r\n       getStatus : (userId) => {\r\n           dispatch(statusThunkCreator(userId));\r\n       },\r\n    });\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusContainer);","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport Info from './Info/Info';\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\nimport StatusContainer from \"./Status/StatusContainer\";\r\n\r\nconst Profile = (props) => {\r\n    let state = props.state;\r\n    let id = state.id;\r\n    let userInfo = {\r\n        login : state.login,\r\n        date : state.date,\r\n        city : state.city,\r\n        phone : state.phone,\r\n        vk : state.vk\r\n    };\r\n    return(\r\n        <div className={classes.Profile}>\r\n            <img src={state.header} className={classes.header} alt=\"Profile header\"/>\r\n            <Info userInfo={userInfo} avatar={state.avatar}/>\r\n            <StatusContainer id={id}/>\r\n            {state.posts ? <PostsContainer posts={state.posts} login={state.login}/> : <></>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","let userListCopier = (state) => {\r\n    let stateCopy = {...state};\r\n    stateCopy.users = [...state.users];\r\n    for (let i = 0; i < stateCopy.length; i++){\r\n        stateCopy.users[i] = {...state.users[i]};\r\n    }\r\n    return stateCopy;\r\n};\r\n\r\nexport default userListCopier;","import api from \"../api\";\r\nimport avatar from \"../../img/user.png\";\r\nimport header from \"../../img/profile-header.jpeg\";\r\n\r\nconst USERS_URL = \"users\";\r\n\r\nlet formPageRequestUrl = (count = 1, size = 10) => {\r\n    return USERS_URL + \"?page=\" + count + \"&count=\" + size\r\n};\r\n\r\nconst userListAPI = {\r\n    getPageRequest : (count, size) => {\r\n        return api.get(formPageRequestUrl(count, size)).then((response) => {\r\n                return response.data.items.map((response) =>{\r\n                    return {\r\n                        id : response.id,\r\n                        login:response.name,\r\n                        followed: response.followed,\r\n                        avatar: response.photos.large === null ? avatar : response.photos.large,\r\n                        date: \"00.00.0000\",\r\n                        city: \"NaN\",\r\n                        phone: \"NaN\",\r\n                        vk: \"NaN\",\r\n                        header: header,\r\n                        posts: [],\r\n                    }});\r\n        });\r\n    }\r\n};\r\n\r\nexport default userListAPI;","import api from \"../../api\";\r\n\r\nconst FOLLOW_URL = \"follow/\";\r\n\r\nlet formLoginRequest = (id) => {\r\n    return FOLLOW_URL + id;\r\n};\r\n\r\nconst followAPI = {\r\n    getFollowRequest : (id) => {\r\n        return api.post(formLoginRequest(id),{}).then((response) => response.data);\r\n    },\r\n\r\n    getUnfollowRequest : (id) => {\r\n        return api.delete(formLoginRequest(id)).then((response) => response.data);\r\n    }\r\n};\r\n\r\nexport default followAPI;\r\n\r\n","import {Anya, Misha, Zeka} from \"../data/users\";\r\nimport userListCopier from \"../copiers/userListCopier\";\r\nimport userListAPI from \"../DAL/UserList/userListAPI\";\r\nimport followAPI from \"../DAL/UserList/Follow/followAPI\";\r\n\r\nlet FOLLOW_TYPE = \"FOLLOW\";\r\nlet UNFOLLOW_TYPE = \"UNFOLLOW\";\r\nlet SET_USERS = \"USERS\";\r\nlet SET_PAGE_COUNT = \"SET_PAGE_COUNT\";\r\nlet SET_PAGE_SIZE = \"SET_PAGE_SIZE\";\r\nlet TOGGLE_FETCH = \"TOGGLE_FETCH\";\r\n\r\nlet initialState = {\r\n    users : [\r\n        Anya, Misha, Zeka\r\n    ],\r\n    pageSize : 6,\r\n    pageCount : 1,\r\n    isFetching : false\r\n};\r\n\r\nlet INC = \"INC\";\r\nlet DEC = \"DEC\";\r\n\r\nlet getUserByID = (id, users) => {\r\n    for (let i = 0; i < users.length; i++){\r\n        if (users[i].id === id){\r\n            return users[i];\r\n        }\r\n    }\r\n};\r\n\r\nlet userListReducer = (state = initialState, action) => {\r\n    let stateCopy = userListCopier(state);\r\n    switch (action.type) {\r\n        case FOLLOW_TYPE : {\r\n            let user = getUserByID(action.id, stateCopy.users);\r\n            user.followed = true;\r\n            break;\r\n        }\r\n\r\n        case UNFOLLOW_TYPE : {\r\n            let user = getUserByID(action.id, stateCopy.users);\r\n            user.followed = false;\r\n            break;\r\n        }\r\n\r\n        case SET_USERS : {\r\n            stateCopy.users = action.users;\r\n            break;\r\n        }\r\n\r\n        case SET_PAGE_COUNT : {\r\n            stateCopy.pageCount = action.count;\r\n            break;\r\n        }\r\n\r\n        case SET_PAGE_SIZE : {\r\n\r\n            break;\r\n        }\r\n\r\n        case TOGGLE_FETCH : {\r\n            stateCopy.isFetching = !stateCopy.isFetching;\r\n            break\r\n        }\r\n\r\n        default : {\r\n            return stateCopy;\r\n        }\r\n    }\r\n    return stateCopy;\r\n};\r\n\r\nlet followActionCreator = (id) => {\r\n    return ({\r\n        type : FOLLOW_TYPE,\r\n        id : id\r\n    });\r\n};\r\n\r\nlet unfollowActionCreator = (id) => {\r\n    return ({\r\n        type : UNFOLLOW_TYPE,\r\n        id : id\r\n    });\r\n};\r\n\r\nlet setUsersActionCreator = (users) => {\r\n    return({\r\n        type : SET_USERS,\r\n        users : users\r\n    })\r\n};\r\n\r\nlet setPageCountActionCreator = (count) => {\r\n    return({\r\n        type : SET_PAGE_COUNT,\r\n        count : count\r\n    });\r\n};\r\n\r\nlet setPageSizeActionCreator = (size) => {\r\n    return({\r\n        type : SET_PAGE_SIZE,\r\n        size : size\r\n    });\r\n};\r\n\r\nlet toggleFetchActionCreator = () => {\r\n    return({\r\n        type : TOGGLE_FETCH\r\n    });\r\n};\r\n\r\nlet refreshThunkCreator = (mode, pageCount, pageSize) => (dispatch) => {\r\n    dispatch(toggleFetchActionCreator());\r\n    if (mode){\r\n        switch (mode) {\r\n            case INC : {\r\n                dispatch(setPageCountActionCreator(++pageCount));\r\n                break;\r\n            }\r\n\r\n            case DEC : {\r\n                if (pageCount > 1){\r\n                    dispatch(setPageCountActionCreator(--pageCount));\r\n                }\r\n                break;\r\n            }\r\n            default : {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    userListAPI.getPageRequest(pageCount, pageSize).then((items) => {\r\n        dispatch(setUsersActionCreator(items));\r\n        dispatch(toggleFetchActionCreator());\r\n    });\r\n};\r\n\r\nlet followThunkCreator = (id) => (dispatch) => {\r\n    dispatch(toggleFetchActionCreator());\r\n    followAPI.getFollowRequest(id).then(\r\n        (data) => {\r\n            if (data.resultCode === 0){\r\n                dispatch(followActionCreator(id));\r\n            }\r\n            dispatch(toggleFetchActionCreator());\r\n        }\r\n    );\r\n};\r\n\r\nlet unfollowThunkCreator = (id) => (dispatch) => {\r\n    dispatch(toggleFetchActionCreator());\r\n    followAPI.getUnfollowRequest(id).then(\r\n        (data) => {\r\n            if (data.resultCode === 0){\r\n                dispatch(unfollowActionCreator(id));\r\n            }\r\n            dispatch(toggleFetchActionCreator());\r\n        }\r\n    );\r\n};\r\n\r\nexport {followActionCreator, setUsersActionCreator, setPageCountActionCreator, setPageSizeActionCreator, toggleFetchActionCreator, unfollowActionCreator, INC, DEC, refreshThunkCreator, followThunkCreator, unfollowThunkCreator};\r\n\r\nexport default userListReducer;","import React from \"react\";\r\nimport classes from \"./Preloader.module.css\";\r\nimport preloader from \"../../preloader.svg\"\r\n\r\nlet Preloader = () => {\r\n    return(\r\n        <img src={preloader} className={classes.Preloader} alt={\"Preloader\"}/>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import React from \"react\";\r\nimport classes from \"./UserList.module.css\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\n\r\nlet UserList = (props) => {\r\n    return(\r\n        <div className={classes.UserList}>\r\n            {props.isFetching\r\n                ? <Preloader/>\r\n            : <div className={classes.wrapper}>\r\n                {props.renderedUsers}\r\n              </div>\r\n            }\r\n            <div className={classes.btns_wrapper}>\r\n                <button onClick={() => {\r\n                    props.refresh(props.dec);\r\n                }} className={classes.btn} disabled={props.isFetching}>{\"<<<\"}</button>\r\n                <div className={classes.page_counter}>\r\n                    Page number : {props.pageCount}\r\n                </div>\r\n                <button onClick={() => {\r\n                    props.refresh(props.inc);\r\n                }} className={classes.btn} disabled={props.isFetching}>{\">>>\"}</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserList;","import React from \"react\";\r\nimport classes from \"./UserListItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet UserListItem = (props) => {\r\n    let user = props.user;\r\n    let followClass = user.followed ? classes.unfollow : classes.follow;\r\n    let followText = user.followed ? \"Unfollow\" : \"Follow\";\r\n\r\n    let folFunc = () => {\r\n        !user.followed ? props.follow(user.id) : props.unfollow(user.id);\r\n    };\r\n      return (\r\n          <div className={classes.UserListItem}>\r\n              <div className={classes.meta}>\r\n                  <img className={classes.avatar} src={user.avatar} alt=\"Avatar\"/>\r\n                  <button type=\"submit\" className={classes.btn + \" \" + followClass} onClick={\r\n                      (e) => {\r\n                          e.preventDefault();\r\n                          folFunc();\r\n                      }\r\n                  }>{followText}</button>\r\n              </div>\r\n              <div className={classes.info}>\r\n                  <NavLink className={classes.login} to={\"../User/\" + user.id}>{user.login}</NavLink>\r\n                  <h4>City : {user.city}</h4>\r\n                  <h4>Birthday : {user.date}</h4>\r\n              </div>\r\n          </div>\r\n      );\r\n};\r\n\r\nexport default UserListItem;","const getUsers = (state) => state.userList.users;\r\nconst getPageSize = (state) => state.userList.pageSize;\r\nconst getPageCount = (state) => state.userList.pageCount;\r\nconst isFetching = (state) => state.userList.isFetching;\r\n\r\nexport {getUsers, getPageCount, getPageSize, isFetching}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    toggleFetchActionCreator,\r\n    followThunkCreator, unfollowThunkCreator\r\n} from \"../../../reducers/userListReducer\";\r\nimport UserListItem from \"./UserListItem\";\r\nimport {isFetching} from \"../../../selectors/userListSelector\";\r\n\r\nconst UserListItemContainer = (props) => {\r\n    return(<UserListItem user={props.user} follow={props.follow} unfollow={props.unfollow}/>);\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        isFetching : isFetching(state)\r\n    });\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return({\r\n        follow : (id) => {\r\n            dispatch(followThunkCreator(id));\r\n        },\r\n        unfollow : (id) => {\r\n            dispatch(unfollowThunkCreator(id));\r\n        },\r\n        toggleFetching : () => {\r\n            dispatch(toggleFetchActionCreator());\r\n        }\r\n    });\r\n};\r\n\r\nlet mergeProps = (stateProps, dispatchProps, props) => {\r\n    return({\r\n        isFetching : stateProps.isFetching,\r\n        user : props.user,\r\n        follow : dispatchProps.follow,\r\n        unfollow : dispatchProps.unfollow,\r\n        toggleFetching : dispatchProps.toggleFetching\r\n    });\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(UserListItemContainer);","const getUserId = (state) => state.loginData.userId;\r\nconst getEmail = (state) => state.loginData.email;\r\nconst isLogged = (state) => state.loginData.isLogged;\r\nconst isFetching = (state) => state.loginData.isFetching;\r\nconst getErrorMessage = (state) => state.loginData.errorMessage;\r\n\r\nexport {getUserId, getEmail, isLogged, isFetching, getErrorMessage}","import {connect} from \"react-redux\";\r\nimport {INC, DEC, refreshThunkCreator} from \"../../reducers/userListReducer\";\r\nimport React, {useEffect} from \"react\";\r\nimport classes from \"./List/UserList.module.css\";\r\nimport UserList from \"./List/UserList\";\r\nimport UserListItemContainer from \"./UserListItem/UserListItemContainer\";\r\nimport {Redirect} from \"react-router\";\r\nimport {isLogged} from \"../../selectors/loginSelector\";\r\nimport {getPageCount, getPageSize, getUsers, isFetching} from \"../../selectors/userListSelector\";\r\n\r\nconst UserListAPIComponent = (props) => {\r\n    let refresh = (mode) => {\r\n        props.refresh(mode, props.pageCount, props.pageSize);\r\n    };\r\n\r\n    useEffect(() => {\r\n        refresh();\r\n    },[]);\r\n\r\n    let divideItemsToColumns = (listItems) => {\r\n        let result = [];\r\n        let m = [];\r\n        while (listItems.length > 0){\r\n            if (m.length === 3){\r\n                result.push(\r\n                    <div className={classes.column}>\r\n                        {m}\r\n                    </div>\r\n                );\r\n                m = []\r\n            } else {\r\n                m.push(listItems.pop());\r\n            }\r\n        }\r\n        if (m.length > 0){\r\n            result.push(\r\n                <div className={classes.column}>\r\n                    {m}\r\n                </div>\r\n            );\r\n        }\r\n        return result;\r\n    };\r\n\r\n    let getRenderedUserItems = (userItems) => {\r\n        if (userItems){\r\n            let listItems =  userItems.map((item) => {\r\n                return <UserListItemContainer user={item}/>\r\n            });\r\n            return divideItemsToColumns(listItems);\r\n        }\r\n    };\r\n\r\n    let renderedUsers = getRenderedUserItems(props.users);\r\n    if (props.isLogged){\r\n        return(\r\n            <UserList\r\n                renderedUsers={renderedUsers}\r\n                refresh={refresh}\r\n                inc={props.inc}\r\n                dec={props.dec}\r\n                pageCount={props.pageCount}\r\n                isFetching={props.isFetching}\r\n            />\r\n        );\r\n    } else {\r\n        return (\r\n            <Redirect to={\"/\"}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return({\r\n        isLogged : isLogged(state),\r\n        users : getUsers(state),\r\n        pageSize : getPageSize(state),\r\n        pageCount : getPageCount(state),\r\n        isFetching : isFetching(state),\r\n        inc : INC,\r\n        dec : DEC\r\n    });\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return({\r\n        refresh : (mode, pageCount, pageSize) => {\r\n            dispatch(refreshThunkCreator(mode, pageCount, pageSize))\r\n        }\r\n    });\r\n};\r\nlet connected = connect(mapStateToProps, mapDispatchToProps)(UserListAPIComponent);\r\n\r\nexport default connected;\r\n","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router\";\r\nimport {refreshThunkCreator} from \"../../reducers/profileReducer\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport Profile from \"./Profile\";\r\nimport classes from \"./ProfileContainer.module.css\";\r\nimport {getCurrentProfile, isFetching} from \"../../selectors/profileSelector\";\r\n\r\nconst ProfileContainer = (props) => {\r\n\r\n    let refresh = () => {\r\n        props.refresh(props.match.params.userId, props.isFetching);\r\n    };\r\n\r\n    useEffect(() => {\r\n        refresh();\r\n    },[]);\r\n\r\n    let isFetching = props.isFetching;\r\n    return(\r\n        <div className={classes.Container}>\r\n            {isFetching ? <Preloader/> : <Profile state={props.profile}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return({\r\n        isFetching : isFetching(state),\r\n        profile : getCurrentProfile(state)\r\n    });\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return({\r\n        refresh : (userId, isFetching) => {\r\n            dispatch(refreshThunkCreator(userId, isFetching));\r\n        }\r\n    });\r\n};\r\nlet routeComp = withRouter(ProfileContainer);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(routeComp);\r\n\r\n\r\n","import api from \"../api\";\r\n\r\nconst AUTH_URL = \"auth/me\";\r\nconst LOGIN_URL = \"auth/login\";\r\n\r\nlet formLoginUrl = (email, pass, remember) => {\r\n    return LOGIN_URL + \"?email=\" + email + \"&password=\" + pass + \"&rememberMe=\" + remember;\r\n};\r\n\r\nconst authAPI = {\r\n     getAuthRequest : () => {\r\n        return api.get(AUTH_URL).then((response) => response.data);\r\n    },\r\n\r\n     getLoginRequest : (email, pass, remember) => {\r\n        return api.post(formLoginUrl(email, pass, remember)).then((response) => response.data);\r\n    },\r\n\r\n     getLogoutRequest : () => {\r\n        return api.delete(LOGIN_URL).then((response) => response.data);\r\n    }\r\n};\r\n\r\nexport default authAPI;\r\n\r\n","import authAPI from \"../DAL/Auth/authAPI\";\r\n\r\nlet SET_USER_ID = \"LOGIN_ID\";\r\nlet SET_EMAIL = \"SET_EMAIL\";\r\nlet LOG_IN = \"LOG_IN\";\r\nlet LOG_OUT = \"LOG_OUT\";\r\nlet SET_ERROR_MSG = \"ERROR\";\r\nlet FETCH = \"FETCH\";\r\nlet SET_USER_DATA = \"SET_DATA\";\r\n\r\nlet initialState = {\r\n    userId : 1,\r\n    email : \"test@email\",\r\n    isLogged : false,\r\n    isFetching : false,\r\n    errorMessage : undefined\r\n};\r\n\r\nlet loginReducer = (state = initialState, action) => {\r\n    let stateCopy = {...state};\r\n    switch (action.type) {\r\n        case SET_USER_ID : {\r\n            stateCopy.userId = action.id;\r\n            break;\r\n        }\r\n\r\n        case SET_EMAIL : {\r\n            stateCopy.email = action.email;\r\n            break;\r\n        }\r\n\r\n        case LOG_IN : {\r\n            stateCopy.isLogged = true;\r\n            break;\r\n        }\r\n\r\n        case LOG_OUT : {\r\n            stateCopy.isLogged = false;\r\n            break;\r\n        }\r\n\r\n        case FETCH : {\r\n            stateCopy.isFetching = !stateCopy.isFetching;\r\n            break;\r\n        }\r\n\r\n        case SET_ERROR_MSG : {\r\n            stateCopy.errorMessage = [action.errorMessage];\r\n            break;\r\n        }\r\n\r\n        case SET_USER_DATA : {\r\n            let data = action.data;\r\n            stateCopy.email = data.email;\r\n            stateCopy.userId = data.userId;\r\n            stateCopy.isLogged = true;\r\n            break;\r\n        }\r\n\r\n        default : {\r\n            return stateCopy;\r\n        }\r\n    }\r\n    return stateCopy;\r\n};\r\n\r\nlet setUserIdActionCreator = (id) => {\r\n    return({\r\n        type : SET_USER_ID,\r\n        id : id\r\n    });\r\n};\r\n\r\nlet setEmailActionCreator = (email) => {\r\n    return({\r\n        type : SET_EMAIL,\r\n        email : email\r\n    });\r\n};\r\n\r\nlet loginActionCreator = () => {\r\n    return({\r\n        type : LOG_IN\r\n    });\r\n};\r\n\r\nlet logoutActionCreator = () => {\r\n    return({\r\n        type : LOG_OUT\r\n    });\r\n};\r\n\r\nlet toggleFetchActionCreator = () => {\r\n    return({\r\n        type : FETCH\r\n    });\r\n};\r\n\r\nlet setErrorMessageActionCreator = (error) => {\r\n    return({\r\n        type : SET_ERROR_MSG,\r\n        errorMessage : error\r\n    });\r\n};\r\n\r\nlet setUserDataActionCreator = (data) => {\r\n    return({\r\n        type : SET_USER_DATA,\r\n        data : data\r\n    })\r\n};\r\n\r\nlet authThunkCreator = () => {\r\n     return (dispatch) => {\r\n         authAPI.getAuthRequest().then(\r\n             (data) => {\r\n                 if (data.resultCode === 0) {\r\n                     dispatch(setUserDataActionCreator(data.data));\r\n                 }\r\n             }\r\n         );\r\n     }\r\n};\r\n\r\nlet logoutThunkCreator = () => {\r\n    return (dispatch) => {\r\n        authAPI.getLogoutRequest().then((data) => {\r\n            dispatch(logoutActionCreator());\r\n        });\r\n    }\r\n};\r\n\r\nlet loginThunkCreator = (email, pass, remember) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFetchActionCreator());\r\n        authAPI.getLoginRequest(email,pass, remember).then((data) => {\r\n            if (data.resultCode === 0){\r\n                dispatch(setEmailActionCreator(email));\r\n                dispatch(setUserIdActionCreator(data.data.userId));\r\n                dispatch(loginActionCreator());\r\n            } else {\r\n                dispatch(setErrorMessageActionCreator(\"Неверно введены email/пароль\"));\r\n            }\r\n            dispatch(toggleFetchActionCreator());\r\n        });\r\n    }\r\n}\r\n\r\nexport {setUserIdActionCreator, setEmailActionCreator, loginActionCreator, logoutActionCreator, toggleFetchActionCreator, setErrorMessageActionCreator, setUserDataActionCreator, authThunkCreator, logoutThunkCreator, loginThunkCreator}\r\n\r\nexport default loginReducer;","import classes from \"./Input.module.css\";\r\nimport React from \"react\";\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    return(\r\n        <div className={classes.Input}>\r\n            <input {...input} {...props} className={classes.input + (meta.error && meta.touched ? \" \" + classes.error : \"\")}/>\r\n            {meta.error && meta.touched ? <div className={classes.span}>{meta.error}</div> : <></>}\r\n        </div>\r\n    );\r\n}","export const email = email => {\r\n    if (email && email.toString().indexOf('@') === -1) return \"Invalid email format\";\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport classes from \"./Login.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../Validated/Input/Input\";\r\nimport {minLength} from \"../../utils/validators/minLength\";\r\nimport {required} from \"../../utils/validators/required\";\r\nimport {email} from \"../../utils/validators/email\";\r\n\r\nlet minL = minLength(8);\r\n\r\nlet LoginForm = (props) => {\r\n    return(\r\n        <form className={classes.loginForm} onSubmit={props.handleSubmit}>\r\n            <Field placeholder={\"E-mail\"} type={\"e-mail\"} name={\"email\"} className={classes.input} component={Input} validate={[required, email]}/>\r\n            <Field placeholder={\"Password\"} type={\"password\"} name={\"password\"} className={classes.input} component={Input} validate={[required, minL]}/>\r\n            <Field component={\"input\"} type={\"checkbox\"} name={\"remember\"} className={classes.checkbox}/>\r\n            <span>Запомнить меня</span>\r\n            <div>\r\n                {props.errorMessage}\r\n            </div>\r\n            <button type={\"submit\"} className={classes.btn}>Login</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nlet LoginFormRedux = reduxForm({form : \"loginForm\"})(LoginForm);\r\n\r\nclass Login extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className={classes.Login}>\r\n                <h1 className={classes.heading}>Welcome</h1>\r\n                <LoginFormRedux onSubmit={this.props.login} errorMessage={this.props.errorMessage}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunkCreator} from \"../../../reducers/loginReducer\";\r\nimport Login from \"../Login\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport classes from \"./LoginContainer.module.css\";\r\nimport {getErrorMessage, isFetching, isLogged} from \"../../../selectors/loginSelector\";\r\n\r\nconst LoginContainer = (props) => {\r\n    let login = (data) => {\r\n        let email = data.email;\r\n        let password = data.password;\r\n        let remember = data.remember;\r\n        props.login(email, password, remember);\r\n    }\r\n\r\n    let renderedMessages = (messages) => {\r\n        if (messages){\r\n            return messages.map((item) => {\r\n                return(\r\n                    <div className={classes.errorMessage}>{item}</div>\r\n                );\r\n            });\r\n        }\r\n    };\r\n\r\n    let message = renderedMessages(props.errorMessage);\r\n    if (!props.isLogged){\r\n        if (props.isFetching){\r\n            return(\r\n                <div className={classes.preloader_wrapper}>\r\n                    <Preloader/>\r\n                </div>\r\n                );\r\n        } else {\r\n            return <Login login={login} errorMessage={message}/>\r\n        }\r\n    }\r\n    return <></>;\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return({\r\n        isLogged : isLogged(state),\r\n        isFetching : isFetching(state),\r\n        errorMessage : getErrorMessage(state)\r\n    });\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return({\r\n        login : (email, pass, remember) => {\r\n            dispatch(loginThunkCreator(email, pass, remember));\r\n        },\r\n    });\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);","import React from \"react\";\r\nimport classes from \"./Greeting.module.css\";\r\nimport gif from \"../../img/Greetings.gif\"\r\n\r\nlet Greetings = () => {\r\n    return(\r\n        <div className={classes.Greeting}>\r\n            <img src={gif} alt=\"gif\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Greetings;","const INIT_FINISHED = \"INIT_FINISH\"\r\n\r\nconst initialState = {\r\n    isInitialized : false\r\n};\r\n\r\nconst initialReducer = (state = initialState, action) => {\r\n    let stateCopy = {...state};\r\n    switch (action.type) {\r\n        case INIT_FINISHED : {\r\n            stateCopy.isInitialized = true;\r\n            return stateCopy;\r\n        }\r\n        default : {\r\n            return stateCopy;\r\n        }\r\n    }\r\n}\r\n\r\nlet initFinishActionCreator = () => {\r\n    return {\r\n        type : INIT_FINISHED\r\n    }\r\n};\r\nexport default initialReducer;\r\nexport {initFinishActionCreator}\r\n","let isInitialized = (state) => {\r\n    return state.init.isInitialized;\r\n}\r\n\r\nexport {isInitialized}","import React from 'react';\r\nimport './Main.css';\r\nimport {BrowserRouter, Redirect, Route} from \"react-router-dom\";\r\nimport Navbar from './Navbar/Navbar';\r\nimport Messages from \"./Messages/Messages\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport UserListContainer from \"./UserList/UserListContainer\";\r\nimport ProfileContainer from \"./Profile/ProfileContainer\";\r\nimport LoginContainer from \"./Login/LoginContainer/LoginContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport Greetings from \"./Greetings/Greeting\";\r\nimport {initFinishActionCreator} from \"../reducers/initialReducer\";\r\nimport {isLogged} from \"../selectors/loginSelector\";\r\nimport {authThunkCreator} from \"../reducers/loginReducer\";\r\nimport Preloader from \"./Preloader/Preloader\";\r\nimport {isInitialized} from \"../selectors/initialSelector\";\r\n\r\nclass Main extends React.Component{\r\n    myProfile = <Route path={\"/Profile\"} exact render={() => {\r\n        let profile = this.props.userPages[0];\r\n        return(<Profile state={profile}/>);\r\n    }}/>;\r\n\r\n    renderedFriends = this.props.userPages.map((user) => {\r\n        if (user.login !== \"Whatruska\"){\r\n            return <Route path={\"/Friend/\" + user.login} exact render = {() => <Profile state={user}/>}/>\r\n        }\r\n        return undefined\r\n    });\r\n\r\n    render() {\r\n        if (this.props.isInitialized){\r\n            if (this.props.isLogged){\r\n                return(\r\n                    <BrowserRouter>\r\n                        <div className='Main'>\r\n                            <Navbar state={this.props.friendInfo}/>\r\n                            <Route path=\"/Messages\" render={() => <Messages state={this.props.messagesPage}/>}/>\r\n                            <Route path=\"/UserListAPIComponent\" render={() => <UserListContainer/>}/>\r\n                            {this.myProfile}\r\n                            {this.renderedFriends}\r\n                            <Route path=\"/User/:userId\">\r\n                                <ProfileContainer/>\r\n                            </Route>\r\n                            <Route path=\"/\" exact render={() => <Greetings/>}/>\r\n                        </div>\r\n                    </BrowserRouter>\r\n                );\r\n            } else {\r\n                return (\r\n                    <BrowserRouter>\r\n                        <div className='Main'>\r\n                            <Redirect to={\"/\"}/>\r\n                            <Route path=\"/\" exact render={() => <LoginContainer/>}/>\r\n                        </div>\r\n                    </BrowserRouter>\r\n                );\r\n            }\r\n        } else {\r\n            this.props.auth();\r\n            this.props.finishInit();\r\n            return (<Preloader/>);\r\n        }\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return({\r\n        messagesPage : state.messagesPage,\r\n        friendInfo : state.friendInfo,\r\n        userPages : state.userPages.users,\r\n        isLogged : isLogged(state),\r\n        isInitialized : isInitialized(state)\r\n    });\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return({\r\n        finishInit : () => {\r\n            dispatch(initFinishActionCreator());\r\n        },\r\n        auth : () => {\r\n            dispatch(authThunkCreator());\r\n        }\r\n    });\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","import React from 'react';\r\nimport logo from '../../logo.svg';\r\nimport classes from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className={classes.Header}>\r\n            <div className={classes.logo_wrapper}>\r\n                <img src={logo} className={classes.logo} alt=\"Web App Logo\"/>\r\n                <span className={classes.heading}>Web App</span>\r\n            </div>\r\n            {props.email\r\n                ? <div className={classes.login_block}>\r\n                    <div className={classes.email}>\r\n                        {props.email}\r\n                    </div>\r\n                    <button className={classes.logout} onClick={props.logout}>Log out</button>\r\n                </div>\r\n                : <></>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    authThunkCreator,\r\n    logoutThunkCreator,\r\n} from \"../../../reducers/loginReducer\";\r\nimport Header from \"../Header\";\r\nimport {getEmail, isLogged} from \"../../../selectors/loginSelector\";\r\n\r\nconst HeaderContainer = (props) => {\r\n    if (props.isLogged){\r\n        return <Header email={props.email} logout={props.logout}/>\r\n    } else {\r\n        return <Header/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return({\r\n        email : getEmail(state),\r\n        isLogged : isLogged(state)\r\n    });\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return({\r\n        logout : () => {\r\n            dispatch(logoutThunkCreator());\r\n        }\r\n    });\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);","import React from 'react';\r\nimport Main from './comp/Main';\r\nimport './App.css';\r\nimport {Provider} from \"react-redux\";\r\nimport HeaderContainer from \"./comp/Header/HeaderContainer/HeaderContainer\";\r\n\r\nconst App = (props) => {\r\n  return (\r\n      <Provider store={props.store}>\r\n          <div className=\"App\">\r\n              <HeaderContainer/>\r\n              <Main/>\r\n          </div>\r\n      </Provider>\r\n  );\r\n};\r\nexport default App;\r\n","import {friends} from \"../data/users\";\r\n\r\nlet initialState = {friends};\r\n\r\nconst sidebarReducer = (state, action) => {\r\n    return initialState;\r\n};\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport messageReducer from \"./reducers/messageReducer\";\r\nimport postReducer from \"./reducers/postReducer\";\r\nimport sidebarReducer from \"./reducers/sidebarReducer\";\r\nimport userListReducer from \"./reducers/userListReducer\";\r\nimport profileReducer from \"./reducers/profileReducer\";\r\nimport loginReducer from \"./reducers/loginReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport initialReducer from \"./reducers/initialReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    messagesPage: messageReducer,\r\n    userPages: postReducer,\r\n    friendInfo: sidebarReducer,\r\n    userList: userListReducer,\r\n    profilePage: profileReducer,\r\n    loginData : loginReducer,\r\n    init : initialReducer,\r\n    form : formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport s from \"./redux_store\";\r\n\r\nlet render = (store = s) => {\r\n    ReactDOM.render(<App store={store}/>, document.getElementById('root'));\r\n};\r\n\r\nexport default render;","\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport render from \"./render\";\r\n\r\nrender();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__xzL9z\",\"loginForm\":\"Login_loginForm__1GfkO\",\"heading\":\"Login_heading__3MXPD\",\"input\":\"Login_input__2xjm-\",\"checkbox\":\"Login_checkbox__3wURm\",\"btn\":\"Login_btn__38lZ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2QmNc\",\"logo\":\"Header_logo__3i0EP\",\"rotate\":\"Header_rotate__2OQvY\",\"logo_wrapper\":\"Header_logo_wrapper__CmUgT\",\"heading\":\"Header_heading__1rmyY\",\"login_block\":\"Header_login_block__1suG8\",\"logout\":\"Header_logout__23Fz7\",\"email\":\"Header_email__276F5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__2RNie\",\"list\":\"Posts_list__1o-gi\",\"form\":\"Posts_form__V3yv6\",\"textarea\":\"Posts_textarea__3-d5J\",\"button\":\"Posts_button__ElwWQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidebar\":\"Sidebar_Sidebar__1pHFc\",\"heading\":\"Sidebar_heading__2jmSf\",\"friends\":\"Sidebar_friends__3qr14\",\"active\":\"Sidebar_active__1YjHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Friend\":\"Friend_Friend__3BiKU\",\"avatar\":\"Friend_avatar__2XfYl\",\"img\":\"Friend_img__1_6vW\",\"name\":\"Friend_name__1ai5m\",\"active\":\"Friend_active__3fh4K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextArea\":\"TextArea_TextArea__2prCQ\",\"textarea\":\"TextArea_textarea__3Uv7a\",\"error\":\"TextArea_error__3IeT6\",\"span\":\"TextArea_span__3MdUs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__ADmZg\",\"avatar\":\"Post_avatar__1nytp\",\"text\":\"Post_text__SY1ZK\",\"likes\":\"Post_likes__h6tK1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__dtkUK\",\"input\":\"Input_input__2qoU3\",\"error\":\"Input_error__1B2WB\",\"span\":\"Input_span__1q-CF\"};","module.exports = __webpack_public_path__ + \"static/media/ava.65808d6a.jpeg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__1Olbp\",\"link\":\"User_link__7K8GX\",\"active\":\"User_active__1U0eM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialog\":\"Dialog_Dialog__emF7X\",\"form\":\"Dialog_form__1i_Mq\",\"button\":\"Dialog_button__203a6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__k_ZHH\",\"author\":\"Message_author__1J-mb\",\"text\":\"Message_text__fDGum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Status_status__1fG8W\",\"input\":\"Status_input__2zYuJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Messages\":\"Messages_Messages__12Qme\",\"users\":\"Messages_users__2f5iZ\"};","module.exports = __webpack_public_path__ + \"static/media/Misha.7547549a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Anya.9c5e0711.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Zeka.a704a6ae.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__3nFHM\",\"header\":\"Profile_header__2xuKN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader_wrapper\":\"LoginContainer_preloader_wrapper__1ui1K\",\"errorMessage\":\"LoginContainer_errorMessage__10XCm\"};"],"sourceRoot":""}