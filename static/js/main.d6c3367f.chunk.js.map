{"version":3,"sources":["comp/Messages/User/User.module.css","comp/Messages/Dialog/Dialog.module.css","comp/Messages/Dialog/Message/Message.module.css","comp/Profile/Status/Status.module.css","comp/Validated/Input/Input.module.css","comp/Messages/Messages.module.css","img/Misha.jpg","img/Anya.jpg","img/Zeka.jpg","comp/Login/LoginContainer/LoginContainer.module.css","comp/Profile/Profile.module.css","img/user.png","comp/Preloader/Preloader.module.css","preloader.svg","comp/Profile/ProfileContainer.module.css","comp/Greetings/Greeting.module.css","img/Greetings.gif","logo.svg","serviceWorker.js","utils/validators/maxLength.js","comp/Messages/User/User.js","comp/Validated/TextArea/TextArea.js","utils/validators/required.js","comp/Messages/Dialog/Dialog.js","data/dialogs.js","data/posts.js","data/users.js","copiers/messagesPageCopier.js","reducers/messageReducer.js","comp/Messages/Dialog/Message/Message.js","selectors/messageSelector.js","comp/Messages/Dialog/DialogContainer.js","comp/Messages/Messages.js","comp/Profile/Info/Info.js","comp/Profile/Posts/Posts.js","copiers/userPagesCopier.js","reducers/postReducer.js","comp/Profile/Post/Post.js","comp/Profile/Posts/PostsContainer.js","utils/validators/minLength.js","copiers/profilePageCopier.js","DAL/api.js","DAL/Profile/profileAPI.js","reducers/profileReducer.js","comp/Profile/Status/Status.js","selectors/profileSelector.js","comp/Profile/Status/StatusContainer.js","comp/Profile/Profile.js","copiers/userListCopier.js","DAL/UserList/userListAPI.js","DAL/UserList/Follow/followAPI.js","reducers/userListReducer.js","comp/Preloader/Preloader.js","comp/UserList/List/UserList.js","comp/UserList/UserListItem/UserListItem.js","selectors/userListSelector.js","comp/UserList/UserListItem/UserListItemContainer.js","selectors/loginSelector.js","comp/UserList/UserListContainer.js","comp/Profile/ProfileContainer.js","DAL/Auth/authAPI.js","reducers/loginReducer.js","comp/Validated/Input/Input.js","utils/validators/email.js","comp/Login/Login.js","comp/Login/LoginContainer/LoginContainer.js","comp/Greetings/Greeting.js","reducers/initialReducer.ts","selectors/initialSelector.js","comp/Main.js","comp/Header/Header-styles.js","comp/Header/Header.js","comp/Header/HeaderContainer/HeaderContainer.js","utils/theme/theme.js","App.js","reducers/sidebarReducer.js","redux_store.js","render.js","index.js","comp/UserList/List/UserList.module.css","comp/Profile/Info/Info.module.css","img/profile-header.jpeg","comp/UserList/UserListItem/UserListItem.module.css","comp/Login/Login.module.css","comp/Profile/Posts/Posts.module.css","comp/Validated/TextArea/TextArea.module.css","comp/Profile/Post/Post.module.css","img/ava.jpeg"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","length","User","props","className","classes","user","to","id","link","activeClassName","active","name","TextArea","input","meta","textarea","touched","span","required","value","maxLengthValidator","MessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","button","Dialog","renderedMessages","addMsg","dialogs","userId","dialog","text","author","posts","p","likes","getPostsByID","i","getUserByLogin","login","users","Me","Anya","Misha","Zeka","getUserByID","date","city","phone","vk","avatar","My_avatar","header","profile_header","status","Anya_ava","followed","Zeka_ava","Misha_ava","friends","getDeepMessagesPageCopy","stateCopy","messages","initialState","msg","messageReducer","action","type","push","Message","getMessages","messagesPage","getMsgsByID","d","ConnectedDialogContainer","connect","dispatch","add","addMsgActionCreator","stateProps","dispatchProps","map","message","data","Messages","renderedUsers","renderedDialogs","path","exact","render","Info","info","userInfo","src","alt","fio","contacts","Posts","list","renderedPosts","getUserPagesCopy","myPostsCount","postReducer","post","Post","ava","lengthValidator","minLength","PostsFormRedux","ConnectedPostsContainer","arr","addPostActionCreator","renderPosts","addPost","profilePageCopier","isFetching","currentProfile","api","axios","create","baseURL","withCredentials","headers","profileAPI","getProfileRequest","get","formProfileUrl","response","fullName","photos","large","getStatusRequest","PROFILE_URL","formStatusUrl","undefined","setProfileActionCreator","profile","refreshThunkCreator","RegExp","requestThunkCreator","profileReducer","React","createRef","Status","editMode","ref","onBlur","updateStatus","current","deactivateEdit","onDoubleClick","activateEdit","getCurrentProfile","profilePage","getStatus","setStatusActionCreator","statusThunkCreator","useState","setEditMode","useEffect","Profile","PostsContainer","userListCopier","userListAPI","getPageRequest","count","size","USERS_URL","formPageRequestUrl","items","formLoginRequest","followAPI","getFollowRequest","getUnfollowRequest","delete","pageSize","pageCount","setPageCountActionCreator","userListReducer","Preloader","preloader","UserList","wrapper","btns_wrapper","onClick","refresh","dec","btn","disabled","page_counter","inc","UserListItem","followClass","unfollow","follow","followText","e","preventDefault","getUsers","userList","getPageSize","getPageCount","resultCode","followActionCreator","followThunkCreator","unfollowActionCreator","unfollowThunkCreator","toggleFetching","getEmail","loginData","email","isLogged","getErrorMessage","errorMessage","connected","mode","setUsersActionCreator","userItems","listItems","result","m","column","pop","divideItemsToColumns","item","getRenderedUserItems","routeComp","withRouter","params","Container","authAPI","getAuthRequest","getLoginRequest","pass","remember","LOGIN_URL","formLoginUrl","getLogoutRequest","loginReducer","Input","toString","indexOf","LoginFormRedux","loginForm","placeholder","checkbox","Login","heading","this","Component","setEmailActionCreator","loginThunkCreator","preloader_wrapper","password","Greetings","Greeting","gif","isInitialized","initialReducer","init","Main","myProfile","userPages","renderedFriends","UserListContainer","auth","finishInit","friendInfo","setUserDataActionCreator","styles","makeStyles","theme","Header","background","palette","primary","main","light","color","logo","width","height","breakpoints","down","logo_btn","backgroundColor","fontSize","tabs","marginLeft","tab","padding","spacing","mixins","toolbar","marginBottom","menu","top","menuList","fontWeight","logout","logout_wrapper","display","flexDirection","justifyContent","drawer_btn","drawer_close_btn","margin","useTheme","anchor","setAnchor","openMenu","setOpenMenu","openDrawer","setOpenDrawer","openFriend","setOpenFriendList","selectedTab","setSelectedTab","selectedMenu","setSelectedMenu","pathName","pathname","host","substring","toggleMenu","toggleDrawer","handleMenuClose","chooseFriend","index","matches","useMediaQuery","up","getLinkObj","l","pr","sec","secondary","icon","renderedDrawerOptions","option","ListItem","Link","ListItemIcon","ListItemText","AppBar","Toolbar","Button","disableRipple","Tabs","indicatorColor","onChange","val","Tab","label","aria-controls","aria-owns","aria-haspopup","onMouseOver","currentTarget","Menu","open","anchorEl","onClose","autoFocusItem","MenuListProps","onMouseLeave","paper","transformOrigin","vertical","horizontal","elevation","keepMounted","MenuItem","selected","SwipeableDrawer","onOpen","List","IconButton","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","StarBorder","createMuiTheme","overrides","MuiTab","root","App","basename","process","store","ThemeProvider","sidebarReducer","reducers","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","s","ReactDOM","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,OAAS,uB,oBCA/ED,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,OAAS,yB,oBCAvFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,KAAO,wB,oBCA7FD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB,oBCA1DD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,KAAO,sB,oBCAnFD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,0B,oBCDhED,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCC3CD,EAAOC,QAAU,CAAC,kBAAoB,0CAA0C,aAAe,uC,oBCA/FD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,0B,oBCD9DD,EAAOC,QAAU,IAA0B,kC,oBCC3CD,EAAOC,QAAU,CAAC,UAAY,+B,oBCD9BD,EAAOC,QAAU,IAA0B,uC,oBCC3CD,EAAOC,QAAU,CAAC,UAAY,sC,oBCA9BD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,0B,oBCDhED,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,2JCYrCC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,M,IChGvCC,E,qICYXC,EARF,SAACC,GACV,OACI,yBAAKC,UAAWC,IAAQC,MACpB,kBAAC,IAAD,CAASC,GAAI,aAAeJ,EAAMK,GAAIJ,UAAWC,IAAQI,KAAMC,gBAAiBL,IAAQM,QAASR,EAAMS,Q,oECJtGC,EAAW,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASZ,EAAW,gCACjD,OACI,yBAAKC,UAAWC,IAAQQ,UACpB,8CAAcC,EAAWX,EAAzB,CAAgCC,UAAWC,IAAQW,UAAYD,EAAKf,OAASe,EAAKE,QAAU,IAAMZ,IAAQL,MAAQ,OACjHe,EAAKf,OAASe,EAAKE,QAAU,yBAAKb,UAAWC,IAAQa,MAAOH,EAAKf,OAAe,uCCPhFmB,EAAW,SAAAC,GACpB,IAAKA,GAAmB,KAAVA,EAAc,MAAO,qBCMjCC,GJPoBpB,EIOW,IJN1B,SAACmB,GACR,GAAIA,GAASA,EAAMnB,OAASA,EAAQ,MAAO,iBAAmBA,IIgB9DqB,EAAmBC,YAAU,CAACC,KAAO,eAAlBD,EATL,SAACpB,GACf,OACI,0BAAMC,UAAWC,IAAQmB,KAAMC,SAAUtB,EAAMuB,cAC3C,kBAACC,EAAA,EAAD,CAAOC,UAAWf,EAAUD,KAAM,UAAWiB,SAAU,CAACV,EAAUE,KAClE,4BAAQjB,UAAWC,IAAQyB,QAA3B,cAgBGC,EATA,SAAC5B,GACZ,OACI,yBAAKC,UAAWC,IAAQ0B,QACnB5B,EAAM6B,iBACP,kBAACV,EAAD,CAAkBG,SAAUtB,EAAM8B,WC+C/BC,EAvED,CACV,CACIC,OAAS,EACTC,OAAS,CACL,CACIC,KAAO,KACPC,OAAS,MAEb,CACID,KAAO,eACPC,OAAS,SAEb,CACID,KAAO,qBACPC,OAAS,QAIrB,CACIH,OAAS,EACTC,OAAS,CACL,CACIC,KAAO,UACPC,OAAS,MAEb,CACID,KAAO,eACPC,OAAS,OAEb,CACID,KAAO,WACPC,OAAS,QAIrB,CACIH,OAAS,EACTC,OAAS,CACL,CACIC,KAAO,WACPC,OAAS,MAEb,CACID,KAAO,mBACPC,OAAS,QAEb,CACID,KAAO,WACPC,OAAS,QAIrB,CACIH,OAAS,EACTC,OAAS,CACL,CACIC,KAAO,KACPC,OAAS,MAEb,CACID,KAAO,eACPC,OAAS,QAEb,CACID,KAAO,qBACPC,OAAS,S,wFCVVC,EAvDH,CACR,CACIJ,OAAS,EACTK,EAAI,CACA,CACIH,KAAM,cACNI,MAAQ,IAEZ,CACIJ,KAAM,eACNI,MAAO,MAInB,CACIN,OAAS,EACTK,EAAI,CACA,CACIH,KAAM,cACNI,MAAQ,IAEZ,CACIJ,KAAM,qBACNI,MAAO,MAInB,CACIN,OAAS,EACTK,EAAI,CACA,CACIH,KAAM,iBACNI,MAAQ,IAEZ,CACIJ,KAAM,iBACNI,OAAQ,MAIpB,CACIN,OAAS,EACTK,EAAI,CACA,CACIH,KAAM,gBACNI,MAAQ,IAEZ,CACIJ,KAAM,8CACNI,MAAO,cC1CnBC,EAAe,SAAClC,GAChB,IAAK,IAAImC,EAAI,EAAGA,EAAIJ,EAAMtC,OAAQ0C,IAC9B,GAAIJ,EAAMI,GAAGR,SAAW3B,EACpB,OAAO+B,EAAMI,GAAGH,GAKxBI,EAAiB,SAACC,GAElB,IADA,IAAIC,EAAQ,CAACC,EAAGC,EAAKC,EAAMC,GAClBP,EAAI,EAAGA,EAAIG,EAAM7C,OAAQ0C,IAC9B,GAAIG,EAAMH,GAAGE,QAAUA,EACnB,OAAOC,EAAMH,IAKrBQ,EAAc,SAAC3C,GAEf,IADA,IAAIsC,EAAQ,CAACC,EAAGC,EAAKC,EAAMC,GAClBP,EAAI,EAAGA,EAAIG,EAAM7C,OAAQ0C,IAC9B,GAAIG,EAAMH,GAAGnC,KAAOA,EAChB,OAAOsC,EAAMH,IAKrBI,EAAK,CACLvC,GAAK,EACLqC,MAAQ,YACRO,KAAO,aACPC,KAAO,OACPC,MAAQ,eACRC,GAAK,gBACLC,OAASC,IACTC,OAAQC,IACRpB,MAAQG,EAAa,GACrBkB,OAAS,gGAGTZ,EAAO,CACPxC,GAAK,EACLqC,MAAQ,OACRO,KAAO,aACPC,KAAO,OACPC,MAAQ,eACRC,GAAK,eACLC,OAASK,IACTH,OAASC,IACTpB,MAAQG,EAAa,GACrBoB,UAAW,EACXF,OAAS,qFAGTV,EAAO,CACP1C,GAAK,EACLqC,MAAQ,OACRO,KAAO,aACPC,KAAO,OACPC,MAAQ,eACRC,GAAK,cACLC,OAASO,IACTL,OAASC,IACTpB,MAAQG,EAAa,GACrBoB,UAAW,EACXF,OAAS,kBAGTX,EAAQ,CACRzC,GAAK,EACLqC,MAAQ,QACRO,KAAO,aACPC,KAAO,OACPC,MAAQ,eACRC,GAAK,eACLC,OAASQ,IACTN,OAASC,IACTpB,MAAQG,EAAa,GACrBoB,UAAW,EACXF,OAAS,sFAGTK,GAAU,CACV,CACIrD,KAAO,QACP4C,OAASQ,KAEb,CACIpD,KAAO,OACP4C,OAASK,KAEb,CACIjD,KAAO,OACP4C,OAASO,M,kBClFFG,GAjBe,SAACzE,GAC3B,IAAI0E,EAAS,gBAAO1E,GACpB0E,EAAUrB,MAAV,aAAsBrD,EAAMqD,OAC5B,IAAK,IAAIH,EAAI,EAAGA,EAAIlD,EAAMqD,MAAM7C,OAAQ0C,IACpCwB,EAAUrB,MAAMH,GAAhB,gBAAyBlD,EAAMqD,MAAMH,IACrCwB,EAAUrB,MAAMH,GAAGnC,GAAKf,EAAMqD,MAAMH,GAAGnC,GACvC2D,EAAUrB,MAAMH,GAAG/B,KAAOnB,EAAMqD,MAAMH,GAAG/B,KAE7CuD,EAAUC,SAAV,aAAyB3E,EAAM2E,UAC/B,IAAK,IAAIzB,EAAI,EAAGA,EAAIlD,EAAM2E,SAASnE,OAAQ0C,IACvCwB,EAAUC,SAASzB,GAAnB,gBAA4BlD,EAAM2E,SAASzB,IAC3CwB,EAAUC,SAASzB,GAAGP,OAAtB,aAAmC3C,EAAM2E,SAASzB,GAAGP,QACrD+B,EAAUC,SAASzB,GAAGR,OAAS1C,EAAM2E,SAASzB,GAAGR,OAErD,OAAOgC,GCRPE,GAAe,CACfvB,MFgGQ,CACR,CACItC,GAAI,EACJI,KAAO,SAEX,CACIJ,GAAI,EACJI,KAAO,QAEX,CACIJ,GAAI,EACJI,KAAO,WAEX,CACIJ,GAAI,EACJI,KAAO,SE9GXwD,SAAWlC,EACXoC,IAAM,IAkCKC,GAvBe,WAAmC,IAAlC9E,EAAiC,uDAAzB4E,GAAcG,EAAW,uCAExDL,EAAYD,GAAwBzE,GAExC,OAAQ+E,EAAOC,MACX,IArBQ,UAsBJ,IAAK,IAAI9B,EAAI,EAAGA,EAAIwB,EAAUC,SAASnE,OAAQ0C,IAC3C,GAAIwB,EAAUC,SAASzB,GAAGR,SAAWqC,EAAOhE,GAKxC,OAJA2D,EAAUC,SAASzB,GAAGP,OAAOsC,KAAK,CAC9BrC,KAAOmC,EAAOnC,KACdC,OAAS,OAEN6B,EAGf,MAEJ,QACI,OAAOA,I,qBCtBJQ,GAbC,SAACxE,GACb,OACI,yBAAKC,UAAWC,KAAQsE,SACpB,yBAAKvE,UAAWC,KAAQiC,QACnBnC,EAAMmC,OAAS,OAEpB,yBAAKlC,UAAWC,KAAQgC,MACnBlC,EAAMkC,QCTjBuC,GAAc,SAACnF,GAAD,OAAWA,EAAMoF,aAAaT,UCoB9CU,GAAc,SAACV,EAAU5D,GACzB,IAAK,IAAImC,EAAI,EAAGA,EAAIyB,EAASnE,OAAQ0C,IAAI,CACrC,IAAIoC,EAAIX,EAASzB,GACjB,GAAIoC,EAAE5C,SAAW3B,EACb,OAAOuE,EAAE3C,SA2Bf4C,GAA2BC,aAtBX,SAACxF,GACnB,MAAO,CACH2E,SAAWQ,GAAYnF,OAIN,SAACyF,GACtB,MAAO,CACHC,IAAM,SAAC9C,EAAM7B,GACT0E,EH3BuB,SAACZ,EAAK9D,GACrC,MAAM,CACFiE,KAVQ,UAWRpC,KAAOiC,EACP9D,GAAKA,GGuBQ4E,CAAoB/C,EAAM7B,SAK9B,SAAC6E,EAAYC,EAAenF,GACzC,MAAO,CACHK,GAAKL,EAAMK,GACX4D,SAAWU,GAAYO,EAAWjB,SAAUjE,EAAMK,IAClD2E,IAAMG,EAAcH,OAIKF,EA7CT,SAAC9E,GAWrB,OAAO,gBAAC,EAAD,CAAQ6B,iBAVY7B,EAAMiE,SAASmB,KAAI,SAACC,GAC3C,OACI,gBAAC,GAAD,CAASlD,OAAQkD,EAAQlD,OAAQD,KAAMmD,EAAQnD,UAQJJ,OAJlC,SAACwD,GACdtF,EAAMgF,IAAIM,EAAKD,QAASrF,EAAMK,UAuCvBwE,MC1BAU,GAtBE,SAACvF,GACd,IAAIV,EAAQU,EAAMV,MACdkG,EAAgBlG,EAAMqD,MAAMyC,KAAI,SAACjF,GACjC,OACI,kBAAC,EAAD,CAAME,GAAIF,EAAKE,GAAII,KAAMN,EAAKM,UAGlCgF,EAAkBnG,EAAM2E,SAASmB,KAAI,SAACR,GACtC,OACI,kBAAC,IAAD,CAAOc,KAAM,aAAed,EAAE5C,OAAQ2D,OAAK,EAACC,OAAQ,kBAAM,kBAAC,GAAD,CAAiBvF,GAAIuE,EAAE5C,eAGzF,OACI,yBAAK/B,UAAWC,IAAQqF,UACpB,yBAAKtF,UAAWC,IAAQyC,OACnB6C,GAEJC,I,yCCFEI,GAlBF,SAAC7F,GACV,IAAI8F,EAAO9F,EAAM+F,SACjB,OACI,yBAAK9F,UAAWC,KAAQ2F,MACpB,yBAAK5F,UAAWC,KAAQmD,OAAQ2C,IAAKhG,EAAMqD,OAAQ4C,IAAI,QACvD,yBAAKhG,UAAWC,KAAQoF,MACpB,0BAAMrF,UAAWC,KAAQgG,KAAMJ,EAAKpD,OACpC,0BAAMzC,UAAWC,KAAQ+C,MAAzB,gBAA6C6C,EAAK7C,MAClD,0BAAMhD,UAAWC,KAAQgD,MAAzB,UAAuC4C,EAAK5C,MAC5C,0BAAMjD,UAAWC,KAAQiG,UACrB,0BAAMlG,UAAWC,KAAQiD,OAAzB,UAAwC2C,EAAK3C,OAC7C,0BAAMlD,UAAWC,KAAQkD,IAAzB,SAAoC0C,EAAK1C,Q,oBCA9CgD,GAXD,SAACpG,GACX,OACA,yBAAKC,UAAWC,KAAQkC,OACpB,qCACA,yBAAKnC,UAAWC,KAAQmG,MACnBrG,EAAMsG,iBCWJC,GAnBQ,SAACjH,GACpB,IAAI0E,EAAS,gBAAO1E,GACpB0E,EAAUwC,eACV,IAAK,IAAIhE,EAAI,EAAGA,EAAIwB,EAAUrB,MAAM7C,OAAQ0C,IACxCwB,EAAUrB,MAAMH,GAAhB,gBAAyBlD,EAAMqD,MAAMH,IACrCwB,EAAUrB,MAAMH,GAAGnC,GAAKf,EAAMqD,MAAMH,GAAGnC,GACvC2D,EAAUrB,MAAMH,GAAGE,MAAQpD,EAAMqD,MAAMH,GAAGE,MAC1CsB,EAAUrB,MAAMH,GAAGS,KAAO3D,EAAMqD,MAAMH,GAAGS,KACzCe,EAAUrB,MAAMH,GAAGU,KAAO5D,EAAMqD,MAAMH,GAAGU,KACzCc,EAAUrB,MAAMH,GAAGW,MAAQ7D,EAAMqD,MAAMH,GAAGW,MAC1Ca,EAAUrB,MAAMH,GAAGY,GAAK9D,EAAMqD,MAAMH,GAAGY,GACvCY,EAAUrB,MAAMH,GAAGa,OAAS/D,EAAMqD,MAAMH,GAAGa,OAC3CW,EAAUrB,MAAMH,GAAGe,OAASjE,EAAMqD,MAAMH,GAAGe,OAC3CS,EAAUrB,MAAMH,GAAGJ,MAAnB,aAA+B9C,EAAMqD,MAAMH,GAAGJ,OAGlD,OAAO4B,GCXPE,GAAe,CACfvB,MAAO,CAACC,EAAIG,EAAMD,EAAOD,GACzB2D,aAAe,GA6BJC,GA1BK,WAAmC,IAAlCnH,EAAiC,uDAAzB4E,GAAcG,EAAW,uCAE9CL,EAAYuC,GAAiBjH,GAEjC,OAAQ+E,EAAOC,MACX,IAZS,WAkBL,OALAN,EAAUrB,MAAM,GAAGP,MAAMmC,KAAK,CAC1BrC,KAAOmC,EAAOqC,KACdpE,MAAO,IAEX0B,EAAUwC,eACHxC,EAEX,QACI,OAAOA,I,oBCPJ2C,GAdF,SAAC3G,GACV,OACI,yBAAKC,UAAWC,KAAQyG,MACpB,yBAAK1G,UAAWC,KAAQmD,OAAQ2C,IAAKhG,EAAM4G,IAAKX,IAAI,oBACpD,yBAAKhG,UAAWC,KAAQgC,MACnBlC,EAAMkC,MAEX,yBAAKjC,UAAWC,KAAQoC,OACpB,uCAAgBtC,EAAMsC,SCAlCuE,GCXqB,SAAA/G,GAAM,OAAI,SAAAmB,GAC/B,OAAIA,GAASA,EAAMnB,OAASA,EAAe,iBAAmBA,EACpDmB,OAAL,EAAmB,kBDSN6F,CAAU,GAW5BC,GAAiB3F,YAAU,CAACC,KAAO,aAAlBD,EATL,SAACpB,GACb,OACI,0BAAMC,UAAWC,KAAQmB,KAAMC,SAAUtB,EAAMuB,cAC3C,kBAACC,EAAA,EAAD,CAAOC,UAAWf,EAAUD,KAAM,OAAQR,UAAWC,KAAQW,SAAUa,SAAU,CAACmF,MAClF,4BAAQ5G,UAAWC,KAAQyB,QAA3B,cAyDRqF,GAA0BlC,aAvBR,SAACxF,GACnB,MAAO,CACH2H,IAAM,OAIW,SAAClC,GACtB,MAAO,CACHC,IAAK,SAAC0B,GAAD,OAAU3B,EF9Ba,SAAC2B,GACjC,MAAO,CACHpC,KA5BS,WA6BToC,KAAOA,GE2BiBQ,CAAqBR,SAIpC,SAACxB,EAAYC,EAAenF,GACzC,IAAI0C,EAAQ1C,EAAM0C,MACdvC,EAAOsC,EAAeC,GAC1B,MAAO,CACHA,MAAQA,EACRsC,IAAMG,EAAcH,IACpB5C,MAAQpC,EAAMoC,MACdiB,OAASlD,EAAKkD,UAIQyB,EAlDR,SAAC9E,GACnB,IAAImH,EAAc,kBAAMnH,EAAMoC,MAAMgD,KAAI,SAACsB,GACrC,OACI,kBAAC,GAAD,CAAMxE,KAAMwE,EAAKxE,KAAMI,MAAOoE,EAAKpE,MAAOsE,IAAK5G,EAAMqD,aAIzD+D,EAAU,SAAC9B,GACXtF,EAAMgF,IAAIM,EAAKoB,OAGnB,MAAoB,cAAhB1G,EAAM0C,MAEF,oCACI,kBAACqE,GAAD,CAAgBzF,SAAU8F,IAC1B,kBAAC,GAAD,CAAOd,cAAea,IAAeC,QAASA,KAKlD,oCACI,kBAAC,GAAD,CAAOd,cAAea,IAAeC,QAASA,QA+B/CJ,M,SErEAK,GAPS,SAAC/H,GACrB,IAAI0E,EAAS,gBAAO1E,GAGpB,OAFA0E,EAAUsD,WAAahI,EAAMgI,WAC7BtD,EAAUuD,eAAV,gBAA+BjI,EAAMiI,gBAC9BvD,G,qBCCLwD,GAAMC,KAAMC,OAAO,CACrBC,QAJa,gDAKbC,iBAAkB,EAClBC,QAAU,CACN,UANQ,uCAOR,eAAiB,sBAIVL,MCCTM,GAAa,CACfC,kBAAoB,SAAC/F,GACjB,OAAOwF,GAAIQ,IAVE,SAAChG,GAClB,MAJgB,WAIKA,EASFiG,CAAejG,IAAShD,MAAK,SAACkJ,GAAD,OAAcA,EAAS5C,QAAMtG,MAAK,SAACkJ,GAC3E,MAAO,CACH7H,GAAK6H,EAASlG,OACdU,MAAQwF,EAASC,SACjBlF,KAAO,OACPC,KAAO,OACPC,MAAQ,eACRC,GAAK8E,EAAS/B,SAAS/C,GACvBC,OAAmC,OAA1B6E,EAASE,OAAOC,MAAiB/E,IAAY4E,EAASE,OAAOC,MACtE9E,OAAQC,SAIpB8E,iBAAmB,SAACtG,GAChB,OAAOwF,GAAIQ,IApBC,SAAChG,GACjB,MAPeuG,kBAOKvG,EAmBDwG,CAAcxG,IAAShD,MAAK,SAACkJ,GAAD,OAAcA,EAAS5C,UAI3DwC,MC3BX5D,GAAe,CACfqD,oBAAiBkB,EACjBnB,YAAa,EACb7D,OAAS,IAkCTiF,GAA0B,SAACC,GAC3B,MAAO,CACHrE,KA1CU,cA2CVqE,QAAUA,IA4BdC,GAAsB,SAAC5G,EAAQsF,GAC/B,OAAO,SAACvC,GAKJ,GAJKuC,GACDvC,EAvCD,CACHT,KArCS,UA8EA,MADDtC,EAAOvD,MAAM,IAAIoK,OAAO,SAE5B9D,EAhBc,SAAC/C,GACvB,OAAO,SAAC+C,GACJ+C,GAAWC,kBAAkB/F,GAAQhD,MAAK,SAAC2J,GACvC5D,EAAS2D,GAAwBC,IACjC5D,EA/BD,CACHT,KArCS,cA+EIwE,CAAoB9G,QAC1B,CACH,IAAI2G,EAAUlG,EAAeT,GAC7B+C,EAAS2D,GAAwBC,IACjC5D,EA/CD,CACHT,KArCS,aAyFFyE,GA/EM,WAAmC,IAAlCzJ,EAAiC,uDAAzB4E,GAAcG,EAAW,uCAC/CL,EAAYqD,GAAkB/H,GAClC,OAAQ+E,EAAOC,MACX,IAbS,QAcLN,EAAUsD,YAActD,EAAUsD,WAClC,MAGJ,IAjBU,cAkBNtD,EAAUuD,eAAiBlD,EAAOsE,QAClC,MAGJ,IArBS,SAsBL3E,EAAUP,OAASY,EAAOZ,OAQlC,OAAOO,G,qBCjCP1D,GAAO0I,IAAMC,YAyBFC,GAvBF,SAAClJ,GACV,OAAKA,EAAMmJ,SAMa,IAAbnJ,EAAMK,GAET,2BAAOiE,KAAM,OAAQrE,UAAWC,KAAQS,MAAOyI,IAAK9I,GAAM+I,OAAQ,WAC9DrJ,EAAMsJ,aAAahJ,GAAKiJ,QAAQtI,OAChCjB,EAAMwJ,oBAKV,yBAAKvJ,UAAWC,KAAQuD,QAAxB,YACczD,EAAMyD,QAdpB,yBAAKgG,cAAezJ,EAAM0J,aAAczJ,UAAWC,KAAQuD,QAA3D,YACczD,EAAMyD,SCT1BkG,GAAoB,SAACrK,GAAD,OAAWA,EAAMsK,YAAYrC,gBACjDD,GAAa,SAAChI,GAAD,OAAWA,EAAMsK,YAAYtC,YAC1CuC,GAAY,SAACvK,GAAD,OAAWA,EAAMsK,YAAYnG,QCiDhCqB,gBAdO,SAACxF,GACnB,MAAO,CACHmE,OAASoG,GAAUvK,OAIF,SAACyF,GACtB,MAAQ,CACL8E,UAAY,SAAC7H,GACT+C,EHac,SAAC/C,GACtB,OAAO,SAAC+C,GACJ+C,GAAWQ,iBAAiBtG,GAAQhD,MAAK,SAACyE,GACtCsB,EAViB,SAACtB,GAC1B,MAAQ,CACJa,KAhDS,SAiDTb,OAASA,GAOIqG,CAAuBrG,QGhBxBsG,CAAmB/H,QAKxB8C,EA5CS,SAAC9E,GAAW,IAAD,EACDgK,oBAAS,GADR,oBAC1Bb,EAD0B,KAChBc,EADgB,KAe/BC,qBAAU,WAHNlK,EAAM6J,UAAU7J,EAAMK,MAKxB,IAEF,IAIIoD,EAASzD,EAAMyD,OAInB,OAHIzD,EAAMK,GAAK,IACXoD,EAAST,EAAYhD,EAAMK,IAAIoD,QAE5B,kBAAC,GAAD,CAAQ0F,SAAUA,EAAU1F,OAAQA,EAAQpD,GAAIL,EAAMK,GAAIqJ,aAxB9C,WACfO,GAAY,IAuB6ET,eApBxE,WACjBS,GAAY,IAmB6GX,aAR1G,SAAC7F,GAChBT,EAAYhD,EAAMK,IAAIoD,OAASA,QCFxB0G,GAnBC,SAACnK,GACb,IAAIV,EAAQU,EAAMV,MACde,EAAKf,EAAMe,GACX0F,EAAW,CACXrD,MAAQpD,EAAMoD,MACdO,KAAO3D,EAAM2D,KACbC,KAAO5D,EAAM4D,KACbC,MAAQ7D,EAAM6D,MACdC,GAAK9D,EAAM8D,IAEf,OACI,yBAAKnD,UAAWC,KAAQiK,SACpB,kBAAC,GAAD,CAAMpE,SAAUA,EAAU1C,OAAQ/D,EAAM+D,SACxC,kBAAC,GAAD,CAAiBhD,GAAIA,IACpBf,EAAM8C,MAAQ,kBAACgI,GAAD,CAAgBhI,MAAO9C,EAAM8C,MAAOM,MAAOpD,EAAMoD,QAAW,uCCXxE2H,GATM,SAAC/K,GAClB,IAAI0E,EAAS,gBAAO1E,GACpB0E,EAAUrB,MAAV,aAAsBrD,EAAMqD,OAC5B,IAAK,IAAIH,EAAI,EAAGA,EAAIwB,EAAUlE,OAAQ0C,IAClCwB,EAAUrB,MAAMH,GAAhB,gBAAyBlD,EAAMqD,MAAMH,IAEzC,OAAOwB,G,qBCwBIsG,GApBK,CAChBC,eAAiB,SAACC,EAAOC,GACrB,OAAOjD,GAAIQ,IANM,WAA2B,IAA1BwC,EAAyB,uDAAjB,EAAGC,EAAc,uDAAP,GACxC,MAAOC,cAAuBF,EAAQ,UAAYC,EAK/BE,CAAmBH,EAAOC,IAAOzL,MAAK,SAACkJ,GAC9C,OAAOA,EAAS5C,KAAKsF,MAAMxF,KAAI,SAAC8C,GAC5B,MAAO,CACH7H,GAAK6H,EAAS7H,GACdqC,MAAMwF,EAASzH,KACfkD,SAAUuE,EAASvE,SACnBN,OAAkC,OAA1B6E,EAASE,OAAOC,MAAiBhF,KAAS6E,EAASE,OAAOC,MAClEpF,KAAM,aACNC,KAAM,MACNC,MAAO,MACPC,GAAI,MACJG,OAAQA,IACRnB,MAAO,YCpB3ByI,GAAmB,SAACxK,GACpB,MAHe,UAGKA,GAaTyK,GAVG,CACdC,iBAAmB,SAAC1K,GAChB,OAAOmH,GAAId,KAAKmE,GAAiBxK,GAAI,IAAIrB,MAAK,SAACkJ,GAAD,OAAcA,EAAS5C,SAGzE0F,mBAAqB,SAAC3K,GAClB,OAAOmH,GAAIyD,OAAOJ,GAAiBxK,IAAKrB,MAAK,SAACkJ,GAAD,OAAcA,EAAS5C,UCFxEpB,GAAe,CACfvB,MAAQ,CACJE,EAAMC,EAAOC,GAEjBmI,SAAW,EACXC,UAAY,EACZ7D,YAAa,GAMbtE,GAAc,SAAC3C,EAAIsC,GACnB,IAAK,IAAIH,EAAI,EAAGA,EAAIG,EAAM7C,OAAQ0C,IAC9B,GAAIG,EAAMH,GAAGnC,KAAOA,EAChB,OAAOsC,EAAMH,IAoErB4I,GAA4B,SAACZ,GAC7B,MAAO,CACHlG,KAzFa,iBA0FbkG,MAAQA,IAqEDa,GAvIO,WAAmC,IAAlC/L,EAAiC,uDAAzB4E,GAAcG,EAAW,uCAChDL,EAAYqG,GAAe/K,GAC/B,OAAQ+E,EAAOC,MACX,IA9BU,SA+BN,IAAInE,EAAO6C,GAAYqB,EAAOhE,GAAI2D,EAAUrB,OAC5CxC,EAAKwD,UAAW,EAChB,MAGJ,IAnCY,WAoCR,IAAIxD,EAAO6C,GAAYqB,EAAOhE,GAAI2D,EAAUrB,OAC5CxC,EAAKwD,UAAW,EAChB,MAGJ,IAxCQ,QAyCJK,EAAUrB,MAAQ0B,EAAO1B,MACzB,MAGJ,IA5Ca,iBA6CTqB,EAAUmH,UAAY9G,EAAOmG,MAC7B,MAGJ,IAhDY,gBAkDR,MAGJ,IApDW,eAqDPxG,EAAUsD,YAActD,EAAUsD,WAClC,MAGJ,QACI,OAAOtD,EAGf,OAAOA,G,8DC7DIsH,GANC,WACZ,OACI,yBAAKtF,IAAKuF,KAAWtL,UAAWC,KAAQoL,UAAWrF,IAAK,eCsBjDuF,GAxBA,SAACxL,GACZ,OACI,yBAAKC,UAAWC,KAAQsL,UACnBxL,EAAMsH,WACD,kBAAC,GAAD,MACJ,yBAAKrH,UAAWC,KAAQuL,SACrBzL,EAAMwF,eAGX,yBAAKvF,UAAWC,KAAQwL,cACpB,4BAAQC,QAAS,WACb3L,EAAM4L,QAAQ5L,EAAM6L,MACrB5L,UAAWC,KAAQ4L,IAAKC,SAAU/L,EAAMsH,YAAa,OACxD,yBAAKrH,UAAWC,KAAQ8L,cAAxB,iBACmBhM,EAAMmL,WAEzB,4BAAQQ,QAAS,WACb3L,EAAM4L,QAAQ5L,EAAMiM,MACrBhM,UAAWC,KAAQ4L,IAAKC,SAAU/L,EAAMsH,YAAa,U,oBCUzD4E,GA5BI,SAAClM,GAChB,IAAIG,EAAOH,EAAMG,KACbgM,EAAchM,EAAKwD,SAAWzD,KAAQkM,SAAWlM,KAAQmM,OACzDC,EAAanM,EAAKwD,SAAW,WAAa,SAK5C,OACI,yBAAK1D,UAAWC,KAAQgM,cACpB,yBAAKjM,UAAWC,KAAQU,MACpB,yBAAKX,UAAWC,KAAQmD,OAAQ2C,IAAK7F,EAAKkD,OAAQ4C,IAAI,WACtD,4BAAQ3B,KAAK,SAASrE,UAAWC,KAAQ4L,IAAM,IAAMK,EAAaR,QAC9D,SAACY,GACGA,EAAEC,iBARnBrM,EAAKwD,SAAmC3D,EAAMoM,SAASjM,EAAKE,IAA5CL,EAAMqM,OAAOlM,EAAKE,MAWtBiM,IAEP,yBAAKrM,UAAWC,KAAQ4F,MACpB,kBAAC,IAAD,CAAS7F,UAAWC,KAAQwC,MAAOtC,GAAI,WAAaD,EAAKE,IAAKF,EAAKuC,OACnE,sCAAYvC,EAAK+C,MACjB,0CAAgB/C,EAAK8C,SC1BjCwJ,GAAW,SAACnN,GAAD,OAAWA,EAAMoN,SAAS/J,OACrCgK,GAAc,SAACrN,GAAD,OAAWA,EAAMoN,SAASxB,UACxC0B,GAAe,SAACtN,GAAD,OAAWA,EAAMoN,SAASvB,WACzC7D,GAAa,SAAChI,GAAD,OAAWA,EAAMoN,SAASpF,YCwC9BxC,gBA9BO,SAACxF,GACnB,MAAQ,CACJgI,WAAaA,GAAWhI,OAIP,SAACyF,GACtB,MAAO,CACHsH,OAAS,SAAChM,GACN0E,ELuHa,SAAC1E,GAAD,OAAQ,SAAC0E,GAC9BA,EAhCO,CACHT,KArGW,iBAqIfwG,GAAUC,iBAAiB1K,GAAIrB,MAC3B,SAACsG,GAC2B,IAApBA,EAAKuH,YACL9H,EAxEU,SAAC1E,GACvB,MAAQ,CACJiE,KAvEU,SAwEVjE,GAAKA,GAqEYyM,CAAoBzM,IAEjC0E,EAtCD,CACHT,KArGW,qBKYEyI,CAAmB1M,KAEhC+L,SAAW,SAAC/L,GACR0E,ELgIe,SAAC1E,GAAD,OAAQ,SAAC0E,GAChCA,EA5CO,CACHT,KArGW,iBAiJfwG,GAAUE,mBAAmB3K,GAAIrB,MAC7B,SAACsG,GAC2B,IAApBA,EAAKuH,YACL9H,EA7EY,SAAC1E,GACzB,MAAQ,CACJiE,KA7EY,WA8EZjE,GAAKA,GA0EY2M,CAAsB3M,IAEnC0E,EAlDD,CACHT,KArGW,qBKeE2I,CAAqB5M,KAElC6M,eAAiB,WACbnI,ELkFD,CACHT,KArGW,sBKuBF,SAACY,EAAYC,EAAenF,GACzC,MAAO,CACHsH,WAAapC,EAAWoC,WACxBnH,KAAOH,EAAMG,KACbkM,OAASlH,EAAckH,OACvBD,SAAWjH,EAAciH,SACzBc,eAAiB/H,EAAc+H,kBAIxBpI,EAlCe,SAAC9E,GAC3B,OAAO,kBAAC,GAAD,CAAcG,KAAMH,EAAMG,KAAMkM,OAAQrM,EAAMqM,OAAQD,SAAUpM,EAAMoM,cCT3Ee,GAAW,SAAC7N,GAAD,OAAWA,EAAM8N,UAAUC,OACtCC,GAAW,SAAChO,GAAD,OAAWA,EAAM8N,UAAUE,UACtChG,GAAa,SAAChI,GAAD,OAAWA,EAAM8N,UAAU9F,YACxCiG,GAAkB,SAACjO,GAAD,OAAWA,EAAM8N,UAAUI,cCyFpCC,GAFC3I,aAnBM,SAACxF,GACnB,MAAO,CACHgO,SAAWA,GAAShO,GACpBqD,MAAQ8J,GAASnN,GACjB4L,SAAWyB,GAAYrN,GACvB6L,UAAYyB,GAAatN,GACzBgI,WAAaA,GAAWhI,GACxB2M,IP1DE,MO2DFJ,IP1DE,UO8De,SAAC9G,GACtB,MAAO,CACH6G,QAAU,SAAC8B,EAAMvC,EAAWD,GACxBnG,EP4Bc,SAAC2I,EAAMvC,EAAWD,GAAlB,OAA+B,SAACnG,GAEtD,GADAA,EANO,CACHT,KArGW,iBA2GXoJ,EACA,OAAQA,GACJ,IAlGF,MAmGM3I,EAASqG,KAA4BD,IACrC,MAGJ,IAtGF,MAuGUA,EAAY,GACZpG,EAASqG,KAA4BD,IASrDb,GAAYC,eAAeY,EAAWD,GAAUlM,MAAK,SAAC4L,GAClD7F,EAhDoB,SAACpC,GACzB,MAAO,CACH2B,KAnFQ,QAoFR3B,MAAQA,GA6CCgL,CAAsB/C,IAC/B7F,EA3BG,CACHT,KArGW,qBO6EEsE,CAAoB8E,EAAMvC,EAAWD,QAI1CpG,EAjFa,SAAC9E,GAC1B,IAAI4L,EAAU,SAAC8B,GACX1N,EAAM4L,QAAQ8B,EAAM1N,EAAMmL,UAAWnL,EAAMkL,WAG/ChB,qBAAU,WACN0B,MACF,IAEF,IAkCIpG,EATuB,SAACoI,GACxB,GAAIA,EAIA,OA9BmB,SAACC,GAGxB,IAFA,IAAIC,EAAS,GACTC,EAAI,GACDF,EAAU/N,OAAS,GACL,IAAbiO,EAAEjO,QACFgO,EAAOvJ,KACH,yBAAKtE,UAAWC,KAAQ8N,QACnBD,IAGTA,EAAI,IAEJA,EAAExJ,KAAKsJ,EAAUI,OAUzB,OAPIF,EAAEjO,OAAS,GACXgO,EAAOvJ,KACH,yBAAKtE,UAAWC,KAAQ8N,QACnBD,IAIND,EAQII,CAHUN,EAAUxI,KAAI,SAAC+I,GAC5B,OAAO,kBAAC,GAAD,CAAuBhO,KAAMgO,QAM5BC,CAAqBpO,EAAM2C,OAC/C,OAAI3C,EAAMsN,SAEF,kBAAC,GAAD,CACI9H,cAAeA,EACfoG,QAASA,EACTK,IAAKjM,EAAMiM,IACXJ,IAAK7L,EAAM6L,IACXV,UAAWnL,EAAMmL,UACjB7D,WAAYtH,EAAMsH,aAKtB,kBAAC,IAAD,CAAUlH,GAAI,S,qBC1BtBiO,GAAYC,aAhCS,SAACtO,GAMtBkK,qBAAU,WAHNlK,EAAM4L,QAAQ5L,EAAMvB,MAAM8P,OAAOvM,OAAQhC,EAAMsH,cAKjD,IAEF,IAAIA,EAAatH,EAAMsH,WACvB,OACI,yBAAKrH,UAAWC,KAAQsO,WACnBlH,EAAa,kBAAC,GAAD,MAAe,kBAAC,GAAD,CAAShI,MAAOU,EAAM2I,cAqBhD7D,gBAhBO,SAACxF,GACnB,MAAO,CACHgI,WAAaA,GAAWhI,GACxBqJ,QAAUgB,GAAkBrK,OAIX,SAACyF,GACtB,MAAO,CACH6G,QAAU,SAAC5J,EAAQsF,GACfvC,EAAS6D,GAAoB5G,EAAQsF,QAMlCxC,CAA6CuJ,ICpB7CI,GAdC,CACXC,eAAiB,WACd,OAAOlH,GAAIQ,IATF,WASgBhJ,MAAK,SAACkJ,GAAD,OAAcA,EAAS5C,SAGxDqJ,gBAAkB,SAACtB,EAAOuB,EAAMC,GAC7B,OAAOrH,GAAId,KAVA,SAAC2G,EAAOuB,EAAMC,GAC7B,MAAOC,oBAAwBzB,EAAQ,aAAeuB,EAAO,eAAiBC,EAS1DE,CAAa1B,EAAOuB,EAAMC,IAAW7P,MAAK,SAACkJ,GAAD,OAAcA,EAAS5C,SAGpF0J,iBAAmB,WAChB,OAAOxH,GAAIyD,OAhBD,cAgBmBjM,MAAK,SAACkJ,GAAD,OAAcA,EAAS5C,UCT7DpB,GAAe,CACflC,OAAS,EACTqL,MAAQ,aACRC,UAAW,EACXhG,YAAa,EACbkG,kBAAe/E,GAuIJwG,GApII,WAAmC,IAAlC3P,EAAiC,uDAAzB4E,GAAcG,EAAW,uCAC7CL,EAAS,gBAAO1E,GACpB,OAAQ+E,EAAOC,MACX,IAnBU,WAoBNN,EAAUhC,OAASqC,EAAOhE,GAC1B,MAGJ,IAvBQ,YAwBJ2D,EAAUqJ,MAAQhJ,EAAOgJ,MACzB,MAGJ,IA3BK,SA4BDrJ,EAAUsJ,UAAW,EACrB,MAGJ,IA/BM,UAgCFtJ,EAAUsJ,UAAW,EACrB,MAGJ,IAlCI,QAmCAtJ,EAAUsD,YAActD,EAAUsD,WAClC,MAGJ,IAxCY,QAyCRtD,EAAUwJ,aAAe,CAACnJ,EAAOmJ,cACjC,MAGJ,IA3CY,WA4CR,IAAIlI,EAAOjB,EAAOiB,KAClBtB,EAAUqJ,MAAQ/H,EAAK+H,MACvBrJ,EAAUhC,OAASsD,EAAKtD,OACxBgC,EAAUsJ,UAAW,EACrB,MAGJ,QACI,OAAOtJ,EAGf,OAAOA,G,yCC5DEkL,GAAQ,SAAC,GAAwC,IAAvCvO,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,KAAMX,EAAyB,EAAzBA,UAAcD,EAAW,4CACzD,OACI,yBAAKC,UAAWC,KAAQgP,OACpB,2CAAWvO,EAAWX,EAAtB,CAA6BC,UAAWA,GAAaW,EAAKf,OAASe,EAAKE,QAAU,IAAMZ,KAAQL,MAAQ,OACvGe,EAAKf,OAASe,EAAKE,QAAU,yBAAKb,UAAWC,KAAQa,MAAOH,EAAKf,OAAe,uCCPhFwN,GAAQ,SAAAA,GACjB,GAAIA,IAA4C,IAAnCA,EAAM8B,WAAWC,QAAQ,KAAa,MAAO,wBCqB1DC,GAAiBjO,YAAU,CAACC,KAAO,aAAlBD,EAfL,SAACpB,GACb,OACI,0BAAMC,UAAWC,KAAQoP,UAAWhO,SAAUtB,EAAMuB,cAChD,kBAACC,EAAA,EAAD,CAAO+N,YAAa,SAAUjL,KAAM,SAAU7D,KAAM,QAASR,UAAWC,KAAQS,MAAOc,UAAWyN,GAAOxN,SAAU,CAACV,EAAUqM,MAC9H,kBAAC7L,EAAA,EAAD,CAAO+N,YAAa,WAAYjL,KAAM,WAAY7D,KAAM,WAAYR,UAAWC,KAAQS,MAAOc,UAAWyN,GAAOxN,SAAU,CAACV,KAC3H,kBAACQ,EAAA,EAAD,CAAOC,UAAW,QAAS6C,KAAM,WAAY7D,KAAM,WAAYR,UAAWC,KAAQsP,WAClF,iHACA,6BACKxP,EAAMwN,cAEX,4BAAQlJ,KAAM,SAAUrE,UAAWC,KAAQ4L,KAA3C,aAkBG2D,G,iLATP,OACI,yBAAKxP,UAAWC,KAAQuP,OACpB,wBAAIxP,UAAWC,KAAQwP,SAAvB,WACA,kBAACL,GAAD,CAAgB/N,SAAUqO,KAAK3P,MAAM0C,MAAO8K,aAAcmC,KAAK3P,MAAMwN,oB,GALjExE,IAAM4G,W,qBCiCX9K,gBAhBO,SAACxF,GACnB,MAAO,CACHgO,SAAWA,GAAShO,GACpBgI,WAAaA,GAAWhI,GACxBkO,aAAeD,GAAgBjO,OAId,SAACyF,GACtB,MAAO,CACHrC,MAAQ,SAAC2K,EAAOuB,EAAMC,GAClB9J,EJgFY,SAACsI,EAAOuB,EAAMC,GAClC,OAAO,SAAC9J,GACJA,EAzCG,CACHT,KAvFI,UAgIJmK,GAAQE,gBAAgBtB,EAAMuB,EAAMC,GAAU7P,MAAK,SAACsG,GACxB,IAApBA,EAAKuH,YACL9H,EAhEY,SAACsI,GACzB,MAAO,CACH/I,KAxEQ,YAyER+I,MAAQA,GA6DSwC,CAAsBxC,IAC/BtI,EAvEL,CACHT,KAlEU,WAmEVjE,GAqEwCiF,EAAKA,KAAKtD,SAC1C+C,EA1DL,CACHT,KA9EK,YAyIGS,EA1CL,CACHT,KA9FY,QA+FZkJ,aAwC8C,qIAE1CzI,EAlDD,CACHT,KAvFI,cI6CSwL,CAAkBzC,EAAOuB,EAAMC,QAKrC/J,EAjDQ,SAAC9E,GACpB,IAiBIqF,EAVmB,SAACpB,GACpB,GAAIA,EACA,OAAOA,EAASmB,KAAI,SAAC+I,GACjB,OACI,yBAAKlO,UAAWC,KAAQsN,cAAeW,MAMzCtM,CAAiB7B,EAAMwN,cACrC,OAAKxN,EAAMsN,SAWJ,qCAVCtN,EAAMsH,WAEF,yBAAKrH,UAAWC,KAAQ6P,mBACpB,kBAAC,GAAD,OAID,kBAAC,GAAD,CAAOrN,MA1BV,SAAC4C,GACT,IAAI+H,EAAQ/H,EAAK+H,MACb2C,EAAW1K,EAAK0K,SAChBnB,IAAavJ,EAAKuJ,SACtB7O,EAAM0C,MAAM2K,EAAO2C,EAAUnB,IAsBGrB,aAAcnI,O,0CCvBvC4K,GARC,WACZ,OACI,yBAAKhQ,UAAWC,KAAQgQ,UACpB,yBAAKlK,IAAKmK,KAAKlK,IAAI,UCLzB/B,GAAe,CACjBkM,eAAgB,GAsBLC,GAfQ,WAAiE,IAAhE/Q,EAA+D,uDAAjC4E,GAAcG,EAAmB,uCAC/EL,EAAS,gBAAO1E,GAGhB,OAFO+E,EAAOC,KACdN,EAAUoM,eAAgB,EACnBpM,GCdXoM,GAAgB,SAAC9Q,GACjB,OAAOA,EAAMgR,KAAKF,eCehBG,G,2MACFC,UAAY,kBAAC,IAAD,CAAO9K,KAAM,WAAYC,OAAK,EAACC,OAAQ,WAC/C,IAAI+C,EAAU,EAAK3I,MAAMyQ,UAAU,GACnC,OAAO,kBAAC,GAAD,CAASnR,MAAOqJ,O,EAG3B+H,gBAAkB,EAAK1Q,MAAMyQ,UAAUrL,KAAI,SAACjF,GACxC,GAAmB,cAAfA,EAAKuC,MACL,OAAO,kBAAC,IAAD,CAAOgD,KAAM,WAAavF,EAAKuC,MAAOiD,OAAK,EAACC,OAAU,kBAAM,kBAAC,GAAD,CAAStG,MAAOa,U,wEAKjF,IAAD,OACL,OAAIwP,KAAK3P,MAAMoQ,cACPT,KAAK3P,MAAMsN,SAEP,yBAAKrN,UAAU,QACX,kBAAC,IAAD,CAAOyF,KAAK,YAAYE,OAAQ,kBAAM,kBAAC,GAAD,CAAUtG,MAAO,EAAKU,MAAM0E,kBAClE,kBAAC,IAAD,CAAOgB,KAAK,wBAAwBE,OAAQ,kBAAM,kBAAC+K,GAAD,SACjDhB,KAAKa,UACLb,KAAKe,gBACN,kBAAC,IAAD,CAAOhL,KAAK,iBACR,kBAAC,GAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,IAAIC,OAAK,EAACC,OAAQ,kBAAM,kBAACsK,GAAD,UAKxC,kBAAC,IAAD,KACI,yBAAKjQ,UAAU,QACX,kBAAC,IAAD,CAAUG,GAAI,MACd,kBAAC,IAAD,CAAOsF,KAAK,IAAIC,OAAK,EAACC,OAAQ,kBAAM,kBAAC,GAAD,YAMpD+J,KAAK3P,MAAM4Q,OACXjB,KAAK3P,MAAM6Q,aACH,kBAAC,GAAD,W,GAzCD7H,IAAM4G,WAmEV9K,gBArBO,SAACxF,GACnB,MAAO,CACHoF,aAAepF,EAAMoF,aACrBoM,WAAaxR,EAAMwR,WACnBL,UAAYnR,EAAMmR,UAAU9N,MAC5B2K,SAAWA,GAAShO,GACpB8Q,cAAgBA,GAAc9Q,OAIb,SAACyF,GACtB,MAAO,CACH8L,WAAa,WACT9L,EFtDD,CACHT,KAtBc,iBE6EdsM,KAAO,WACH7L,GRmCA,SAACA,GACJ0J,GAAQC,iBAAiB1P,MACrB,SAACsG,GAC2B,IAApBA,EAAKuH,YACL9H,EAZU,SAACO,GAC5B,MAAO,CACHhB,KAnGY,WAoGZgB,KAAOA,GASeyL,CAAyBzL,EAAKA,iBQlC7CR,CAA6CyL,I,6ECgB7CS,GAjGFC,cAAW,SAAAC,GAAK,cAAK,CAC9BC,OAAS,CACLC,WAAY,yBAA2BF,EAAMG,QAAQC,QAAQC,KAAO,SAAWL,EAAMG,QAAQC,QAAQE,MAAQ,QAC7GC,MAAQ,SAGZC,KAAI,cACAC,MAAO,MACPC,OAAS,OACRV,EAAMW,YAAYC,KAAK,MAAS,CAC7BH,MAAO,SAIfI,SAAW,CACP,UAAY,CACRC,gBAAkB,gBAI1BtC,SAAO,GACHuC,SAAU,UADP,eAEFf,EAAMW,YAAYC,KAAK,MAAS,CAC7BG,SAAU,WAHX,eAKFf,EAAMW,YAAYC,KAAK,MAAS,CAC7BG,SAAU,SANX,uBAQK,SARL,4BASU,QATV,GAYPC,KAAO,CACHC,WAAa,QAGjBC,IAAM,CACFC,QAAU,UACVJ,SAAW,QAGfK,QAAO,gBACApB,EAAMqB,OAAOC,QADb,CAEHC,aAAe,QAGnBC,KAAO,CACHC,IAAM,OAGVC,SAAW,CACPZ,gBAAkBd,EAAMG,QAAQC,QAAQE,MACxCC,MAAQ,QACRoB,WAAa,QAGjBC,QAAM,GACFd,gBAAkBd,EAAMG,QAAQxR,MAAM0R,KACtCE,MAAQ,QACRoB,WAAa,QAHX,eAID3B,EAAMW,YAAYC,KAAK,MAAS,CAC7BG,SAAU,WALZ,eAOF,UAAY,CACRD,gBAAkBd,EAAMG,QAAQxR,MAAM2R,QARxC,GAYNuB,eAAc,cACVZ,WAAa,OACba,QAAU,OACVC,cAAgB,SAChBC,eAAiB,SACjBjB,SAAW,SACVf,EAAMW,YAAYC,KAAK,MAAS,CAC7BK,WAAa,QAIrB9E,MAAQ,CACJ4E,SAAW,QACXQ,aAAe,SAGnBU,WAAa,CACThB,WAAa,OACbV,MAAQ,QACR,UAAU,CACNO,gBAAkB,gBAI1BoB,iBAAmB,CACfC,OAAS,Y,mTC0IFlC,GA1MA,SAACnR,GACZ,IAAIkR,EAAQoC,eACRpT,EAAU8Q,GAAOE,GAFC,EAIIlH,mBAAS,MAJb,oBAIjBuJ,EAJiB,KAITC,EAJS,OAKQxJ,oBAAS,GALjB,oBAKjByJ,EALiB,KAKPC,EALO,OAMY1J,oBAAS,GANrB,oBAMjB2J,EANiB,KAMLC,EANK,OAOgB5J,oBAAS,GAPzB,oBAOjB6J,EAPiB,KAOLC,EAPK,OAUc9J,mBAAS,GAVvB,oBAUjB+J,EAViB,KAUJC,EAVI,OAWgBhK,oBAAU,GAX1B,oBAWjBiK,EAXiB,KAWHC,EAXG,KAatBhK,qBAAU,WACN,IAAIiK,EAAW7V,OAAOC,SAAS6V,SAI/B,OAH6B,wBAAzB9V,OAAOC,SAAS8V,OAChBF,EAAWA,EAASG,UAAUH,EAAS/E,QAAQ,UAAY,IAEvD+E,GACJ,IAAK,IACDH,EAAe,GACf,MAEJ,IAAK,WACDA,EAAe,GACf,MAEJ,IAAK,YACDA,EAAe,GACf,MAEJ,IAAK,wBACDA,EAAe,GACf,MAEJ,QACIA,GAAgB,MAI1B,IAEF,IAAIO,EAAa,WACbb,GAAaD,IAGbe,EAAe,WACfZ,GAAeD,IAYfc,EAAkB,SAAClI,GACnBiH,EAAU,MACVe,KAGAG,EAAe,SAACnI,EAAGoI,GACnBT,EAAgBS,IAGhBC,EAAUC,aAAc3D,EAAMW,YAAYiD,GAAG,OAE7CC,EAAa,SAACC,EAAGC,EAAIC,EAAK1S,GAC1B,MAAO,CACHlC,KAAO0U,EACP1D,QAAU2D,EACVE,UAAYD,EACZE,KAAO5S,IAWX6S,EAPQ,CACRN,EAAW,IAAK,OAAQ,mBAAoB,kBAAC,KAAD,OAC5CA,EAAW,WAAY,UAAW,qCAAsC,kBAAC,KAAD,OACxEA,EAAW,YAAa,WAAY,sBAAuB,kBAAC,KAAD,OAC3DA,EAAW,wBAAyB,QAAS,gBAAiB,kBAAC,KAAD,QAGhC3P,KAAI,SAACkQ,EAAQX,GAC3C,OACI,kBAACY,GAAA,EAAD,CAAU5T,QAAM,EAACgK,QAAS6I,EAAc/S,UAAW+T,IAAMpV,GAAIkV,EAAM,MAC/D,kBAACG,GAAA,EAAD,KACKH,EAAM,MAEX,kBAACI,GAAA,EAAD,CAAcpE,QAASgE,EAAM,QAAaH,UAAWG,EAAM,gBAKvE,OACI,oCACI,kBAACK,GAAA,EAAD,iBAAY3V,EAAZ,CAAmBC,UAAWC,EAAQiR,SAClC,kBAACyE,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQC,eAAa,EAACrU,UAAW+T,IAAMpV,GAAI,IAAKH,UAAWC,EAAQ6R,UAC/D,yBAAK/L,IAAK0L,KAAMzL,IAAK,OAAQhG,UAAWC,EAAQwR,OAChD,0BAAMzR,UAAWC,EAAQwP,SAAzB,YAEH1P,EAAMsN,SAAW,oCACbsH,EACG,oCACI,kBAACmB,GAAA,EAAD,CAAM9U,MAAO8S,EAAaiC,eAAgB,YAAa/V,UAAWC,EAAQgS,KAAM+D,SA1DvF,SAAC1J,EAAG2J,GACrBlC,EAAekC,KA0Da,kBAACC,GAAA,EAAD,CAAKC,MAAO,OAAQ3U,UAAW+T,IAAMpV,GAAI,IAAKH,UAAWC,EAAQkS,MACjE,kBAAC+D,GAAA,EAAD,CAAKC,MAAO,UAAW3U,UAAW+T,IAAMpV,GAAI,WAAYH,UAAWC,EAAQkS,MAC3E,kBAAC+D,GAAA,EAAD,CAAKC,MAAO,WAAY3U,UAAW+T,IAAMpV,GAAI,YAAaH,UAAWC,EAAQkS,MAC7E,kBAAC+D,GAAA,EAAD,CAAKC,MAAO,QAAS3U,UAAW+T,IAAMpV,GAAI,wBAAyBH,UAAWC,EAAQkS,MACtF,kBAAC+D,GAAA,EAAD,CAAKC,MAAO,UACPC,gBAAe5C,EAAW,YAAShL,EACnC6N,YAAW/C,EAAS,YAAS9K,EAC7B8N,gBAAehD,EAAS,YAAS9K,EACjC+N,YA/DZ,SAACjK,GACtBiH,EAAUjH,EAAEkK,eACZlC,KA8DiCtU,UAAWC,EAAQkS,OAG5B,kBAACsE,GAAA,EAAD,CAAMC,KAAMlD,EAAUpT,GAAI,OACpBuW,SAAUrD,EAAQsD,QAASpC,EAC3BqC,cAAerD,EAAUsD,cAAe,CAACC,aAAevC,GACxDvU,QAAS,CAAC+W,MAAQ/W,EAAQwS,KAAMrM,KAAOnG,EAAQ0S,UAC/CsE,gBAAiB,CACbC,SAAU,MACVC,WAAY,UAEhBC,UAAW,EACXC,aAAW,GAEb,kBAACC,GAAA,EAAD,CAAUC,SAA2B,IAAjBvD,EAAoBtI,QAAS,SAACY,GAAOmI,EAAanI,EAAE,IAAK9K,UAAW+T,IAAMpV,GAAI,iBAAlG,WAGA,kBAACmX,GAAA,EAAD,CAAUC,SAA2B,IAAjBvD,EAAoBtI,QAAS,SAACY,GAAOmI,EAAanI,EAAE,IAAK9K,UAAW+T,IAAMpV,GAAI,gBAAlG,QAGA,kBAACmX,GAAA,EAAD,CAAUC,SAA2B,IAAjBvD,EAAoBtI,QAAS,SAACY,GAAOmI,EAAanI,EAAE,IAAK9K,UAAW+T,IAAMpV,GAAI,gBAAlG,aAIH,oCACD,kBAACqX,GAAA,EAAD,CAAiBZ,QAASrC,EAAckD,OAAQlD,EAAcmC,KAAMhD,GAChE,kBAACgE,GAAA,EAAD,KACI,kBAACpC,GAAA,EAAD,KACI,kBAACqC,GAAA,EAAD,CAAYjM,QAAS6I,EAAcvU,UAAWC,EAAQkT,kBAClD,kBAAC,KAAD,QAGPiC,EACD,kBAACE,GAAA,EAAD,CAAU5T,QAAM,EAACgK,QAAS,SAACY,GAAOuH,GAAmBD,KACjD,kBAAC4B,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcpE,QAAS,UAAW6D,UAAW,yBAC5CtB,EAAa,kBAACgE,GAAA,EAAD,MAAgB,kBAACC,GAAA,EAAD,OAElC,kBAACC,GAAA,EAAD,CAAUC,GAAInE,EAAYoE,QAAS,IAAKC,eAAa,GACjD,kBAACP,GAAA,EAAD,CAAMlW,UAAU,MAAM0W,gBAAc,GAChC,kBAAC5C,GAAA,EAAD,CAAU5T,QAAM,EAACF,UAAW+T,IAAMpV,GAAI,gBAAiBuL,QAAS6I,GAC5D,kBAACiB,GAAA,EAAD,KACI,kBAAC2C,GAAA,EAAD,OAEJ,kBAAC1C,GAAA,EAAD,CAAcpE,QAAQ,WAE1B,kBAACiE,GAAA,EAAD,CAAU5T,QAAM,EAACF,UAAW+T,IAAMpV,GAAI,eAAgBuL,QAAS6I,GAC3D,kBAACiB,GAAA,EAAD,KACI,kBAAC2C,GAAA,EAAD,OAEJ,kBAAC1C,GAAA,EAAD,CAAcpE,QAAQ,UAE1B,kBAACiE,GAAA,EAAD,CAAU5T,QAAM,EAACF,UAAW+T,IAAMpV,GAAI,eAAgBuL,QAAS6I,GAC3D,kBAACiB,GAAA,EAAD,KACI,kBAAC2C,GAAA,EAAD,OAEJ,kBAAC1C,GAAA,EAAD,CAAcpE,QAAQ,iBAM1C,kBAACuE,GAAA,EAAD,CAAQlK,QAAS6I,EAAcvU,UAAWC,EAAQiT,YAC9C,kBAAC,KAAD,QAGZ,yBAAKlT,UAAWC,EAAQ6S,gBACpB,yBAAK9S,UAAWC,EAAQmN,OACnBrN,EAAMqN,OAEX,kBAACwI,GAAA,EAAD,CAAQlK,QAAS3L,EAAM8S,OAAQ7S,UAAWC,EAAQ4S,QAAlD,aAIF,uCAGd,yBAAK7S,UAAWC,EAAQoS,YCrMrBxN,gBAfO,SAACxF,GACnB,MAAO,CACH+N,MAAQF,GAAS7N,GACjBgO,SAAWA,GAAShO,OAIH,SAACyF,GACtB,MAAO,CACH+N,OAAS,WACL/N,GXmGD,SAACA,GACJ0J,GAAQO,mBAAmBhQ,MAAK,SAACsG,GAC7BP,EAxCD,CACHT,KAnFM,sBW0BCQ,EAvBS,SAAC9E,GACrB,OAAIA,EAAMsN,SACC,kBAAC,GAAD,CAAQA,SAAUtN,EAAMsN,SAAUD,MAAOrN,EAAMqN,MAAOyF,OAAQ9S,EAAM8S,SAEpE,kBAAC,GAAD,S,oBCeA5B,G,OAzBHmH,GAAe,CACvBhH,QAAU,CACNC,QAAU,CACNC,KAAO,UACPC,MAAQ,WAEZ3R,MAAQ,CACJ0R,KAAO,UACPC,MAAQ,YAIhB8G,UAAY,CACRC,OAAS,CACL5G,MAAQ,MACR6G,KAAO,CACH7G,MAAQ,OAEZlG,QAAU,CACNkG,MAAQ,mBCET8G,GAdH,SAACzY,GACX,OACI,kBAAC,IAAD,CAAe0Y,SAAUC,UACrB,kBAAC,IAAD,CAAUC,MAAO5Y,EAAM4Y,OACnB,kBAACC,GAAA,EAAD,CAAe3H,MAAOA,IAClB,yBAAKjR,UAAU,OACX,kBAAC,GAAD,MACA,kBAAC,GAAD,W,SCdlBiE,GAAe,CAACJ,YAMLgV,GAJQ,SAACxZ,EAAO+E,GAC3B,OAAOH,I,oBCMP6U,GAAWC,aAAgB,CAC3BtU,aAAcN,GACdqM,UAAWhK,GACXqK,WAAYgI,GACZpM,SAAUrB,GACVzB,YAAab,GACbqE,UAAY6B,GACZqB,KAAOD,GACPhP,KAAO4X,OAGLC,GAAmB5a,OAAO6a,sCAAwCC,KAIzDR,GAFHS,aAAYN,GAAUG,GAAiBI,aAAgBC,SCnBtD,WAAgB,IAAfX,EAAc,uDAANY,GAClBC,IAAS7T,OAAO,kBAAC,GAAD,CAAKgT,MAAOA,IAAUc,SAASC,eAAe,UCAlE/T,G5DgBO,SAAkBhH,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI+a,IAAIjB,SAAwBra,OAAOC,SAASsb,MACpDC,SAAWxb,OAAOC,SAASub,OAIvC,OAGFxb,OAAOyb,iBAAiB,QAAQ,WAC9B,IAAMpb,EAAK,UAAMga,SAAN,sBAEPva,IAgEV,SAAiCO,EAAOC,GAEtCob,MAAMrb,EAAO,CACXkJ,QAAS,CAAE,iBAAkB,YAE5B7I,MAAK,SAAAkJ,GAEJ,IAAM+R,EAAc/R,EAASL,QAAQG,IAAI,gBAEnB,MAApBE,EAASzE,QACO,MAAfwW,IAA8D,IAAvCA,EAAY7K,QAAQ,cAG5CvQ,UAAUC,cAAcob,MAAMlb,MAAK,SAAAC,GACjCA,EAAakb,aAAanb,MAAK,WAC7BV,OAAOC,SAAS6b,eAKpB1b,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFA4a,CAAwB1b,EAAOC,GAI/BC,UAAUC,cAAcob,MAAMlb,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,O4DvC/BE,I,mBCVAZ,EAAOC,QAAU,CAAC,SAAW,2BAA2B,QAAU,0BAA0B,OAAS,yBAAyB,IAAM,sBAAsB,aAAe,+BAA+B,aAAe,iC,mBCAvND,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,qBAAqB,KAAO,mBAAmB,SAAW,uBAAuB,IAAM,oB,mBCD5ID,EAAOC,QAAU,IAA0B,6C,mBCC3CD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,KAAO,2BAA2B,OAAS,6BAA6B,IAAM,0BAA0B,OAAS,6BAA6B,SAAW,+BAA+B,KAAO,2BAA2B,MAAQ,8B,mBCAtSD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,UAAY,yBAAyB,QAAU,uBAAuB,MAAQ,qBAAqB,SAAW,wBAAwB,IAAM,qB,mBCA3LD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,oBAAoB,KAAO,oBAAoB,SAAW,wBAAwB,OAAS,wB,mBCAjJD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,SAAW,2BAA2B,MAAQ,wBAAwB,KAAO,yB,mBCArID,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,qBAAqB,KAAO,mBAAmB,MAAQ,sB,mBCD5GD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.d6c3367f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__1Olbp\",\"link\":\"User_link__7K8GX\",\"active\":\"User_active__1U0eM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialog\":\"Dialog_Dialog__emF7X\",\"form\":\"Dialog_form__1i_Mq\",\"button\":\"Dialog_button__203a6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__k_ZHH\",\"author\":\"Message_author__1J-mb\",\"text\":\"Message_text__fDGum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Status_status__1fG8W\",\"input\":\"Status_input__2zYuJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__dtkUK\",\"error\":\"Input_error__1B2WB\",\"span\":\"Input_span__1q-CF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Messages\":\"Messages_Messages__12Qme\",\"users\":\"Messages_users__2f5iZ\"};","module.exports = __webpack_public_path__ + \"static/media/Misha.7547549a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Anya.9c5e0711.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Zeka.a704a6ae.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader_wrapper\":\"LoginContainer_preloader_wrapper__1ui1K\",\"errorMessage\":\"LoginContainer_errorMessage__10XCm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__3nFHM\",\"header\":\"Profile_header__2xuKN\"};","module.exports = __webpack_public_path__ + \"static/media/user.0f16ef6a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Preloader_Preloader__1CrUy\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.b1df8c1d.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ProfileContainer_Container__fxG_f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Greeting\":\"Greeting_Greeting__1ET-m\",\"title\":\"Greeting_title__3vWkW\"};","module.exports = __webpack_public_path__ + \"static/media/Greetings.d301fdc8.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const maxLength = (length) => {\r\n    return (value) => {\r\n    if (value && value.length > length) return \"Max length is \" + length;\r\n    return undefined;\r\n    }\r\n}","import React from \"react\";\r\nimport classes from \"./User.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = (props) => {\r\n    return(\r\n        <div className={classes.user}>\r\n            <NavLink to={\"/Messages/\" + props.id} className={classes.link} activeClassName={classes.active}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport classes from \"./TextArea.module.css\";\r\n\r\nexport const TextArea = ({input, meta, ...props}) => {\r\n    return(\r\n        <div className={classes.TextArea}>\r\n            <textarea {...input} {...props} className={classes.textarea + (meta.error && meta.touched ? \" \" + classes.error : \"\")}/>\r\n            {meta.error && meta.touched ? <div className={classes.span}>{meta.error}</div> : <></>}\r\n        </div>\r\n    );\r\n}","export const required = value => {\r\n    if (!value || value === \"\") return \"Field is required\";\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport classes from \"./Dialog.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../../Validated/TextArea/TextArea\";\r\nimport {required} from \"../../../utils/validators/required\";\r\nimport {maxLength} from \"../../../utils/validators/maxLength\";\r\n\r\nconst maxLengthValidator = maxLength(100);\r\n\r\nlet MessageForm = (props) => {\r\n    return(\r\n        <form className={classes.form} onSubmit={props.handleSubmit}>\r\n            <Field component={TextArea} name={\"message\"} validate={[required, maxLengthValidator]}></Field>\r\n            <button className={classes.button}>Submit</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nlet MessageFormRedux = reduxForm({form : \"messageForm\"})(MessageForm);\r\n\r\nconst Dialog = (props) => {\r\n    return(\r\n        <div className={classes.Dialog}>\r\n            {props.renderedMessages}\r\n            <MessageFormRedux onSubmit={props.addMsg}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialog;","let dialogs = [\r\n    {\r\n        userId : 1,\r\n        dialog : [\r\n            {\r\n                text : \"Hi\",\r\n                author : \"Me\"\r\n            },\r\n            {\r\n                text : \"How are you?\",\r\n                author : \"Misha\"\r\n            },\r\n            {\r\n                text : \"I`m gonna hang out\",\r\n                author : \"Me\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userId : 2,\r\n        dialog : [\r\n            {\r\n                text : \"Hi, Ann\",\r\n                author : \"Me\"\r\n            },\r\n            {\r\n                text : \"How are you?\",\r\n                author : \"Ann\"\r\n            },\r\n            {\r\n                text : \"I`m fine\",\r\n                author : \"Me\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userId : 3,\r\n        dialog : [\r\n            {\r\n                text : \"Hi, Zeka\",\r\n                author : \"Me\"\r\n            },\r\n            {\r\n                text : \"Let`s play CS:GO\",\r\n                author : \"Zeka\"\r\n            },\r\n            {\r\n                text : \"I`m fine\",\r\n                author : \"Me\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userId : 4,\r\n        dialog : [\r\n            {\r\n                text : \"Hi\",\r\n                author : \"Me\"\r\n            },\r\n            {\r\n                text : \"How are you?\",\r\n                author : \"Azat\"\r\n            },\r\n            {\r\n                text : \"I`m gonna hang out\",\r\n                author : \"Me\"\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport default dialogs;","let posts = [\r\n    {\r\n        userId : 1,\r\n        p : [\r\n            {\r\n                text :\"Hi, wassup?\",\r\n                likes : 45\r\n            },\r\n            {\r\n                text: \"How are you?\",\r\n                likes: 24\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userId : 2,\r\n        p : [\r\n            {\r\n                text :\"Hi, i`m Ann\",\r\n                likes : 75\r\n            },\r\n            {\r\n                text: \"I really love dogs\",\r\n                likes: 97\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userId : 3,\r\n        p : [\r\n            {\r\n                text :\"Hi, I`m Misha?\",\r\n                likes : 24\r\n            },\r\n            {\r\n                text: \"Sport one love\",\r\n                likes: -32\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        userId : 4,\r\n        p : [\r\n            {\r\n                text :\"Hi, I`m Zeka?\",\r\n                likes : 36\r\n            },\r\n            {\r\n                text: \"Омск топ\",\r\n                likes: 100000002\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport default posts;","import Misha_ava from \"../img/Misha.jpg\";\r\nimport Anya_ava from \"../img/Anya.jpg\";\r\nimport Zeka_ava from \"../img/Zeka.jpg\";\r\nimport My_avatar from \"../img/ava.jpeg\";\r\nimport profile_header from \"../img/profile-header.jpeg\";\r\nimport posts from \"./posts\";\r\n\r\nlet getPostsByID = (id) => {\r\n    for (let i = 0; i < posts.length; i++){\r\n        if (posts[i].userId === id){\r\n            return posts[i].p;\r\n        }\r\n    }\r\n};\r\n\r\nlet getUserByLogin = (login) => {\r\n    let users = [Me,Anya,Misha,Zeka];\r\n    for (let i = 0; i < users.length; i++){\r\n        if (users[i].login === login){\r\n            return users[i];\r\n        }\r\n    }\r\n};\r\n\r\nlet getUserByID = (id) => {\r\n    let users = [Me,Anya,Misha,Zeka];\r\n    for (let i = 0; i < users.length; i++){\r\n        if (users[i].id === id){\r\n            return users[i];\r\n        }\r\n    }\r\n};\r\n\r\nlet Me = {\r\n    id : 1,\r\n    login : \"Whatruska\",\r\n    date : \"03.03.2002\",\r\n    city : \"Omsk\",\r\n    phone : \"+79136560423\",\r\n    vk : \"vk.com/vitdub\",\r\n    avatar : My_avatar,\r\n    header: profile_header,\r\n    posts : getPostsByID(1),\r\n    status : \"Пишем код слезами\"\r\n};\r\n\r\nlet Anya = {\r\n    id : 2,\r\n    login : \"Anya\",\r\n    date : \"04.05.2001\",\r\n    city : \"Omsk\",\r\n    phone : \"+79146578354\",\r\n    vk : \"vk.com/annya\",\r\n    avatar : Anya_ava,\r\n    header : profile_header,\r\n    posts : getPostsByID(2),\r\n    followed : false,\r\n    status : \"Эконом - чемпион\"\r\n};\r\n\r\nlet Zeka = {\r\n    id : 4,\r\n    login : \"Zeka\",\r\n    date : \"25.04.1996\",\r\n    city : \"Omsk\",\r\n    phone : \"+79146578354\",\r\n    vk : \"vk.com/zeka\",\r\n    avatar : Zeka_ava,\r\n    header : profile_header,\r\n    posts : getPostsByID(4),\r\n    followed : true,\r\n    status : \"I love Siberia\"\r\n};\r\n\r\nlet Misha = {\r\n    id : 3,\r\n    login : \"Misha\",\r\n    date : \"28.31.2001\",\r\n    city : \"Omsk\",\r\n    phone : \"+79146578354\",\r\n    vk : \"vk.com/Misha\",\r\n    avatar : Misha_ava,\r\n    header : profile_header,\r\n    posts : getPostsByID(3),\r\n    followed : false,\r\n    status : \"Спорт - это жизнь\"\r\n};\r\n\r\nlet friends = [\r\n    {\r\n        name : \"Misha\",\r\n        avatar : Misha_ava\r\n    },\r\n    {\r\n        name : \"Anya\",\r\n        avatar : Anya_ava\r\n    },\r\n    {\r\n        name : \"Zeka\",\r\n        avatar : Zeka_ava\r\n    }\r\n];\r\n\r\nlet users = [\r\n    {\r\n        id: 1,\r\n        name : \"Misha\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name : \"Anya\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name : \"Evgenii\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name : \"Azat\"\r\n    },\r\n];\r\n\r\nexport {users, friends, Me, Misha, Zeka, Anya, getUserByLogin, getUserByID};","let getDeepMessagesPageCopy = (state) => {\r\n    let stateCopy = {...state};\r\n    stateCopy.users = [...state.users];\r\n    for (let i = 0; i < state.users.length; i++){\r\n        stateCopy.users[i] = {...state.users[i]};\r\n        stateCopy.users[i].id = state.users[i].id;\r\n        stateCopy.users[i].name = state.users[i].name;\r\n    }\r\n    stateCopy.messages = [...state.messages];\r\n    for (let i = 0; i < state.messages.length; i++){\r\n        stateCopy.messages[i] = {...state.messages[i]};\r\n        stateCopy.messages[i].dialog = [...state.messages[i].dialog];\r\n        stateCopy.messages[i].userId = state.messages[i].userId;\r\n    }\r\n    return stateCopy;\r\n};\r\n\r\nexport default getDeepMessagesPageCopy;","import dialogs from \"../data/dialogs\";\r\nimport {users} from \"../data/users\";\r\nimport getDeepMessagesPageCopy from \"../copiers/messagesPageCopier\";\r\n\r\nconst ADD_MSG = 'ADD-MSG';\r\n\r\nlet initialState = {\r\n    users: users,\r\n    messages : dialogs,\r\n    msg : \"\"\r\n};\r\n\r\nexport const addMsgActionCreator = (msg, id) => {\r\n    return{\r\n        type : ADD_MSG,\r\n        text : msg,\r\n        id : id\r\n    }\r\n};\r\n\r\nexport const messageReducer = (state = initialState, action) => {\r\n\r\n    let stateCopy = getDeepMessagesPageCopy(state);\r\n\r\n    switch (action.type) {\r\n        case ADD_MSG : {\r\n            for (let i = 0; i < stateCopy.messages.length; i++){\r\n                if (stateCopy.messages[i].userId === action.id){\r\n                    stateCopy.messages[i].dialog.push({\r\n                        text : action.text,\r\n                        author : \"Me\"\r\n                    });\r\n                    return stateCopy;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        default : {\r\n            return stateCopy;\r\n        }\r\n    }\r\n};\r\n\r\nexport default messageReducer;\r\n","import React from \"react\";\r\nimport classes from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <div className={classes.Message}>\r\n            <div className={classes.author}>\r\n                {props.author + \" : \"}\r\n            </div>\r\n            <div className={classes.text}>\r\n                {props.text}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","const getUsers = (state) => state.messagesPage.users;\r\nconst getMessages = (state) => state.messagesPage.messages;\r\nconst getMsg = (state) => state.messagesPage.msg;\r\n\r\nexport {getMessages, getMsg, getUsers}\r\n","import {connect} from \"react-redux\";\r\nimport Dialog from \"./Dialog\";\r\nimport {addMsgActionCreator} from \"../../../reducers/messageReducer\";\r\nimport * as React from \"react\";\r\nimport Message from \"./Message/Message\";\r\nimport {getMessages} from \"../../../selectors/messageSelector\";\r\n\r\nconst DialogContainer = (props) => {\r\n    let renderMessages = () => props.messages.map((message) => {\r\n        return(\r\n            <Message author={message.author} text={message.text}/>\r\n        );\r\n    });\r\n\r\n    let addMessage = (data) =>{\r\n        props.add(data.message, props.id);\r\n    }\r\n\r\n    return(<Dialog renderedMessages={renderMessages()} addMsg={addMessage}/>);\r\n}\r\n\r\nlet getMsgsByID = (messages, id) => {\r\n    for (let i = 0; i < messages.length; i++){\r\n        let d = messages[i];\r\n        if (d.userId === id){\r\n            return d.dialog;\r\n        }\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return({\r\n        messages : getMessages(state),\r\n    });\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return({\r\n        add : (text, id) => {\r\n            dispatch(addMsgActionCreator(text, id))\r\n        }\r\n    });\r\n};\r\n\r\nlet mergeProps = (stateProps, dispatchProps, props) => {\r\n    return({\r\n        id : props.id,\r\n        messages : getMsgsByID(stateProps.messages, props.id),\r\n        add : dispatchProps.add\r\n    });\r\n};\r\n\r\nconst ConnectedDialogContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(DialogContainer);\r\n\r\nexport default ConnectedDialogContainer;","import React from \"react\";\r\nimport classes from './Messages.module.css';\r\nimport User from \"./User/User\";\r\nimport {Route} from \"react-router-dom\";\r\nimport DialogContainer from \"./Dialog/DialogContainer\";\r\n\r\nconst Messages = (props) => {\r\n    let state = props.state;\r\n    let renderedUsers = state.users.map((user) => {\r\n        return (\r\n            <User id={user.id} name={user.name}/>\r\n        );\r\n    });\r\n    let renderedDialogs = state.messages.map((d) => {\r\n        return(\r\n            <Route path={'/Messages/' + d.userId} exact render={() => <DialogContainer id={d.userId}/>}/>\r\n        );\r\n    });\r\n    return (\r\n        <div className={classes.Messages}>\r\n            <div className={classes.users}>\r\n                {renderedUsers}\r\n            </div>\r\n            {renderedDialogs}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport classes from './Info.module.css';\r\n\r\nconst Info = (props) => {\r\n    let info = props.userInfo;\r\n    return(\r\n        <div className={classes.Info}>\r\n            <img className={classes.avatar} src={props.avatar} alt=\"Ava\"/>\r\n            <div className={classes.data}>\r\n                <span className={classes.fio}>{info.login}</span>\r\n                <span className={classes.date}>Birth date : {info.date}</span>\r\n                <span className={classes.city}>City : {info.city}</span>\r\n                <span className={classes.contacts}>\r\n                    <span className={classes.phone}> Tel : {info.phone}</span>\r\n                    <span className={classes.vk}> Vk : {info.vk}</span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Info;","import React from 'react';\r\nimport classes from './Posts.module.css';\r\n\r\nconst Posts = (props) => {\r\n    return (\r\n    <div className={classes.posts}>\r\n        <h2>Posts</h2>\r\n        <div className={classes.list}>\r\n            {props.renderedPosts}\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Posts;","let getUserPagesCopy = (state) => {\r\n    let stateCopy = {...state};\r\n    stateCopy.myPostsCount++;\r\n    for (let i = 0; i < stateCopy.users.length; i++){\r\n        stateCopy.users[i] = {...state.users[i]};\r\n        stateCopy.users[i].id = state.users[i].id;\r\n        stateCopy.users[i].login = state.users[i].login;\r\n        stateCopy.users[i].date = state.users[i].date;\r\n        stateCopy.users[i].city = state.users[i].city;\r\n        stateCopy.users[i].phone = state.users[i].phone;\r\n        stateCopy.users[i].vk = state.users[i].vk;\r\n        stateCopy.users[i].avatar = state.users[i].avatar;\r\n        stateCopy.users[i].header = state.users[i].header;\r\n        stateCopy.users[i].posts = [...state.users[i].posts];\r\n    }\r\n\r\n    return stateCopy;\r\n};\r\n\r\nexport default getUserPagesCopy;","import {Anya, Zeka, Misha, Me} from \"../data/users\";\r\nimport getUserPagesCopy from \"../copiers/userPagesCopier\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\n\r\nlet initialState = {\r\n    users :[Me, Zeka, Misha, Anya],\r\n    myPostsCount : 2\r\n};\r\n\r\nconst postReducer = (state = initialState, action) => {\r\n\r\n    let stateCopy = getUserPagesCopy(state);\r\n\r\n    switch (action.type) {\r\n        case ADD_POST : {\r\n            stateCopy.users[0].posts.push({\r\n                text : action.post,\r\n                likes: 0\r\n            });\r\n            stateCopy.myPostsCount++;\r\n            return stateCopy;\r\n        }\r\n        default :{\r\n            return stateCopy;\r\n        }\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (post) => {\r\n    return {\r\n        type : ADD_POST,\r\n        post : post\r\n    }\r\n};\r\n\r\nexport default postReducer;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return(\r\n        <div className={classes.Post}>\r\n            <img className={classes.avatar} src={props.ava} alt='post author img'/>\r\n            <div className={classes.text}>\r\n                {props.text}\r\n            </div>\r\n            <div className={classes.likes}>\r\n                <b>Likes : </b>{props.likes}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import {connect} from \"react-redux\";\r\nimport Posts from \"./Posts\";\r\nimport {addPostActionCreator} from \"../../../reducers/postReducer\";\r\nimport {getUserByLogin} from \"../../../data/users\";\r\nimport React from \"react\";\r\nimport Post from \"../Post/Post\";\r\nimport classes from \"./Posts.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../../Validated/TextArea/TextArea\";\r\nimport {minLength} from \"../../../utils/validators/minLength\";\r\n\r\nlet lengthValidator = minLength(1);\r\n\r\nlet PostsForm = (props) => {\r\n    return(\r\n        <form className={classes.form} onSubmit={props.handleSubmit}>\r\n            <Field component={TextArea} name={\"post\"} className={classes.textarea} validate={[lengthValidator]}></Field>\r\n            <button className={classes.button}>Submit</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nlet PostsFormRedux = reduxForm({form : \"postsForm\"})(PostsForm)\r\n\r\nconst PostContainer = (props) => {\r\n    let renderPosts = () => props.posts.map((post) => {\r\n        return (\r\n            <Post text={post.text} likes={post.likes} ava={props.avatar}/>\r\n        );\r\n    });\r\n\r\n    let addPost = (data) => {\r\n        props.add(data.post);\r\n    };\r\n\r\n    if (props.login === \"Whatruska\"){\r\n        return(\r\n            <>\r\n                <PostsFormRedux onSubmit={addPost}/>\r\n                <Posts renderedPosts={renderPosts()} addPost={addPost}/>\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                <Posts renderedPosts={renderPosts()} addPost={addPost}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return({\r\n        arr : []\r\n    });\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return({\r\n        add :(post) => dispatch(addPostActionCreator(post))\r\n    });\r\n};\r\n\r\nlet mergeProps = (stateProps, dispatchProps, props) => {\r\n    let login = props.login;\r\n    let user = getUserByLogin(login);\r\n    return({\r\n        login : login,\r\n        add : dispatchProps.add,\r\n        posts : props.posts,\r\n        avatar : user.avatar\r\n    });\r\n};\r\n\r\nlet ConnectedPostsContainer = connect(mapStateToProps, mapDispatchToProps, mergeProps)(PostContainer);\r\n\r\nexport default ConnectedPostsContainer;","export const minLength = length => value => {\r\n    if (value && value.length < length) return \"Min length is \" + length;\r\n    else if (!value) return \"Field is empty\"\r\n    return undefined;\r\n}","let profilePageCopier = (state) => {\r\n    let stateCopy = {...state};\r\n    stateCopy.isFetching = state.isFetching;\r\n    stateCopy.currentProfile = {...state.currentProfile};\r\n    return stateCopy;\r\n};\r\n\r\nexport default profilePageCopier;","import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://social-network.samuraijs.com/api/1.0/\";\r\nconst API_KEY = \"bba2ac1a-9c7c-4d15-b0e3-ba9dcc3dbeb7\";\r\n\r\nconst api = axios.create({\r\n    baseURL : BASE_URL,\r\n    withCredentials : true,\r\n    headers : {\r\n        \"API-KEY\" : API_KEY,\r\n        \"Content-Type\" : \"application/json\"\r\n    }\r\n});\r\n\r\nexport default api;","import api from \"../api\";\r\nimport My_avatar from \"../../img/ava.jpeg\";\r\nimport profile_header from \"../../img/profile-header.jpeg\";\r\n\r\nconst PROFILE_URL = \"profile/\";\r\nconst STATUS_URL = PROFILE_URL + \"status/\";\r\n\r\nlet formProfileUrl = (userId) => {\r\n    return PROFILE_URL + userId\r\n};\r\n\r\nlet formStatusUrl = (userId) => {\r\n    return STATUS_URL + userId;\r\n};\r\n\r\nconst profileAPI = {\r\n    getProfileRequest : (userId) => {\r\n        return api.get(formProfileUrl(userId)).then((response) => response.data).then((response) => {\r\n            return {\r\n                id : response.userId,\r\n                login : response.fullName,\r\n                date : \"Idcr\",\r\n                city : \"Omsk\",\r\n                phone : \"+00000000000\",\r\n                vk : response.contacts.vk,\r\n                avatar : response.photos.large === null ? My_avatar : response.photos.large,\r\n                header: profile_header\r\n            };\r\n        });\r\n    },\r\n    getStatusRequest : (userId) => {\r\n        return api.get(formStatusUrl(userId)).then((response) => response.data);\r\n    }\r\n};\r\n\r\nexport default profileAPI;","import profilePageCopier from \"../copiers/profilePageCopier\";\r\nimport profileAPI from \"../DAL/Profile/profileAPI\";\r\nimport {getUserByLogin} from \"../data/users\";\r\n\r\nlet FETCH_TYPE = \"FETCH\";\r\nlet SET_PROFILE = \"SET_PROFILE\";\r\nlet SET_STATUS = \"STATUS\";\r\n\r\nlet initialState = {\r\n    currentProfile : undefined,\r\n    isFetching : true,\r\n    status : \"\"\r\n};\r\n\r\nlet profileReducer = (state = initialState, action) => {\r\n    let stateCopy = profilePageCopier(state);\r\n    switch (action.type) {\r\n        case FETCH_TYPE : {\r\n            stateCopy.isFetching = !stateCopy.isFetching;\r\n            break;\r\n        }\r\n\r\n        case SET_PROFILE : {\r\n            stateCopy.currentProfile = action.profile;\r\n            break;\r\n        }\r\n\r\n        case SET_STATUS : {\r\n            stateCopy.status = action.status;\r\n            break;\r\n        }\r\n\r\n        default : {\r\n            break;\r\n        }\r\n    }\r\n    return stateCopy;\r\n};\r\n\r\nlet toggleFetchingActionCreator = () => {\r\n    return({\r\n        type : FETCH_TYPE\r\n    });\r\n};\r\n\r\nlet setProfileActionCreator = (profile) => {\r\n    return({\r\n        type : SET_PROFILE,\r\n        profile : profile\r\n    });\r\n};\r\n\r\nlet setStatusActionCreator = (status) => {\r\n    return ({\r\n        type : SET_STATUS,\r\n        status : status\r\n    });\r\n};\r\n\r\nlet statusThunkCreator = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatusRequest(userId).then((status) => {\r\n            dispatch(setStatusActionCreator(status));\r\n        });\r\n    }\r\n};\r\n\r\nlet requestThunkCreator = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getProfileRequest(userId).then((profile) => {\r\n            dispatch(setProfileActionCreator(profile));\r\n            dispatch(toggleFetchingActionCreator());\r\n        });\r\n    }\r\n};\r\n\r\nlet refreshThunkCreator = (userId, isFetching) => {\r\n    return (dispatch) => {\r\n        if (!isFetching){\r\n            dispatch(toggleFetchingActionCreator());\r\n        }\r\n        let m = userId.match(new RegExp('\\\\d+'));\r\n        if (m != null){\r\n            dispatch(requestThunkCreator(userId));\r\n        } else {\r\n            let profile = getUserByLogin(userId);\r\n            dispatch(setProfileActionCreator(profile));\r\n            dispatch(toggleFetchingActionCreator());\r\n        }\r\n    }\r\n};\r\n\r\nexport {toggleFetchingActionCreator, setProfileActionCreator, setStatusActionCreator, requestThunkCreator, refreshThunkCreator, statusThunkCreator};\r\nexport default profileReducer;","import React from \"react\";\r\nimport classes from \"./Status.module.css\";\r\n\r\nlet link = React.createRef();\r\n\r\nlet Status = (props) => {\r\n    if (!props.editMode){\r\n        return (\r\n            <div onDoubleClick={props.activateEdit} className={classes.status}>\r\n                Status : {props.status}\r\n            </div>\r\n        );\r\n    } else if (props.id === 1) {\r\n        return (\r\n            <input type={\"text\"} className={classes.input} ref={link} onBlur={() => {\r\n                props.updateStatus(link.current.value);\r\n                props.deactivateEdit();\r\n            }}/>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className={classes.status}>\r\n                Status : {props.status}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Status;","const getCurrentProfile = (state) => state.profilePage.currentProfile;\r\nconst isFetching = (state) => state.profilePage.isFetching;\r\nconst getStatus = (state) => state.profilePage.status;\r\n\r\nexport {getCurrentProfile, isFetching, getStatus}","import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {statusThunkCreator} from \"../../../reducers/profileReducer\";\r\nimport {getUserByID} from \"../../../data/users\";\r\nimport Status from \"./Status\";\r\nimport {getStatus} from \"../../../selectors/profileSelector\";\r\n\r\nconst StatusContainer = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    let activateEdit = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    let deactivateEdit = () => {\r\n        setEditMode(false);\r\n    };\r\n\r\n    let refresh = () => {\r\n        props.getStatus(props.id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        refresh();\r\n    },[]);\r\n\r\n    let updateStatus = (status) => {\r\n        getUserByID(props.id).status = status;\r\n    }\r\n\r\n    let status = props.status;\r\n    if (props.id < 5){\r\n        status = getUserByID(props.id).status;\r\n    }\r\n    return(<Status editMode={editMode} status={status} id={props.id} activateEdit={activateEdit} deactivateEdit={deactivateEdit} updateStatus={updateStatus}/>);\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return({\r\n        status : getStatus(state)\r\n    });\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return ({\r\n       getStatus : (userId) => {\r\n           dispatch(statusThunkCreator(userId));\r\n       },\r\n    });\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusContainer);","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport Info from './Info/Info';\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\nimport StatusContainer from \"./Status/StatusContainer\";\r\n\r\nconst Profile = (props) => {\r\n    let state = props.state;\r\n    let id = state.id;\r\n    let userInfo = {\r\n        login : state.login,\r\n        date : state.date,\r\n        city : state.city,\r\n        phone : state.phone,\r\n        vk : state.vk\r\n    };\r\n    return(\r\n        <div className={classes.Profile}>\r\n            <Info userInfo={userInfo} avatar={state.avatar}/>\r\n            <StatusContainer id={id}/>\r\n            {state.posts ? <PostsContainer posts={state.posts} login={state.login}/> : <></>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","let userListCopier = (state) => {\r\n    let stateCopy = {...state};\r\n    stateCopy.users = [...state.users];\r\n    for (let i = 0; i < stateCopy.length; i++){\r\n        stateCopy.users[i] = {...state.users[i]};\r\n    }\r\n    return stateCopy;\r\n};\r\n\r\nexport default userListCopier;","import api from \"../api\";\r\nimport avatar from \"../../img/user.png\";\r\nimport header from \"../../img/profile-header.jpeg\";\r\n\r\nconst USERS_URL = \"users\";\r\n\r\nlet formPageRequestUrl = (count = 1, size = 10) => {\r\n    return USERS_URL + \"?page=\" + count + \"&count=\" + size\r\n};\r\n\r\nconst userListAPI = {\r\n    getPageRequest : (count, size) => {\r\n        return api.get(formPageRequestUrl(count, size)).then((response) => {\r\n                return response.data.items.map((response) =>{\r\n                    return {\r\n                        id : response.id,\r\n                        login:response.name,\r\n                        followed: response.followed,\r\n                        avatar: response.photos.large === null ? avatar : response.photos.large,\r\n                        date: \"00.00.0000\",\r\n                        city: \"NaN\",\r\n                        phone: \"NaN\",\r\n                        vk: \"NaN\",\r\n                        header: header,\r\n                        posts: [],\r\n                    }});\r\n        });\r\n    }\r\n};\r\n\r\nexport default userListAPI;","import api from \"../../api\";\r\n\r\nconst FOLLOW_URL = \"follow/\";\r\n\r\nlet formLoginRequest = (id) => {\r\n    return FOLLOW_URL + id;\r\n};\r\n\r\nconst followAPI = {\r\n    getFollowRequest : (id) => {\r\n        return api.post(formLoginRequest(id),{}).then((response) => response.data);\r\n    },\r\n\r\n    getUnfollowRequest : (id) => {\r\n        return api.delete(formLoginRequest(id)).then((response) => response.data);\r\n    }\r\n};\r\n\r\nexport default followAPI;\r\n\r\n","import {Anya, Misha, Zeka} from \"../data/users\";\r\nimport userListCopier from \"../copiers/userListCopier\";\r\nimport userListAPI from \"../DAL/UserList/userListAPI\";\r\nimport followAPI from \"../DAL/UserList/Follow/followAPI\";\r\n\r\nlet FOLLOW_TYPE = \"FOLLOW\";\r\nlet UNFOLLOW_TYPE = \"UNFOLLOW\";\r\nlet SET_USERS = \"USERS\";\r\nlet SET_PAGE_COUNT = \"SET_PAGE_COUNT\";\r\nlet SET_PAGE_SIZE = \"SET_PAGE_SIZE\";\r\nlet TOGGLE_FETCH = \"TOGGLE_FETCH\";\r\n\r\nlet initialState = {\r\n    users : [\r\n        Anya, Misha, Zeka\r\n    ],\r\n    pageSize : 5,\r\n    pageCount : 1,\r\n    isFetching : false\r\n};\r\n\r\nlet INC = \"INC\";\r\nlet DEC = \"DEC\";\r\n\r\nlet getUserByID = (id, users) => {\r\n    for (let i = 0; i < users.length; i++){\r\n        if (users[i].id === id){\r\n            return users[i];\r\n        }\r\n    }\r\n};\r\n\r\nlet userListReducer = (state = initialState, action) => {\r\n    let stateCopy = userListCopier(state);\r\n    switch (action.type) {\r\n        case FOLLOW_TYPE : {\r\n            let user = getUserByID(action.id, stateCopy.users);\r\n            user.followed = true;\r\n            break;\r\n        }\r\n\r\n        case UNFOLLOW_TYPE : {\r\n            let user = getUserByID(action.id, stateCopy.users);\r\n            user.followed = false;\r\n            break;\r\n        }\r\n\r\n        case SET_USERS : {\r\n            stateCopy.users = action.users;\r\n            break;\r\n        }\r\n\r\n        case SET_PAGE_COUNT : {\r\n            stateCopy.pageCount = action.count;\r\n            break;\r\n        }\r\n\r\n        case SET_PAGE_SIZE : {\r\n\r\n            break;\r\n        }\r\n\r\n        case TOGGLE_FETCH : {\r\n            stateCopy.isFetching = !stateCopy.isFetching;\r\n            break\r\n        }\r\n\r\n        default : {\r\n            return stateCopy;\r\n        }\r\n    }\r\n    return stateCopy;\r\n};\r\n\r\nlet followActionCreator = (id) => {\r\n    return ({\r\n        type : FOLLOW_TYPE,\r\n        id : id\r\n    });\r\n};\r\n\r\nlet unfollowActionCreator = (id) => {\r\n    return ({\r\n        type : UNFOLLOW_TYPE,\r\n        id : id\r\n    });\r\n};\r\n\r\nlet setUsersActionCreator = (users) => {\r\n    return({\r\n        type : SET_USERS,\r\n        users : users\r\n    })\r\n};\r\n\r\nlet setPageCountActionCreator = (count) => {\r\n    return({\r\n        type : SET_PAGE_COUNT,\r\n        count : count\r\n    });\r\n};\r\n\r\nlet setPageSizeActionCreator = (size) => {\r\n    return({\r\n        type : SET_PAGE_SIZE,\r\n        size : size\r\n    });\r\n};\r\n\r\nlet toggleFetchActionCreator = () => {\r\n    return({\r\n        type : TOGGLE_FETCH\r\n    });\r\n};\r\n\r\nlet refreshThunkCreator = (mode, pageCount, pageSize) => (dispatch) => {\r\n    dispatch(toggleFetchActionCreator());\r\n    if (mode){\r\n        switch (mode) {\r\n            case INC : {\r\n                dispatch(setPageCountActionCreator(++pageCount));\r\n                break;\r\n            }\r\n\r\n            case DEC : {\r\n                if (pageCount > 1){\r\n                    dispatch(setPageCountActionCreator(--pageCount));\r\n                }\r\n                break;\r\n            }\r\n            default : {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    userListAPI.getPageRequest(pageCount, pageSize).then((items) => {\r\n        dispatch(setUsersActionCreator(items));\r\n        dispatch(toggleFetchActionCreator());\r\n    });\r\n};\r\n\r\nlet followThunkCreator = (id) => (dispatch) => {\r\n    dispatch(toggleFetchActionCreator());\r\n    followAPI.getFollowRequest(id).then(\r\n        (data) => {\r\n            if (data.resultCode === 0){\r\n                dispatch(followActionCreator(id));\r\n            }\r\n            dispatch(toggleFetchActionCreator());\r\n        }\r\n    );\r\n};\r\n\r\nlet unfollowThunkCreator = (id) => (dispatch) => {\r\n    dispatch(toggleFetchActionCreator());\r\n    followAPI.getUnfollowRequest(id).then(\r\n        (data) => {\r\n            if (data.resultCode === 0){\r\n                dispatch(unfollowActionCreator(id));\r\n            }\r\n            dispatch(toggleFetchActionCreator());\r\n        }\r\n    );\r\n};\r\n\r\nexport {followActionCreator, setUsersActionCreator, setPageCountActionCreator, setPageSizeActionCreator, toggleFetchActionCreator, unfollowActionCreator, INC, DEC, refreshThunkCreator, followThunkCreator, unfollowThunkCreator};\r\n\r\nexport default userListReducer;","import React from \"react\";\r\nimport classes from \"./Preloader.module.css\";\r\nimport preloader from \"../../preloader.svg\"\r\n\r\nlet Preloader = () => {\r\n    return(\r\n        <img src={preloader} className={classes.Preloader} alt={\"Preloader\"}/>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import React from \"react\";\r\nimport classes from \"./UserList.module.css\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\n\r\nlet UserList = (props) => {\r\n    return(\r\n        <div className={classes.UserList}>\r\n            {props.isFetching\r\n                ? <Preloader/>\r\n            : <div className={classes.wrapper}>\r\n                {props.renderedUsers}\r\n              </div>\r\n            }\r\n            <div className={classes.btns_wrapper}>\r\n                <button onClick={() => {\r\n                    props.refresh(props.dec);\r\n                }} className={classes.btn} disabled={props.isFetching}>{\"<<<\"}</button>\r\n                <div className={classes.page_counter}>\r\n                    Page number : {props.pageCount}\r\n                </div>\r\n                <button onClick={() => {\r\n                    props.refresh(props.inc);\r\n                }} className={classes.btn} disabled={props.isFetching}>{\">>>\"}</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserList;","import React from \"react\";\r\nimport classes from \"./UserListItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet UserListItem = (props) => {\r\n    let user = props.user;\r\n    let followClass = user.followed ? classes.unfollow : classes.follow;\r\n    let followText = user.followed ? \"Unfollow\" : \"Follow\";\r\n\r\n    let folFunc = () => {\r\n        !user.followed ? props.follow(user.id) : props.unfollow(user.id);\r\n    };\r\n      return (\r\n          <div className={classes.UserListItem}>\r\n              <div className={classes.meta}>\r\n                  <img className={classes.avatar} src={user.avatar} alt=\"Avatar\"/>\r\n                  <button type=\"submit\" className={classes.btn + \" \" + followClass} onClick={\r\n                      (e) => {\r\n                          e.preventDefault();\r\n                          folFunc();\r\n                      }\r\n                  }>{followText}</button>\r\n              </div>\r\n              <div className={classes.info}>\r\n                  <NavLink className={classes.login} to={\"../User/\" + user.id}>{user.login}</NavLink>\r\n                  <h4>City : {user.city}</h4>\r\n                  <h4>Birthday : {user.date}</h4>\r\n              </div>\r\n          </div>\r\n      );\r\n};\r\n\r\nexport default UserListItem;","const getUsers = (state) => state.userList.users;\r\nconst getPageSize = (state) => state.userList.pageSize;\r\nconst getPageCount = (state) => state.userList.pageCount;\r\nconst isFetching = (state) => state.userList.isFetching;\r\n\r\nexport {getUsers, getPageCount, getPageSize, isFetching}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    toggleFetchActionCreator,\r\n    followThunkCreator, unfollowThunkCreator\r\n} from \"../../../reducers/userListReducer\";\r\nimport UserListItem from \"./UserListItem\";\r\nimport {isFetching} from \"../../../selectors/userListSelector\";\r\n\r\nconst UserListItemContainer = (props) => {\r\n    return(<UserListItem user={props.user} follow={props.follow} unfollow={props.unfollow}/>);\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        isFetching : isFetching(state)\r\n    });\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return({\r\n        follow : (id) => {\r\n            dispatch(followThunkCreator(id));\r\n        },\r\n        unfollow : (id) => {\r\n            dispatch(unfollowThunkCreator(id));\r\n        },\r\n        toggleFetching : () => {\r\n            dispatch(toggleFetchActionCreator());\r\n        }\r\n    });\r\n};\r\n\r\nlet mergeProps = (stateProps, dispatchProps, props) => {\r\n    return({\r\n        isFetching : stateProps.isFetching,\r\n        user : props.user,\r\n        follow : dispatchProps.follow,\r\n        unfollow : dispatchProps.unfollow,\r\n        toggleFetching : dispatchProps.toggleFetching\r\n    });\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(UserListItemContainer);","const getUserId = (state) => state.loginData.userId;\r\nconst getEmail = (state) => state.loginData.email;\r\nconst isLogged = (state) => state.loginData.isLogged;\r\nconst isFetching = (state) => state.loginData.isFetching;\r\nconst getErrorMessage = (state) => state.loginData.errorMessage;\r\n\r\nexport {getUserId, getEmail, isLogged, isFetching, getErrorMessage}","import {connect} from \"react-redux\";\r\nimport {INC, DEC, refreshThunkCreator} from \"../../reducers/userListReducer\";\r\nimport React, {useEffect} from \"react\";\r\nimport classes from \"./List/UserList.module.css\";\r\nimport UserList from \"./List/UserList\";\r\nimport UserListItemContainer from \"./UserListItem/UserListItemContainer\";\r\nimport {Redirect} from \"react-router\";\r\nimport {isLogged} from \"../../selectors/loginSelector\";\r\nimport {getPageCount, getPageSize, getUsers, isFetching} from \"../../selectors/userListSelector\";\r\n\r\nconst UserListAPIComponent = (props) => {\r\n    let refresh = (mode) => {\r\n        props.refresh(mode, props.pageCount, props.pageSize);\r\n    };\r\n\r\n    useEffect(() => {\r\n        refresh()\r\n    },[]);\r\n\r\n    let divideItemsToColumns = (listItems) => {\r\n        let result = [];\r\n        let m = [];\r\n        while (listItems.length > 0){\r\n            if (m.length === 3){\r\n                result.push(\r\n                    <div className={classes.column}>\r\n                        {m}\r\n                    </div>\r\n                );\r\n                m = []\r\n            } else {\r\n                m.push(listItems.pop());\r\n            }\r\n        }\r\n        if (m.length > 0){\r\n            result.push(\r\n                <div className={classes.column}>\r\n                    {m}\r\n                </div>\r\n            );\r\n        }\r\n        return result;\r\n    };\r\n\r\n    let getRenderedUserItems = (userItems) => {\r\n        if (userItems){\r\n            let listItems =  userItems.map((item) => {\r\n                return <UserListItemContainer user={item}/>\r\n            });\r\n            return divideItemsToColumns(listItems);\r\n        }\r\n    };\r\n\r\n    let renderedUsers = getRenderedUserItems(props.users);\r\n    if (props.isLogged){\r\n        return(\r\n            <UserList\r\n                renderedUsers={renderedUsers}\r\n                refresh={refresh}\r\n                inc={props.inc}\r\n                dec={props.dec}\r\n                pageCount={props.pageCount}\r\n                isFetching={props.isFetching}\r\n            />\r\n        );\r\n    } else {\r\n        return (\r\n            <Redirect to={\"/\"}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return({\r\n        isLogged : isLogged(state),\r\n        users : getUsers(state),\r\n        pageSize : getPageSize(state),\r\n        pageCount : getPageCount(state),\r\n        isFetching : isFetching(state),\r\n        inc : INC,\r\n        dec : DEC\r\n    });\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return({\r\n        refresh : (mode, pageCount, pageSize) => {\r\n            dispatch(refreshThunkCreator(mode, pageCount, pageSize))\r\n        }\r\n    });\r\n};\r\nlet connected = connect(mapStateToProps, mapDispatchToProps)(UserListAPIComponent);\r\n\r\nexport default connected;\r\n","import React, {useCallback, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router\";\r\nimport {refreshThunkCreator} from \"../../reducers/profileReducer\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport Profile from \"./Profile\";\r\nimport classes from \"./ProfileContainer.module.css\";\r\nimport {getCurrentProfile, isFetching} from \"../../selectors/profileSelector\";\r\n\r\nconst ProfileContainer = (props) => {\r\n\r\n    let refresh = () => {\r\n        props.refresh(props.match.params.userId, props.isFetching);\r\n    };\r\n\r\n    useEffect(() => {\r\n        refresh();\r\n    },[]);\r\n\r\n    let isFetching = props.isFetching;\r\n    return(\r\n        <div className={classes.Container}>\r\n            {isFetching ? <Preloader/> : <Profile state={props.profile}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return({\r\n        isFetching : isFetching(state),\r\n        profile : getCurrentProfile(state)\r\n    });\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return({\r\n        refresh : (userId, isFetching) => {\r\n            dispatch(refreshThunkCreator(userId, isFetching));\r\n        }\r\n    });\r\n};\r\nlet routeComp = withRouter(ProfileContainer);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(routeComp);\r\n\r\n\r\n","import api from \"../api\";\r\n\r\nconst AUTH_URL = \"auth/me\";\r\nconst LOGIN_URL = \"auth/login\";\r\n\r\nlet formLoginUrl = (email, pass, remember) => {\r\n    return LOGIN_URL + \"?email=\" + email + \"&password=\" + pass + \"&rememberMe=\" + remember;\r\n};\r\n\r\nconst authAPI = {\r\n     getAuthRequest : () => {\r\n        return api.get(AUTH_URL).then((response) => response.data);\r\n    },\r\n\r\n     getLoginRequest : (email, pass, remember) => {\r\n        return api.post(formLoginUrl(email, pass, remember)).then((response) => response.data);\r\n    },\r\n\r\n     getLogoutRequest : () => {\r\n        return api.delete(LOGIN_URL).then((response) => response.data);\r\n    }\r\n};\r\n\r\nexport default authAPI;\r\n\r\n","import authAPI from \"../DAL/Auth/authAPI\";\r\n\r\nlet SET_USER_ID = \"LOGIN_ID\";\r\nlet SET_EMAIL = \"SET_EMAIL\";\r\nlet LOG_IN = \"LOG_IN\";\r\nlet LOG_OUT = \"LOG_OUT\";\r\nlet SET_ERROR_MSG = \"ERROR\";\r\nlet FETCH = \"FETCH\";\r\nlet SET_USER_DATA = \"SET_DATA\";\r\n\r\nlet initialState = {\r\n    userId : 1,\r\n    email : \"test@email\",\r\n    isLogged : false,\r\n    isFetching : false,\r\n    errorMessage : undefined\r\n};\r\n\r\nlet loginReducer = (state = initialState, action) => {\r\n    let stateCopy = {...state};\r\n    switch (action.type) {\r\n        case SET_USER_ID : {\r\n            stateCopy.userId = action.id;\r\n            break;\r\n        }\r\n\r\n        case SET_EMAIL : {\r\n            stateCopy.email = action.email;\r\n            break;\r\n        }\r\n\r\n        case LOG_IN : {\r\n            stateCopy.isLogged = true;\r\n            break;\r\n        }\r\n\r\n        case LOG_OUT : {\r\n            stateCopy.isLogged = false;\r\n            break;\r\n        }\r\n\r\n        case FETCH : {\r\n            stateCopy.isFetching = !stateCopy.isFetching;\r\n            break;\r\n        }\r\n\r\n        case SET_ERROR_MSG : {\r\n            stateCopy.errorMessage = [action.errorMessage];\r\n            break;\r\n        }\r\n\r\n        case SET_USER_DATA : {\r\n            let data = action.data;\r\n            stateCopy.email = data.email;\r\n            stateCopy.userId = data.userId;\r\n            stateCopy.isLogged = true;\r\n            break;\r\n        }\r\n\r\n        default : {\r\n            return stateCopy;\r\n        }\r\n    }\r\n    return stateCopy;\r\n};\r\n\r\nlet setUserIdActionCreator = (id) => {\r\n    return({\r\n        type : SET_USER_ID,\r\n        id : id\r\n    });\r\n};\r\n\r\nlet setEmailActionCreator = (email) => {\r\n    return({\r\n        type : SET_EMAIL,\r\n        email : email\r\n    });\r\n};\r\n\r\nlet loginActionCreator = () => {\r\n    return({\r\n        type : LOG_IN\r\n    });\r\n};\r\n\r\nlet logoutActionCreator = () => {\r\n    return({\r\n        type : LOG_OUT\r\n    });\r\n};\r\n\r\nlet toggleFetchActionCreator = () => {\r\n    return({\r\n        type : FETCH\r\n    });\r\n};\r\n\r\nlet setErrorMessageActionCreator = (error) => {\r\n    return({\r\n        type : SET_ERROR_MSG,\r\n        errorMessage : error\r\n    });\r\n};\r\n\r\nlet setUserDataActionCreator = (data) => {\r\n    return({\r\n        type : SET_USER_DATA,\r\n        data : data\r\n    })\r\n};\r\n\r\nlet authThunkCreator = () => {\r\n     return (dispatch) => {\r\n         authAPI.getAuthRequest().then(\r\n             (data) => {\r\n                 if (data.resultCode === 0) {\r\n                     dispatch(setUserDataActionCreator(data.data));\r\n                 }\r\n             }\r\n         );\r\n     }\r\n};\r\n\r\nlet logoutThunkCreator = () => {\r\n    return (dispatch) => {\r\n        authAPI.getLogoutRequest().then((data) => {\r\n            dispatch(logoutActionCreator());\r\n        });\r\n    }\r\n};\r\n\r\nlet loginThunkCreator = (email, pass, remember) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFetchActionCreator());\r\n        authAPI.getLoginRequest(email,pass, remember).then((data) => {\r\n            if (data.resultCode === 0){\r\n                dispatch(setEmailActionCreator(email));\r\n                dispatch(setUserIdActionCreator(data.data.userId));\r\n                dispatch(loginActionCreator());\r\n            } else {\r\n                dispatch(setErrorMessageActionCreator(\"Неверно введены email/пароль\"));\r\n            }\r\n            dispatch(toggleFetchActionCreator());\r\n        });\r\n    }\r\n}\r\n\r\nexport {setUserIdActionCreator, setEmailActionCreator, loginActionCreator, logoutActionCreator, toggleFetchActionCreator, setErrorMessageActionCreator, setUserDataActionCreator, authThunkCreator, logoutThunkCreator, loginThunkCreator}\r\n\r\nexport default loginReducer;","import classes from \"./Input.module.css\";\r\nimport React from \"react\";\r\n\r\nexport const Input = ({input, meta, className, ...props}) => {\r\n    return(\r\n        <div className={classes.Input}>\r\n            <input {...input} {...props} className={className + (meta.error && meta.touched ? \" \" + classes.error : \"\")}/>\r\n            {meta.error && meta.touched ? <div className={classes.span}>{meta.error}</div> : <></>}\r\n        </div>\r\n    );\r\n}","export const email = email => {\r\n    if (email && email.toString().indexOf('@') === -1) return \"Invalid email format\";\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport classes from \"./Login.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../Validated/Input/Input\";\r\nimport {required} from \"../../utils/validators/required\";\r\nimport {email} from \"../../utils/validators/email\";\r\n\r\nlet LoginForm = (props) => {\r\n    return(\r\n        <form className={classes.loginForm} onSubmit={props.handleSubmit}>\r\n            <Field placeholder={\"E-mail\"} type={\"e-mail\"} name={\"email\"} className={classes.input} component={Input} validate={[required, email]}/>\r\n            <Field placeholder={\"Password\"} type={\"password\"} name={\"password\"} className={classes.input} component={Input} validate={[required]}/>\r\n            <Field component={\"input\"} type={\"checkbox\"} name={\"remember\"} className={classes.checkbox}/>\r\n            <span>Запомнить меня</span>\r\n            <div>\r\n                {props.errorMessage}\r\n            </div>\r\n            <button type={\"submit\"} className={classes.btn}>Login</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nlet LoginFormRedux = reduxForm({form : \"loginForm\"})(LoginForm);\r\n\r\nclass Login extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className={classes.Login}>\r\n                <h1 className={classes.heading}>Welcome</h1>\r\n                <LoginFormRedux onSubmit={this.props.login} errorMessage={this.props.errorMessage}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunkCreator} from \"../../../reducers/loginReducer\";\r\nimport Login from \"../Login\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport classes from \"./LoginContainer.module.css\";\r\nimport {getErrorMessage, isFetching, isLogged} from \"../../../selectors/loginSelector\";\r\n\r\nconst LoginContainer = (props) => {\r\n    let login = (data) => {\r\n        let email = data.email;\r\n        let password = data.password;\r\n        let remember = !!data.remember;\r\n        props.login(email, password, remember);\r\n    }\r\n\r\n    let renderedMessages = (messages) => {\r\n        if (messages){\r\n            return messages.map((item) => {\r\n                return(\r\n                    <div className={classes.errorMessage}>{item}</div>\r\n                );\r\n            });\r\n        }\r\n    };\r\n\r\n    let message = renderedMessages(props.errorMessage);\r\n    if (!props.isLogged){\r\n        if (props.isFetching){\r\n            return(\r\n                <div className={classes.preloader_wrapper}>\r\n                    <Preloader/>\r\n                </div>\r\n                );\r\n        } else {\r\n            return <Login login={login} errorMessage={message}/>\r\n        }\r\n    }\r\n    return <></>;\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return({\r\n        isLogged : isLogged(state),\r\n        isFetching : isFetching(state),\r\n        errorMessage : getErrorMessage(state)\r\n    });\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return({\r\n        login : (email, pass, remember) => {\r\n            dispatch(loginThunkCreator(email, pass, remember));\r\n        },\r\n    });\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);","import React from \"react\";\r\nimport classes from \"./Greeting.module.css\";\r\nimport gif from \"../../img/Greetings.gif\"\r\n\r\nlet Greetings = () => {\r\n    return(\r\n        <div className={classes.Greeting}>\r\n            <img src={gif} alt=\"gif\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Greetings;","const INIT_FINISHED = \"INIT_FINISH\"\r\n\r\nconst initialState = {\r\n    isInitialized : false\r\n};\r\n\r\ninterface Action {\r\n    type : typeof INIT_FINISHED\r\n}\r\n\r\nconst initialReducer = (state : typeof initialState = initialState, action: Action) => {\r\n    let stateCopy = {...state};\r\n    if (typeof action.type) {\r\n        stateCopy.isInitialized = true;\r\n        return stateCopy;\r\n    } else {\r\n        return stateCopy;\r\n    }\r\n}\r\n\r\nlet initFinishActionCreator = () : Action => {\r\n    return {\r\n        type : INIT_FINISHED\r\n    }\r\n};\r\nexport default initialReducer;\r\nexport {initFinishActionCreator}\r\n","let isInitialized = (state) => {\r\n    return state.init.isInitialized;\r\n}\r\n\r\nexport {isInitialized}","import React from 'react';\r\nimport './Main.css';\r\nimport {BrowserRouter, Redirect, Route} from \"react-router-dom\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport UserListContainer from \"./UserList/UserListContainer\";\r\nimport ProfileContainer from \"./Profile/ProfileContainer\";\r\nimport LoginContainer from \"./Login/LoginContainer/LoginContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport Greetings from \"./Greetings/Greeting\";\r\nimport {initFinishActionCreator} from \"../reducers/initialReducer\";\r\nimport {isLogged} from \"../selectors/loginSelector\";\r\nimport {authThunkCreator} from \"../reducers/loginReducer\";\r\nimport Preloader from \"./Preloader/Preloader\";\r\nimport {isInitialized} from \"../selectors/initialSelector\";\r\n\r\nclass Main extends React.Component{\r\n    myProfile = <Route path={\"/Profile\"} exact render={() => {\r\n        let profile = this.props.userPages[0];\r\n        return(<Profile state={profile}/>);\r\n    }}/>;\r\n\r\n    renderedFriends = this.props.userPages.map((user) => {\r\n        if (user.login !== \"Whatruska\"){\r\n            return <Route path={\"/Friend/\" + user.login} exact render = {() => <Profile state={user}/>}/>\r\n        }\r\n        return undefined\r\n    });\r\n\r\n    render() {\r\n        if (this.props.isInitialized){\r\n            if (this.props.isLogged){\r\n                return(\r\n                    <div className='Main'>\r\n                        <Route path=\"/Messages\" render={() => <Messages state={this.props.messagesPage}/>}/>\r\n                        <Route path=\"/UserListAPIComponent\" render={() => <UserListContainer/>}/>\r\n                        {this.myProfile}\r\n                        {this.renderedFriends}\r\n                        <Route path=\"/User/:userId\">\r\n                            <ProfileContainer/>\r\n                        </Route>\r\n                        <Route path=\"/\" exact render={() => <Greetings/>}/>\r\n                    </div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <BrowserRouter>\r\n                        <div className='Main'>\r\n                            <Redirect to={\"/\"}/>\r\n                            <Route path=\"/\" exact render={() => <LoginContainer/>}/>\r\n                        </div>\r\n                    </BrowserRouter>\r\n                );\r\n            }\r\n        } else {\r\n            this.props.auth();\r\n            this.props.finishInit();\r\n            return (<Preloader/>);\r\n        }\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return({\r\n        messagesPage : state.messagesPage,\r\n        friendInfo : state.friendInfo,\r\n        userPages : state.userPages.users,\r\n        isLogged : isLogged(state),\r\n        isInitialized : isInitialized(state)\r\n    });\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return({\r\n        finishInit : () => {\r\n            dispatch(initFinishActionCreator());\r\n        },\r\n        auth : () => {\r\n            dispatch(authThunkCreator());\r\n        }\r\n    });\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","import {makeStyles} from \"@material-ui/styles\";\r\n\r\nlet styles = makeStyles(theme => ({\r\n    Header : {\r\n        background: \"linear-gradient(49deg,\" + theme.palette.primary.main + \" 26%, \" + theme.palette.primary.light + \" 89%)\",\r\n        color : 'white',\r\n    },\r\n\r\n    logo : {\r\n        width: \"7em\",\r\n        height : \"7em\",\r\n        [theme.breakpoints.down(\"xs\")] : {\r\n            width: \"3rem\",\r\n        },\r\n    },\r\n\r\n    logo_btn : {\r\n        \"&:hover\" : {\r\n            backgroundColor : \"transparent\"\r\n        }\r\n    },\r\n\r\n    heading : {\r\n        fontSize: \"2.5rem\",\r\n        [theme.breakpoints.down(\"lg\")] : {\r\n            fontSize: \"1.5rem\",\r\n        },\r\n        [theme.breakpoints.down(\"xs\")] : {\r\n            fontSize: \"1rem\",\r\n        },\r\n        color : \"white\",\r\n        fontWeight : \"bold\"\r\n    },\r\n\r\n    tabs : {\r\n        marginLeft : \"auto\",\r\n    },\r\n\r\n    tab : {\r\n        padding : \"0px 0px\",\r\n        fontSize : \"1rem\",\r\n    },\r\n\r\n    spacing : {\r\n        ...theme.mixins.toolbar,\r\n        marginBottom : \"5em\",\r\n    },\r\n\r\n    menu : {\r\n        top : \"8em\"\r\n    },\r\n\r\n    menuList : {\r\n        backgroundColor : theme.palette.primary.light,\r\n        color : \"white\",\r\n        fontWeight : \"bold\"\r\n    },\r\n\r\n    logout : {\r\n        backgroundColor : theme.palette.error.main,\r\n        color : \"white\",\r\n        fontWeight : \"bold\",\r\n        [theme.breakpoints.down(\"xs\")] : {\r\n            fontSize: \"0.7rem\",\r\n        },\r\n        \"&:hover\" : {\r\n            backgroundColor : theme.palette.error.light\r\n        }\r\n    },\r\n\r\n    logout_wrapper : {\r\n        marginLeft : \"auto\",\r\n        display : \"flex\",\r\n        flexDirection : \"column\",\r\n        justifyContent : \"center\",\r\n        fontSize : \"0.7em\",\r\n        [theme.breakpoints.down(\"lg\")] : {\r\n            marginLeft : \"0px\"\r\n        }\r\n    },\r\n\r\n    email : {\r\n        fontSize : \"1.2em\",\r\n        marginBottom : \"0.5em\"\r\n    },\r\n\r\n    drawer_btn : {\r\n        marginLeft : \"auto\",\r\n        color : \"white\",\r\n        \"&:hover\":{\r\n            backgroundColor : \"transparent\"\r\n        }\r\n    },\r\n\r\n    drawer_close_btn : {\r\n        margin : \"auto\"\r\n    },\r\n}));\r\n\r\nexport default styles;","import React, {useEffect, useState} from 'react';\r\nimport logo from '../../logo.svg';\r\nimport {Hidden, SwipeableDrawer, useMediaQuery, useTheme} from \"@material-ui/core\";\r\nimport styles from \"./Header-styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\n\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport ListIcon from '@material-ui/icons/List';\r\n\r\nimport {ExpandLess, ExpandMore, StarBorder} from \"@material-ui/icons\";\r\n\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\nconst Header = (props) => {\r\n    let theme = useTheme();\r\n    let classes = styles(theme);\r\n\r\n    let [anchor, setAnchor] = useState(null);\r\n    let [openMenu, setOpenMenu] = useState(false);\r\n    let [openDrawer, setOpenDrawer] = useState(false);\r\n    let [openFriend, setOpenFriendList] = useState(false);\r\n\r\n\r\n    let [selectedTab, setSelectedTab] = useState(0);\r\n    let [selectedMenu, setSelectedMenu] = useState(-1);\r\n\r\n    useEffect(() => {\r\n        let pathName = window.location.pathname\r\n        if (window.location.host === \"whatruska.github.io\"){\r\n            pathName = pathName.substring(pathName.indexOf(\"/React\") + 6);\r\n        };\r\n        switch (pathName) {\r\n            case \"/\" : {\r\n                setSelectedTab(0);\r\n                break;\r\n            }\r\n            case \"/Profile\" : {\r\n                setSelectedTab(1);\r\n                break;\r\n            }\r\n            case \"/Messages\" : {\r\n                setSelectedTab(2);\r\n                break;\r\n            }\r\n            case \"/UserListAPIComponent\" : {\r\n                setSelectedTab(3);\r\n                break;\r\n            }\r\n            default : {\r\n                setSelectedTab(-1);\r\n                break;\r\n            }\r\n        }\r\n    },[]);\r\n\r\n    let toggleMenu = () => {\r\n        setOpenMenu(!openMenu);\r\n    }\r\n\r\n    let toggleDrawer = () => {\r\n        setOpenDrawer(!openDrawer);\r\n    }\r\n\r\n    let handleTabClick = (e, val) => {\r\n        setSelectedTab(val);\r\n    }\r\n\r\n    let handleFriendsClick = (e) => {\r\n        setAnchor(e.currentTarget);\r\n        toggleMenu();\r\n    }\r\n\r\n    let handleMenuClose = (e) => {\r\n        setAnchor(null);\r\n        toggleMenu();\r\n    }\r\n\r\n    let chooseFriend = (e, index) => {\r\n        setSelectedMenu(index);\r\n    }\r\n\r\n    let matches = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n\r\n    let getLinkObj = (l, pr, sec, i) => {\r\n        return {\r\n            link : l,\r\n            primary : pr,\r\n            secondary : sec,\r\n            icon : i\r\n        };\r\n    }\r\n\r\n    let links = [\r\n        getLinkObj(\"/\", \"Home\", \"Home, sweet home\", <HomeIcon/>),\r\n        getLinkObj(\"/profile\", \"Profile\", \"Check your profile and edit status\", <AccountBoxIcon/>),\r\n        getLinkObj(\"/messages\", \"Messages\", \"Check your messages\", <ChatIcon/>),\r\n        getLinkObj(\"/UserListAPIComponent\", \"Users\", \"List of users\", <ListIcon/>)\r\n    ];\r\n\r\n    let renderedDrawerOptions = links.map((option, index) => {\r\n        return (\r\n            <ListItem button onClick={toggleDrawer} component={Link} to={option[\"link\"]}>\r\n                <ListItemIcon>\r\n                    {option[\"icon\"]}\r\n                </ListItemIcon>\r\n                <ListItemText primary={option[\"primary\"]} secondary={option[\"secondary\"]}/>\r\n            </ListItem>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <AppBar {...props} className={classes.Header}>\r\n                <Toolbar>\r\n                    <Button disableRipple component={Link} to={\"/\"} className={classes.logo_btn}>\r\n                        <img src={logo} alt={\"logo\"} className={classes.logo}/>\r\n                        <span className={classes.heading}>Web app</span>\r\n                    </Button>\r\n                    {props.isLogged ? <>\r\n                        {matches ?\r\n                            <>\r\n                                <Tabs value={selectedTab} indicatorColor={\"secondary\"} className={classes.tabs} onChange={handleTabClick}>\r\n                                    <Tab label={\"Home\"} component={Link} to={\"/\"} className={classes.tab}/>\r\n                                    <Tab label={\"Profile\"} component={Link} to={\"/Profile\"} className={classes.tab}/>\r\n                                    <Tab label={\"Messages\"} component={Link} to={\"/Messages\"} className={classes.tab}/>\r\n                                    <Tab label={\"Users\"} component={Link} to={\"/UserListAPIComponent\"} className={classes.tab}/>\r\n                                    <Tab label={\"Friends\"}\r\n                                         aria-controls={openMenu ? 'menu' : undefined}\r\n                                         aria-owns={anchor ? \"menu\" : undefined}\r\n                                         aria-haspopup={anchor ? \"true\" : undefined}\r\n                                         onMouseOver={handleFriendsClick}\r\n                                         className={classes.tab}\r\n                                    />\r\n                                </Tabs>\r\n                                <Menu open={openMenu} id={\"menu\"}\r\n                                      anchorEl={anchor} onClose={handleMenuClose}\r\n                                      autoFocusItem={openMenu} MenuListProps={{onMouseLeave : handleMenuClose}}\r\n                                      classes={{paper : classes.menu, list : classes.menuList}}\r\n                                      transformOrigin={{\r\n                                          vertical: 'top',\r\n                                          horizontal: 'center',\r\n                                      }}\r\n                                      elevation={3}\r\n                                      keepMounted\r\n                                >\r\n                                    <MenuItem selected={selectedMenu === 0} onClick={(e) => {chooseFriend(e,0)}} component={Link} to={\"/Friend/Misha\"}>\r\n                                        Michael\r\n                                    </MenuItem>\r\n                                    <MenuItem selected={selectedMenu === 1} onClick={(e) => {chooseFriend(e,1)}} component={Link} to={\"/Friend/Anya\"}>\r\n                                        Anna\r\n                                    </MenuItem>\r\n                                    <MenuItem selected={selectedMenu === 2} onClick={(e) => {chooseFriend(e,2)}} component={Link} to={\"/Friend/Zeka\"}>\r\n                                        Evgenii\r\n                                    </MenuItem>\r\n                                </Menu>\r\n                            </>: <>\r\n                                <SwipeableDrawer onClose={toggleDrawer} onOpen={toggleDrawer} open={openDrawer}>\r\n                                    <List>\r\n                                        <ListItem>\r\n                                            <IconButton onClick={toggleDrawer} className={classes.drawer_close_btn}>\r\n                                                <CancelIcon/>\r\n                                            </IconButton>\r\n                                        </ListItem>\r\n                                        {renderedDrawerOptions}\r\n                                        <ListItem button onClick={(e) => {setOpenFriendList(!openFriend)}}>\r\n                                            <ListItemIcon>\r\n                                                <PeopleIcon/>\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={\"Friends\"} secondary={\"List of your friends\"}/>\r\n                                            {openFriend ? <ExpandLess/> : <ExpandMore/>}\r\n                                        </ListItem>\r\n                                        <Collapse in={openFriend} timeout={500} unmountOnExit>\r\n                                            <List component=\"div\" disablePadding>\r\n                                                <ListItem button component={Link} to={\"/Friend/Misha\"} onClick={toggleDrawer}>\r\n                                                    <ListItemIcon>\r\n                                                        <StarBorder />\r\n                                                    </ListItemIcon>\r\n                                                    <ListItemText primary=\"Misha\"/>\r\n                                                </ListItem>\r\n                                                <ListItem button component={Link} to={\"/Friend/Anya\"} onClick={toggleDrawer}>\r\n                                                    <ListItemIcon>\r\n                                                        <StarBorder />\r\n                                                    </ListItemIcon>\r\n                                                    <ListItemText primary=\"Anna\"/>\r\n                                                </ListItem>\r\n                                                <ListItem button component={Link} to={\"/Friend/Zeka\"} onClick={toggleDrawer}>\r\n                                                    <ListItemIcon>\r\n                                                        <StarBorder />\r\n                                                    </ListItemIcon>\r\n                                                    <ListItemText primary=\"Evgenii\"/>\r\n                                                </ListItem>\r\n                                            </List>\r\n                                        </Collapse>\r\n                                    </List>\r\n                                </SwipeableDrawer>\r\n                                <Button onClick={toggleDrawer} className={classes.drawer_btn}>\r\n                                    <MenuIcon />\r\n                                </Button>\r\n                            </>}\r\n                        <div className={classes.logout_wrapper}>\r\n                            <div className={classes.email}>\r\n                                {props.email}\r\n                            </div>\r\n                            <Button onClick={props.logout} className={classes.logout}>\r\n                                Log out\r\n                            </Button>\r\n                        </div>\r\n                    </> : <></>}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className={classes.spacing}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    logoutThunkCreator,\r\n} from \"../../../reducers/loginReducer\";\r\nimport Header from \"../Header\";\r\nimport {getEmail, isLogged} from \"../../../selectors/loginSelector\";\r\n\r\nconst HeaderContainer = (props) => {\r\n    if (props.isLogged){\r\n        return <Header isLogged={props.isLogged} email={props.email} logout={props.logout}/>\r\n    } else {\r\n        return <Header/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return({\r\n        email : getEmail(state),\r\n        isLogged : isLogged(state)\r\n    });\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return({\r\n        logout : () => {\r\n            dispatch(logoutThunkCreator());\r\n        }\r\n    });\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);","import createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\n\r\nlet theme = createMuiTheme({\r\n    palette : {\r\n        primary : {\r\n            main : \"#313186\",\r\n            light : \"#a2a2e2\"\r\n        },\r\n        error : {\r\n            main : \"#ff5f57\",\r\n            light : \"#ff938c\"\r\n        }\r\n    },\r\n\r\n    overrides : {\r\n        MuiTab : {\r\n            width : \"5em\",\r\n            root : {\r\n                width : \"5em\"\r\n            },\r\n            wrapper : {\r\n                width : \"fit-content\"\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport default theme;","import React from 'react';\r\nimport Main from './comp/Main';\r\nimport './App.css';\r\nimport {Provider} from \"react-redux\";\r\nimport HeaderContainer from \"./comp/Header/HeaderContainer/HeaderContainer\";\r\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\";\r\nimport theme from \"./utils/theme/theme\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nconst App = (props) => {\r\n  return (\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n          <Provider store={props.store}>\r\n              <ThemeProvider theme={theme}>\r\n                  <div className=\"App\">\r\n                      <HeaderContainer/>\r\n                      <Main/>\r\n                  </div>\r\n              </ThemeProvider>\r\n          </Provider>\r\n      </BrowserRouter>\r\n  );\r\n};\r\nexport default App;\r\n","import {friends} from \"../data/users\";\r\n\r\nlet initialState = {friends};\r\n\r\nconst sidebarReducer = (state, action) => {\r\n    return initialState;\r\n};\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport messageReducer from \"./reducers/messageReducer\";\r\nimport postReducer from \"./reducers/postReducer\";\r\nimport sidebarReducer from \"./reducers/sidebarReducer\";\r\nimport userListReducer from \"./reducers/userListReducer\";\r\nimport profileReducer from \"./reducers/profileReducer\";\r\nimport loginReducer from \"./reducers/loginReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\"\r\nimport initialReducer from \"./reducers/initialReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    messagesPage: messageReducer,\r\n    userPages: postReducer,\r\n    friendInfo: sidebarReducer,\r\n    userList: userListReducer,\r\n    profilePage: profileReducer,\r\n    loginData : loginReducer,\r\n    init : initialReducer,\r\n    form : formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport s from \"./redux_store\";\r\n\r\nlet render = (store = s) => {\r\n    ReactDOM.render(<App store={store}/>, document.getElementById('root'));\r\n};\r\n\r\nexport default render;","\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport render from \"./render\";\r\n\r\nrender();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserList\":\"UserList_UserList__2EIqO\",\"wrapper\":\"UserList_wrapper__1BZYq\",\"column\":\"UserList_column__a0jpE\",\"btn\":\"UserList_btn__qUYxt\",\"btns_wrapper\":\"UserList_btns_wrapper__FsbPQ\",\"page_counter\":\"UserList_page_counter__1MBex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Info\":\"Info_Info__3Aoe6\",\"avatar\":\"Info_avatar__xG-n1\",\"data\":\"Info_data__1mO8o\",\"contacts\":\"Info_contacts__3R0Wh\",\"fio\":\"Info_fio__3qeNE\"};","module.exports = __webpack_public_path__ + \"static/media/profile-header.d05892b6.jpeg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserListItem\":\"UserListItem_UserListItem__3ChfZ\",\"meta\":\"UserListItem_meta__1268y\",\"avatar\":\"UserListItem_avatar__2mLjR\",\"btn\":\"UserListItem_btn__Sj20V\",\"follow\":\"UserListItem_follow__1RdX1\",\"unfollow\":\"UserListItem_unfollow__NsEmq\",\"info\":\"UserListItem_info__1RZjo\",\"login\":\"UserListItem_login__1NbRQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__xzL9z\",\"loginForm\":\"Login_loginForm__1GfkO\",\"heading\":\"Login_heading__3MXPD\",\"input\":\"Login_input__2xjm-\",\"checkbox\":\"Login_checkbox__3wURm\",\"btn\":\"Login_btn__38lZ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__2RNie\",\"list\":\"Posts_list__1o-gi\",\"form\":\"Posts_form__V3yv6\",\"textarea\":\"Posts_textarea__3-d5J\",\"button\":\"Posts_button__ElwWQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextArea\":\"TextArea_TextArea__2prCQ\",\"textarea\":\"TextArea_textarea__3Uv7a\",\"error\":\"TextArea_error__3IeT6\",\"span\":\"TextArea_span__3MdUs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__ADmZg\",\"avatar\":\"Post_avatar__1nytp\",\"text\":\"Post_text__SY1ZK\",\"likes\":\"Post_likes__h6tK1\"};","module.exports = __webpack_public_path__ + \"static/media/ava.65808d6a.jpeg\";"],"sourceRoot":""}